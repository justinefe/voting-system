{
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use((0, _cors[\"default\"])());\n\nvar server = _http[\"default\"].createServer(app);\n\nvar port = process.env.PORT || 3020;\nserver.listen(port, function () {\n  console.log(\"Server is running on port \".concat(port));\n});\n(0, _routes[\"default\"])(app);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInNlcnZlciIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXRSxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7O0FBRUEsSUFBTUssTUFBTSxHQUFHQyxpQkFBS0MsWUFBTCxDQUFrQlIsR0FBbEIsQ0FBZjs7QUFDQSxJQUFNUyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBRUFOLE1BQU0sQ0FBQ08sTUFBUCxDQUFjSixJQUFkLEVBQW9CLFlBQU07QUFDeEJLLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixxQ0FBeUNOLElBQXpDO0FBQ0QsQ0FGRDtBQUlBLHdCQUFNVCxHQUFOO2VBRWVBLEciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHR0cCBmcm9tICdodHRwJztcclxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xyXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XHJcbmltcG9ydCByb3V0ZSBmcm9tICcuL3JvdXRlcyc7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5cclxuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcclxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAyMDtcclxuXHJcbnNlcnZlci5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0ICR7cG9ydH1gKTtcclxufSk7XHJcblxyXG5yb3V0ZShhcHApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBwO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "server",
        "http",
        "createServer",
        "port",
        "process",
        "env",
        "PORT",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQ,uBAAR;;AAEA,IAAMK,MAAM,GAAGC,iBAAKC,YAAL,CAAkBR,GAAlB,CAAf;;AACA,IAAMS,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAN,MAAM,CAACO,MAAP,CAAcJ,IAAd,EAAoB,YAAM;AACxBK,EAAAA,OAAO,CAACC,GAAR,qCAAyCN,IAAzC;AACD,CAFD;AAIA,wBAAMT,GAAN;eAEeA,G",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src",
      "sourcesContent": [
        "import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport route from './routes';\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(cors());\r\n\r\nconst server = http.createServer(app);\r\nconst port = process.env.PORT || 3020;\r\n\r\nserver.listen(port, () => {\r\n  console.log(`Server is running on port ${port}`);\r\n});\r\n\r\nroute(app);\r\n\r\nexport default app;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577887851499
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _registration = _interopRequireDefault(require(\"./registration\"));\n\nvar _adminisrtation = _interopRequireDefault(require(\"./adminisrtation\"));\n\n/* eslint-disable require-jsdoc */\n\n/* eslint-disable quote-props */\n// import swaggerUi from 'swagger-ui-express';\n// import swaggerDoc from '../../public/docs/swaggerDoc.json';\n// import notifications from './notifications';\nvar _default = function _default(app) {\n  app.get('/', function (req, res) {\n    return res.status(200).send({\n      status: 'success',\n      data: 'Welcome to the online voting system API'\n    });\n  });\n  app.use('/api/v1', [_user[\"default\"], _registration[\"default\"], _adminisrtation[\"default\"]]); // Add notification endpoints to application\n  //   app.use('/api/v1/notifications', notifications);\n  //   app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDoc));\n\n  app.all('/*', function (req, res) {\n    return res.status(404).send({\n      status: 'error',\n      error: 'This route is unavailable on this server'\n    });\n  }); // eslint-disable-next-line no-unused-vars\n\n  app.use(function (error, req, res, next) {\n    // don't print stack traces in production environment\n    // eslint-disable-next-line no-console\n    if (app.get('env') !== 'production') console.log(error.stack);\n    res.status(error.status || 500);\n    res.send({\n      status: 'error',\n      error: 'Internal Server Error'\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiLCJkYXRhIiwidXNlIiwidXNlciIsInJlZ2lzdHJhdGlvbiIsImFkbWlubmlzdHJhdGlvbiIsImFsbCIsImVycm9yIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJzdGFjayJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBSUE7O0FBQ0E7O0FBRUE7O0FBUEE7O0FBQ0E7QUFDQTtBQUNBO0FBR0E7ZUFJZSxrQkFBQ0EsR0FBRCxFQUFTO0FBQ3RCQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsV0FBY0EsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDOUNELE1BQUFBLE1BQU0sRUFBRSxTQURzQztBQUU5Q0UsTUFBQUEsSUFBSSxFQUFFO0FBRndDLEtBQXJCLENBQWQ7QUFBQSxHQUFiO0FBS0FOLEVBQUFBLEdBQUcsQ0FBQ08sR0FBSixDQUFRLFNBQVIsRUFBbUIsQ0FBQ0MsZ0JBQUQsRUFBT0Msd0JBQVAsRUFBcUJDLDBCQUFyQixDQUFuQixFQU5zQixDQVF0QjtBQUNBO0FBRUE7O0FBRUFWLEVBQUFBLEdBQUcsQ0FBQ1csR0FBSixDQUFRLElBQVIsRUFBYyxVQUFDVCxHQUFELEVBQU1DLEdBQU47QUFBQSxXQUFjQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMvQ0QsTUFBQUEsTUFBTSxFQUFFLE9BRHVDO0FBRS9DUSxNQUFBQSxLQUFLLEVBQUU7QUFGd0MsS0FBckIsQ0FBZDtBQUFBLEdBQWQsRUFic0IsQ0FpQnRCOztBQUNBWixFQUFBQSxHQUFHLENBQUNPLEdBQUosQ0FBUSxVQUFDSyxLQUFELEVBQVFWLEdBQVIsRUFBYUMsR0FBYixFQUFrQlUsSUFBbEIsRUFBMkI7QUFDakM7QUFDQTtBQUNBLFFBQUliLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEtBQVIsTUFBbUIsWUFBdkIsRUFBcUNhLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxLQUFLLENBQUNJLEtBQWxCO0FBQ3JDYixJQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBV1EsS0FBSyxDQUFDUixNQUFOLElBQWdCLEdBQTNCO0FBQ0FELElBQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTO0FBQ1BELE1BQUFBLE1BQU0sRUFBRSxPQUREO0FBRVBRLE1BQUFBLEtBQUssRUFBRTtBQUZBLEtBQVQ7QUFJRCxHQVREO0FBVUQsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgcmVxdWlyZS1qc2RvYyAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSBxdW90ZS1wcm9wcyAqL1xyXG4vLyBpbXBvcnQgc3dhZ2dlclVpIGZyb20gJ3N3YWdnZXItdWktZXhwcmVzcyc7XHJcbi8vIGltcG9ydCBzd2FnZ2VyRG9jIGZyb20gJy4uLy4uL3B1YmxpYy9kb2NzL3N3YWdnZXJEb2MuanNvbic7XHJcbmltcG9ydCB1c2VyIGZyb20gJy4vdXNlcic7XHJcbmltcG9ydCByZWdpc3RyYXRpb24gZnJvbSAnLi9yZWdpc3RyYXRpb24nO1xyXG4vLyBpbXBvcnQgbm90aWZpY2F0aW9ucyBmcm9tICcuL25vdGlmaWNhdGlvbnMnO1xyXG5pbXBvcnQgYWRtaW5uaXN0cmF0aW9uIGZyb20gJy4vYWRtaW5pc3J0YXRpb24nO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IChhcHApID0+IHtcclxuICBhcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7XHJcbiAgICBzdGF0dXM6ICdzdWNjZXNzJyxcclxuICAgIGRhdGE6ICdXZWxjb21lIHRvIHRoZSBvbmxpbmUgdm90aW5nIHN5c3RlbSBBUEknXHJcbiAgfSkpO1xyXG5cclxuICBhcHAudXNlKCcvYXBpL3YxJywgW3VzZXIsIHJlZ2lzdHJhdGlvbiwgYWRtaW5uaXN0cmF0aW9uXSk7XHJcblxyXG4gIC8vIEFkZCBub3RpZmljYXRpb24gZW5kcG9pbnRzIHRvIGFwcGxpY2F0aW9uXHJcbiAgLy8gICBhcHAudXNlKCcvYXBpL3YxL25vdGlmaWNhdGlvbnMnLCBub3RpZmljYXRpb25zKTtcclxuXHJcbiAgLy8gICBhcHAudXNlKCcvYXBpLWRvY3MnLCBzd2FnZ2VyVWkuc2VydmUsIHN3YWdnZXJVaS5zZXR1cChzd2FnZ2VyRG9jKSk7XHJcblxyXG4gIGFwcC5hbGwoJy8qJywgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7XHJcbiAgICBzdGF0dXM6ICdlcnJvcicsXHJcbiAgICBlcnJvcjogJ1RoaXMgcm91dGUgaXMgdW5hdmFpbGFibGUgb24gdGhpcyBzZXJ2ZXInXHJcbiAgfSkpO1xyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xyXG4gIGFwcC51c2UoKGVycm9yLCByZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgLy8gZG9uJ3QgcHJpbnQgc3RhY2sgdHJhY2VzIGluIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXHJcbiAgICBpZiAoYXBwLmdldCgnZW52JykgIT09ICdwcm9kdWN0aW9uJykgY29uc29sZS5sb2coZXJyb3Iuc3RhY2spO1xyXG4gICAgcmVzLnN0YXR1cyhlcnJvci5zdGF0dXMgfHwgNTAwKTtcclxuICAgIHJlcy5zZW5kKHtcclxuICAgICAgc3RhdHVzOiAnZXJyb3InLFxyXG4gICAgICBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcidcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "get",
        "req",
        "res",
        "status",
        "send",
        "data",
        "use",
        "user",
        "registration",
        "adminnistration",
        "all",
        "error",
        "next",
        "console",
        "log",
        "stack"
      ],
      "mappings": ";;;;;;;;;AAIA;;AACA;;AAEA;;AAPA;;AACA;AACA;AACA;AAGA;eAIe,kBAACA,GAAD,EAAS;AACtBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,WAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC9CD,MAAAA,MAAM,EAAE,SADsC;AAE9CE,MAAAA,IAAI,EAAE;AAFwC,KAArB,CAAd;AAAA,GAAb;AAKAN,EAAAA,GAAG,CAACO,GAAJ,CAAQ,SAAR,EAAmB,CAACC,gBAAD,EAAOC,wBAAP,EAAqBC,0BAArB,CAAnB,EANsB,CAQtB;AACA;AAEA;;AAEAV,EAAAA,GAAG,CAACW,GAAJ,CAAQ,IAAR,EAAc,UAACT,GAAD,EAAMC,GAAN;AAAA,WAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC/CD,MAAAA,MAAM,EAAE,OADuC;AAE/CQ,MAAAA,KAAK,EAAE;AAFwC,KAArB,CAAd;AAAA,GAAd,EAbsB,CAiBtB;;AACAZ,EAAAA,GAAG,CAACO,GAAJ,CAAQ,UAACK,KAAD,EAAQV,GAAR,EAAaC,GAAb,EAAkBU,IAAlB,EAA2B;AACjC;AACA;AACA,QAAIb,GAAG,CAACC,GAAJ,CAAQ,KAAR,MAAmB,YAAvB,EAAqCa,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAlB;AACrCb,IAAAA,GAAG,CAACC,MAAJ,CAAWQ,KAAK,CAACR,MAAN,IAAgB,GAA3B;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACPD,MAAAA,MAAM,EAAE,OADD;AAEPQ,MAAAA,KAAK,EAAE;AAFA,KAAT;AAID,GATD;AAUD,C",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
      "sourcesContent": [
        "/* eslint-disable require-jsdoc */\r\n/* eslint-disable quote-props */\r\n// import swaggerUi from 'swagger-ui-express';\r\n// import swaggerDoc from '../../public/docs/swaggerDoc.json';\r\nimport user from './user';\r\nimport registration from './registration';\r\n// import notifications from './notifications';\r\nimport adminnistration from './adminisrtation';\r\n\r\n\r\nexport default (app) => {\r\n  app.get('/', (req, res) => res.status(200).send({\r\n    status: 'success',\r\n    data: 'Welcome to the online voting system API'\r\n  }));\r\n\r\n  app.use('/api/v1', [user, registration, adminnistration]);\r\n\r\n  // Add notification endpoints to application\r\n  //   app.use('/api/v1/notifications', notifications);\r\n\r\n  //   app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDoc));\r\n\r\n  app.all('/*', (req, res) => res.status(404).send({\r\n    status: 'error',\r\n    error: 'This route is unavailable on this server'\r\n  }));\r\n  // eslint-disable-next-line no-unused-vars\r\n  app.use((error, req, res, next) => {\r\n    // don't print stack traces in production environment\r\n    // eslint-disable-next-line no-console\r\n    if (app.get('env') !== 'production') console.log(error.stack);\r\n    res.status(error.status || 500);\r\n    res.send({\r\n      status: 'error',\r\n      error: 'Internal Server Error'\r\n    });\r\n  });\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579008612518
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\routes\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _AuthController = _interopRequireDefault(require(\"../controllers/AuthController\"));\n\nvar _AdminController = _interopRequireDefault(require(\"../controllers/AdminController\"));\n\nvar _UserAuth = _interopRequireDefault(require(\"../middlewares/UserAuth\"));\n\nvar _AuthenticateUser = _interopRequireDefault(require(\"../middlewares/AuthenticateUser\"));\n\nvar _VerifyRoles = _interopRequireDefault(require(\"../middlewares/VerifyRoles\"));\n\n/* eslint-disable linebreak-style */\nvar userRouter = (0, _express.Router)();\nuserRouter.post('/auth/signup', _UserAuth[\"default\"].signup, _AuthController[\"default\"].signup);\n/*\r\nuserRouter.get('/user', authenticateUser, AuthController.show);\r\nuserRouter.put('/user', authenticateUser, AuthController.update);\r\n*/\n\nuserRouter.get('/oauth/google', _passport[\"default\"].authenticate('google', {\n  session: false\n}), _AuthController[\"default\"].social);\nuserRouter.get('/oauth/facebook', _passport[\"default\"].authenticate('facebook', {\n  session: false\n}), _AuthController[\"default\"].social);\nuserRouter.get('/auth/confirm_email', _AuthController[\"default\"].confirmEmail);\nuserRouter.post('/auth/signin', _UserAuth[\"default\"].signin, _AuthController[\"default\"].signin);\nuserRouter.get('/auth/signout', _AuthenticateUser[\"default\"], _AuthController[\"default\"].signout);\nuserRouter.post('/auth/forgot_password', _AuthController[\"default\"].sendResetLink);\nuserRouter.put('/auth/reset_password/:uuid/:token', _AuthController[\"default\"].resetPassword);\nuserRouter.get('/users', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifySupAdmin, _AdminController[\"default\"].getUsers);\nuserRouter.get('/users/:email', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifySupAdmin, _AdminController[\"default\"].getUser);\nuserRouter.put('/admin/assign_role', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifySupAdmin, _AdminController[\"default\"].assignRole);\nuserRouter.put('/admin/assign_permission', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifySupAdmin, _AdminController[\"default\"].assignPermission);\nvar _default = userRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXNlclJvdXRlciIsInBvc3QiLCJ1c2VyQXV0aCIsInNpZ251cCIsIkF1dGhDb250cm9sbGVyIiwiZ2V0IiwicGFzc3BvcnQiLCJhdXRoZW50aWNhdGUiLCJzZXNzaW9uIiwic29jaWFsIiwiY29uZmlybUVtYWlsIiwic2lnbmluIiwiYXV0aGVudGljYXRlVXNlciIsInNpZ25vdXQiLCJzZW5kUmVzZXRMaW5rIiwicHV0IiwicmVzZXRQYXNzd29yZCIsInZlcmlmeVJvbGVzIiwidmVyaWZ5U3VwQWRtaW4iLCJBZG1pbkNyb250cm9sbGVyIiwiZ2V0VXNlcnMiLCJnZXRVc2VyIiwiYXNzaWduUm9sZSIsImFzc2lnblBlcm1pc3Npb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQVBBO0FBU0EsSUFBTUEsVUFBVSxHQUFHLHNCQUFuQjtBQUVBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0IsY0FBaEIsRUFBZ0NDLHFCQUFTQyxNQUF6QyxFQUFpREMsMkJBQWVELE1BQWhFO0FBQ0E7Ozs7O0FBSUFILFVBQVUsQ0FBQ0ssR0FBWCxDQUFlLGVBQWYsRUFDRUMscUJBQVNDLFlBQVQsQ0FBc0IsUUFBdEIsRUFBZ0M7QUFBRUMsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBaEMsQ0FERixFQUN1REosMkJBQWVLLE1BRHRFO0FBR0FULFVBQVUsQ0FBQ0ssR0FBWCxDQUFlLGlCQUFmLEVBQ0VDLHFCQUFTQyxZQUFULENBQXNCLFVBQXRCLEVBQWtDO0FBQUVDLEVBQUFBLE9BQU8sRUFBRTtBQUFYLENBQWxDLENBREYsRUFDeURKLDJCQUFlSyxNQUR4RTtBQUdBVCxVQUFVLENBQUNLLEdBQVgsQ0FBZSxxQkFBZixFQUFzQ0QsMkJBQWVNLFlBQXJEO0FBQ0FWLFVBQVUsQ0FBQ0MsSUFBWCxDQUFnQixjQUFoQixFQUFnQ0MscUJBQVNTLE1BQXpDLEVBQWlEUCwyQkFBZU8sTUFBaEU7QUFFQVgsVUFBVSxDQUFDSyxHQUFYLENBQWUsZUFBZixFQUFnQ08sNEJBQWhDLEVBQWtEUiwyQkFBZVMsT0FBakU7QUFFQWIsVUFBVSxDQUFDQyxJQUFYLENBQWdCLHVCQUFoQixFQUF5Q0csMkJBQWVVLGFBQXhEO0FBQ0FkLFVBQVUsQ0FBQ2UsR0FBWCxDQUFlLG1DQUFmLEVBQW9EWCwyQkFBZVksYUFBbkU7QUFFQWhCLFVBQVUsQ0FBQ0ssR0FBWCxDQUFlLFFBQWYsRUFBeUJPLDRCQUF6QixFQUEyQ0ssd0JBQVlDLGNBQXZELEVBQXVFQyw0QkFBaUJDLFFBQXhGO0FBQ0FwQixVQUFVLENBQUNLLEdBQVgsQ0FBZSxlQUFmLEVBQWdDTyw0QkFBaEMsRUFBa0RLLHdCQUFZQyxjQUE5RCxFQUE4RUMsNEJBQWlCRSxPQUEvRjtBQUNBckIsVUFBVSxDQUFDZSxHQUFYLENBQWUsb0JBQWYsRUFBcUNILDRCQUFyQyxFQUF1REssd0JBQVlDLGNBQW5FLEVBQW1GQyw0QkFBaUJHLFVBQXBHO0FBQ0F0QixVQUFVLENBQUNlLEdBQVgsQ0FBZSwwQkFBZixFQUEyQ0gsNEJBQTNDLEVBQTZESyx3QkFBWUMsY0FBekUsRUFBeUZDLDRCQUFpQkksZ0JBQTFHO2VBR2V2QixVIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBsaW5lYnJlYWstc3R5bGUgKi9cclxuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBwYXNzcG9ydCBmcm9tICdwYXNzcG9ydCc7XHJcbmltcG9ydCBBdXRoQ29udHJvbGxlciBmcm9tICcuLi9jb250cm9sbGVycy9BdXRoQ29udHJvbGxlcic7XHJcbmltcG9ydCBBZG1pbkNyb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL0FkbWluQ29udHJvbGxlcic7XHJcbmltcG9ydCB1c2VyQXV0aCBmcm9tICcuLi9taWRkbGV3YXJlcy9Vc2VyQXV0aCc7XHJcbmltcG9ydCBhdXRoZW50aWNhdGVVc2VyIGZyb20gJy4uL21pZGRsZXdhcmVzL0F1dGhlbnRpY2F0ZVVzZXInO1xyXG5pbXBvcnQgdmVyaWZ5Um9sZXMgZnJvbSAnLi4vbWlkZGxld2FyZXMvVmVyaWZ5Um9sZXMnO1xyXG5cclxuY29uc3QgdXNlclJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxudXNlclJvdXRlci5wb3N0KCcvYXV0aC9zaWdudXAnLCB1c2VyQXV0aC5zaWdudXAsIEF1dGhDb250cm9sbGVyLnNpZ251cCk7XHJcbi8qXHJcbnVzZXJSb3V0ZXIuZ2V0KCcvdXNlcicsIGF1dGhlbnRpY2F0ZVVzZXIsIEF1dGhDb250cm9sbGVyLnNob3cpO1xyXG51c2VyUm91dGVyLnB1dCgnL3VzZXInLCBhdXRoZW50aWNhdGVVc2VyLCBBdXRoQ29udHJvbGxlci51cGRhdGUpO1xyXG4qL1xyXG51c2VyUm91dGVyLmdldCgnL29hdXRoL2dvb2dsZScsXHJcbiAgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdnb29nbGUnLCB7IHNlc3Npb246IGZhbHNlIH0pLCBBdXRoQ29udHJvbGxlci5zb2NpYWwpO1xyXG5cclxudXNlclJvdXRlci5nZXQoJy9vYXV0aC9mYWNlYm9vaycsXHJcbiAgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdmYWNlYm9vaycsIHsgc2Vzc2lvbjogZmFsc2UgfSksIEF1dGhDb250cm9sbGVyLnNvY2lhbCk7XHJcblxyXG51c2VyUm91dGVyLmdldCgnL2F1dGgvY29uZmlybV9lbWFpbCcsIEF1dGhDb250cm9sbGVyLmNvbmZpcm1FbWFpbCk7XHJcbnVzZXJSb3V0ZXIucG9zdCgnL2F1dGgvc2lnbmluJywgdXNlckF1dGguc2lnbmluLCBBdXRoQ29udHJvbGxlci5zaWduaW4pO1xyXG5cclxudXNlclJvdXRlci5nZXQoJy9hdXRoL3NpZ25vdXQnLCBhdXRoZW50aWNhdGVVc2VyLCBBdXRoQ29udHJvbGxlci5zaWdub3V0KTtcclxuXHJcbnVzZXJSb3V0ZXIucG9zdCgnL2F1dGgvZm9yZ290X3Bhc3N3b3JkJywgQXV0aENvbnRyb2xsZXIuc2VuZFJlc2V0TGluayk7XHJcbnVzZXJSb3V0ZXIucHV0KCcvYXV0aC9yZXNldF9wYXNzd29yZC86dXVpZC86dG9rZW4nLCBBdXRoQ29udHJvbGxlci5yZXNldFBhc3N3b3JkKTtcclxuXHJcbnVzZXJSb3V0ZXIuZ2V0KCcvdXNlcnMnLCBhdXRoZW50aWNhdGVVc2VyLCB2ZXJpZnlSb2xlcy52ZXJpZnlTdXBBZG1pbiwgQWRtaW5Dcm9udHJvbGxlci5nZXRVc2Vycyk7XHJcbnVzZXJSb3V0ZXIuZ2V0KCcvdXNlcnMvOmVtYWlsJywgYXV0aGVudGljYXRlVXNlciwgdmVyaWZ5Um9sZXMudmVyaWZ5U3VwQWRtaW4sIEFkbWluQ3JvbnRyb2xsZXIuZ2V0VXNlcik7XHJcbnVzZXJSb3V0ZXIucHV0KCcvYWRtaW4vYXNzaWduX3JvbGUnLCBhdXRoZW50aWNhdGVVc2VyLCB2ZXJpZnlSb2xlcy52ZXJpZnlTdXBBZG1pbiwgQWRtaW5Dcm9udHJvbGxlci5hc3NpZ25Sb2xlKTtcclxudXNlclJvdXRlci5wdXQoJy9hZG1pbi9hc3NpZ25fcGVybWlzc2lvbicsIGF1dGhlbnRpY2F0ZVVzZXIsIHZlcmlmeVJvbGVzLnZlcmlmeVN1cEFkbWluLCBBZG1pbkNyb250cm9sbGVyLmFzc2lnblBlcm1pc3Npb24pO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZXJSb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "userRouter",
        "post",
        "userAuth",
        "signup",
        "AuthController",
        "get",
        "passport",
        "authenticate",
        "session",
        "social",
        "confirmEmail",
        "signin",
        "authenticateUser",
        "signout",
        "sendResetLink",
        "put",
        "resetPassword",
        "verifyRoles",
        "verifySupAdmin",
        "AdminCrontroller",
        "getUsers",
        "getUser",
        "assignRole",
        "assignPermission"
      ],
      "mappings": ";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAPA;AASA,IAAMA,UAAU,GAAG,sBAAnB;AAEAA,UAAU,CAACC,IAAX,CAAgB,cAAhB,EAAgCC,qBAASC,MAAzC,EAAiDC,2BAAeD,MAAhE;AACA;;;;;AAIAH,UAAU,CAACK,GAAX,CAAe,eAAf,EACEC,qBAASC,YAAT,CAAsB,QAAtB,EAAgC;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAhC,CADF,EACuDJ,2BAAeK,MADtE;AAGAT,UAAU,CAACK,GAAX,CAAe,iBAAf,EACEC,qBAASC,YAAT,CAAsB,UAAtB,EAAkC;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAlC,CADF,EACyDJ,2BAAeK,MADxE;AAGAT,UAAU,CAACK,GAAX,CAAe,qBAAf,EAAsCD,2BAAeM,YAArD;AACAV,UAAU,CAACC,IAAX,CAAgB,cAAhB,EAAgCC,qBAASS,MAAzC,EAAiDP,2BAAeO,MAAhE;AAEAX,UAAU,CAACK,GAAX,CAAe,eAAf,EAAgCO,4BAAhC,EAAkDR,2BAAeS,OAAjE;AAEAb,UAAU,CAACC,IAAX,CAAgB,uBAAhB,EAAyCG,2BAAeU,aAAxD;AACAd,UAAU,CAACe,GAAX,CAAe,mCAAf,EAAoDX,2BAAeY,aAAnE;AAEAhB,UAAU,CAACK,GAAX,CAAe,QAAf,EAAyBO,4BAAzB,EAA2CK,wBAAYC,cAAvD,EAAuEC,4BAAiBC,QAAxF;AACApB,UAAU,CAACK,GAAX,CAAe,eAAf,EAAgCO,4BAAhC,EAAkDK,wBAAYC,cAA9D,EAA8EC,4BAAiBE,OAA/F;AACArB,UAAU,CAACe,GAAX,CAAe,oBAAf,EAAqCH,4BAArC,EAAuDK,wBAAYC,cAAnE,EAAmFC,4BAAiBG,UAApG;AACAtB,UAAU,CAACe,GAAX,CAAe,0BAAf,EAA2CH,4BAA3C,EAA6DK,wBAAYC,cAAzE,EAAyFC,4BAAiBI,gBAA1G;eAGevB,U",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
      "sourcesContent": [
        "/* eslint-disable linebreak-style */\r\nimport { Router } from 'express';\r\nimport passport from 'passport';\r\nimport AuthController from '../controllers/AuthController';\r\nimport AdminCrontroller from '../controllers/AdminController';\r\nimport userAuth from '../middlewares/UserAuth';\r\nimport authenticateUser from '../middlewares/AuthenticateUser';\r\nimport verifyRoles from '../middlewares/VerifyRoles';\r\n\r\nconst userRouter = Router();\r\n\r\nuserRouter.post('/auth/signup', userAuth.signup, AuthController.signup);\r\n/*\r\nuserRouter.get('/user', authenticateUser, AuthController.show);\r\nuserRouter.put('/user', authenticateUser, AuthController.update);\r\n*/\r\nuserRouter.get('/oauth/google',\r\n  passport.authenticate('google', { session: false }), AuthController.social);\r\n\r\nuserRouter.get('/oauth/facebook',\r\n  passport.authenticate('facebook', { session: false }), AuthController.social);\r\n\r\nuserRouter.get('/auth/confirm_email', AuthController.confirmEmail);\r\nuserRouter.post('/auth/signin', userAuth.signin, AuthController.signin);\r\n\r\nuserRouter.get('/auth/signout', authenticateUser, AuthController.signout);\r\n\r\nuserRouter.post('/auth/forgot_password', AuthController.sendResetLink);\r\nuserRouter.put('/auth/reset_password/:uuid/:token', AuthController.resetPassword);\r\n\r\nuserRouter.get('/users', authenticateUser, verifyRoles.verifySupAdmin, AdminCrontroller.getUsers);\r\nuserRouter.get('/users/:email', authenticateUser, verifyRoles.verifySupAdmin, AdminCrontroller.getUser);\r\nuserRouter.put('/admin/assign_role', authenticateUser, verifyRoles.verifySupAdmin, AdminCrontroller.assignRole);\r\nuserRouter.put('/admin/assign_permission', authenticateUser, verifyRoles.verifySupAdmin, AdminCrontroller.assignPermission);\r\n\r\n\r\nexport default userRouter;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578501652242
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\controllers\\\\AuthController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\AuthController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\AuthController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\AuthController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
        "sourceFileName": "AuthController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _UserRepository = _interopRequireDefault(require(\"../repositories/UserRepository\"));\n\nvar _utils = require(\"../utils\");\n\nvar _tokenProcessor = require(\"../modules/tokenProcessor\");\n\nvar _sendResponse = require(\"../utils/sendResponse\");\n\nvar _validator = require(\"../modules/validator\");\n\nvar _emails = _interopRequireDefault(require(\"../services/emails\"));\n\nvar _hashPassword = require(\"../utils/hashPassword\");\n\nvar _getUserInfo = _interopRequireDefault(require(\"../utils/getUserInfo\"));\n\n/* eslint-disable class-methods-use-this */\n\n/* eslint-disable camelcase */\n\n/**\r\n * @description User controller\r\n */\nvar AuthController =\n/*#__PURE__*/\nfunction () {\n  function AuthController() {\n    (0, _classCallCheck2[\"default\"])(this, AuthController);\n  }\n\n  (0, _createClass2[\"default\"])(AuthController, [{\n    key: \"signup\",\n\n    /**\r\n     * @description Handles user signup form\r\n     * \r\n     * @param {Object} req - HTTP request object\r\n     *\r\n     * @param {Object} res - HTTP response object\r\n     *\r\n     * @param {Function} next - Function to trigger next middleware\r\n     *\r\n     * @return {Object} Return success message and account creation status\r\n     */\n    value: function () {\n      var _signup = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(_ref, res, next) {\n        var protocol, headers, body, userData, email, first_name, last_name, result, newUser, token, link, userInformation;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                protocol = _ref.protocol, headers = _ref.headers, body = _ref.body;\n                _context.prev = 1;\n                userData = (0, _validator.magicTrimmer)(body);\n                email = userData.email, first_name = userData.first_name, last_name = userData.last_name;\n                _context.next = 6;\n                return _UserRepository[\"default\"].getOne({\n                  email: email\n                });\n\n              case 6:\n                result = _context.sent;\n\n                if (result) {\n                  _context.next = 21;\n                  break;\n                }\n\n                body.password = (0, _hashPassword.hashPassword)(body.password);\n                _context.next = 11;\n                return _UserRepository[\"default\"].create(body);\n\n              case 11:\n                newUser = _context.sent;\n                token = (0, _tokenProcessor.createToken)({\n                  uuid: newUser.uuid,\n                  first_name: first_name,\n                  last_name: last_name,\n                  email: email,\n                  role: newUser.role\n                });\n                newUser.token = token;\n                link = \"\".concat(protocol, \"//\").concat(headers.host, \"/api/v1/auth/confirm_email?token=\").concat(token, \"&id=\").concat(newUser.uuid);\n                _context.next = 17;\n                return (0, _emails[\"default\"])(email, 'Thejust Online Voting System Verification', \"Please kindly click on the link below to verify your account <br/> \".concat(link));\n\n              case 17:\n                userInformation = {\n                  message: 'User account created successfully',\n                  token: token\n                };\n                (0, _sendResponse.sendSuccessResponse)(res, 201, userInformation);\n                _context.next = 22;\n                break;\n\n              case 21:\n                return _context.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 409, \"User \".concat(email, \" already exists\")));\n\n              case 22:\n                _context.next = 27;\n                break;\n\n              case 24:\n                _context.prev = 24;\n                _context.t0 = _context[\"catch\"](1);\n                return _context.abrupt(\"return\", next(_context.t0));\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 24]]);\n      }));\n\n      function signup(_x, _x2, _x3) {\n        return _signup.apply(this, arguments);\n      }\n\n      return signup;\n    }()\n    /**\r\n     * @description handles confirmation email sent to user's to verify its validity\r\n     * \r\n     * @param {object} req\r\n     *\r\n     * @param {object} res\r\n     *\r\n     * @returns {object} returns a response object\r\n     */\n\n  }, {\n    key: \"confirmEmail\",\n    value: function () {\n      var _confirmEmail = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(req, res) {\n        var token, verify, user;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                token = req.query.token;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return (0, _tokenProcessor.verifyToken)(token);\n\n              case 4:\n                verify = _context2.sent;\n                _context2.next = 7;\n                return _UserRepository[\"default\"].getOne({\n                  uuid: verify.uuid\n                });\n\n              case 7:\n                user = _context2.sent;\n\n                if (!(user.dataValues.is_verified === true)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, 'Account verified already'));\n\n              case 10:\n                _context2.next = 12;\n                return _UserRepository[\"default\"].update({\n                  is_verified: true\n                }, verify.uuid);\n\n              case 12:\n                return _context2.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 200, 'Email verified successfully'));\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](1);\n                return _context2.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, 'Unable to verifiy email'));\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 15]]);\n      }));\n\n      function confirmEmail(_x4, _x5) {\n        return _confirmEmail.apply(this, arguments);\n      }\n\n      return confirmEmail;\n    }()\n    /**\r\n     * @description handles login from Google, twitter and Facebook\r\n     *\r\n     * @param {object} user accepts user details object\r\n     *\r\n     * @param {res} res object*\r\n     *\r\n     * @param {function} next returns error if process fails\r\n     *\r\n     * @returns {object} returns a new or existing user's details\r\n     */\n\n  }, {\n    key: \"social\",\n    value: function () {\n      var _social = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(_ref2, res, next) {\n        var user, social_id, name, image, email, provider, checkUser, newUser;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                user = _ref2.user;\n                _context3.prev = 1;\n                social_id = user.social_id, name = user.name, image = user.image, email = user.email, provider = user.provider;\n\n                if (!(provider === 'facebook')) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 6;\n                return _UserRepository[\"default\"].getOne({\n                  facebook_id: social_id\n                });\n\n              case 6:\n                _context3.t0 = _context3.sent;\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.next = 11;\n                return _UserRepository[\"default\"].getOne({\n                  google_id: social_id\n                });\n\n              case 11:\n                _context3.t0 = _context3.sent;\n\n              case 12:\n                checkUser = _context3.t0;\n\n                if (!checkUser) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", (0, _sendResponse.sendSuccessResponse)(res, 201, (0, _getUserInfo[\"default\"])(checkUser)));\n\n              case 15:\n                _context3.next = 17;\n                return _UserRepository[\"default\"].create({\n                  name: name,\n                  email: email,\n                  is_verified: true,\n                  image_url: image,\n                  facebook_id: provider === 'facebook' ? social_id : '',\n                  google_id: provider === 'google' ? social_id : '',\n                  role: 'employee'\n                });\n\n              case 17:\n                newUser = _context3.sent;\n                return _context3.abrupt(\"return\", (0, _sendResponse.sendSuccessResponse)(res, 201, (0, _getUserInfo[\"default\"])(newUser)));\n\n              case 21:\n                _context3.prev = 21;\n                _context3.t1 = _context3[\"catch\"](1);\n                return _context3.abrupt(\"return\", next(_context3.t1));\n\n              case 24:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 21]]);\n      }));\n\n      function social(_x6, _x7, _x8) {\n        return _social.apply(this, arguments);\n      }\n\n      return social;\n    }()\n    /** \r\n     * @description Uses login with email and password\r\n     *\r\n     * @param {req} req the request object\r\n     *\r\n     * @param {res} res the response object\r\n     *\r\n     * @param {object} body this is the body of the request\r\n     *\r\n     * @returns {obj} returns an response object\r\n     */\n\n  }, {\n    key: \"signin\",\n    value: function () {\n      var _signin = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(_ref3, res) {\n        var body, email, password, foundUser, confirmPassword, token, userInformation;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                body = _ref3.body;\n                email = body.email, password = body.password;\n                _context4.next = 4;\n                return _UserRepository[\"default\"].getOne({\n                  email: email\n                });\n\n              case 4:\n                foundUser = _context4.sent;\n\n                if (foundUser) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 404, 'User not found'));\n\n              case 7:\n                confirmPassword = (0, _hashPassword.unhashPassword)(password, foundUser.dataValues.password);\n\n                if (confirmPassword) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, 'Incorrect Password'));\n\n              case 10:\n                if (foundUser.dataValues.is_verified) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 401, 'Verify Your Account'));\n\n              case 12:\n                _context4.next = 14;\n                return (0, _tokenProcessor.createToken)({\n                  uuid: foundUser.uuid,\n                  role: foundUser.role,\n                  email: foundUser.email,\n                  role_uuid: foundUser.role_uuid\n                });\n\n              case 14:\n                token = _context4.sent;\n                userInformation = {\n                  token: token\n                };\n                return _context4.abrupt(\"return\", (0, _sendResponse.sendSuccessResponse)(res, 200, userInformation));\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function signin(_x9, _x10) {\n        return _signin.apply(this, arguments);\n      }\n\n      return signin;\n    }()\n    /**\r\n    * @description Sends reset link to user Email\r\n    *\r\n    * @param {Object} req - Request object\r\n    *\r\n    * @param {Object} res - Response object\r\n    *\r\n    * @returns {Object} object containing user data which will be embedded in link sent to user\r\n    *\r\n    * @memberof UserController\r\n    */\n\n  }, {\n    key: \"sendResetLink\",\n    value: function () {\n      var _sendResetLink = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5(req, res) {\n        var email, _ref4, uuid, token, link;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                email = req.body.email;\n\n                if ((0, _validator.inValidEmail)(email)) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                _context5.next = 4;\n                return _UserRepository[\"default\"].getOne({\n                  email: email\n                });\n\n              case 4:\n                _ref4 = _context5.sent;\n                uuid = _ref4.uuid;\n                _context5.next = 8;\n                return (0, _tokenProcessor.createToken)({\n                  uuid: uuid,\n                  email: email\n                });\n\n              case 8:\n                token = _context5.sent;\n                link = \"\".concat(req.protocol, \"//\").concat(req.headers.host, \"/api/v1/auth/reset_password/\").concat(uuid, \"/\").concat(token);\n                _context5.prev = 10;\n                _context5.next = 13;\n                return (0, _emails[\"default\"])(email, 'Thejust Password Reset', \"Please kindly click the link below to reset your password <br/> \".concat(link));\n\n              case 13:\n                return _context5.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 200, 'A password reset link has been sent to your mailbox'));\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](10);\n                return _context5.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 500, 'Unable to perform the operation at the moment'));\n\n              case 19:\n                return _context5.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, (0, _validator.inValidEmail)(email)));\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[10, 16]]);\n      }));\n\n      function sendResetLink(_x11, _x12) {\n        return _sendResetLink.apply(this, arguments);\n      }\n\n      return sendResetLink;\n    }()\n    /**\r\n     * @description Updates the user's password\r\n     *\r\n     * @param {object} req - request object\r\n     *\r\n     * @param {object} res - response object\r\n     *\r\n     * @param {object} next - response object\r\n     *\r\n     * @returns {object} either error or success\r\n     */\n\n  }, {\n    key: \"resetPassword\",\n    value: function () {\n      var _resetPassword = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6(req, res, next) {\n        var password, uuid;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                password = req.body.password;\n                uuid = req.params.uuid;\n\n                if ((0, _validator.inValidPassword)(password)) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                _context6.prev = 3;\n                _context6.next = 6;\n                return _UserRepository[\"default\"].update(uuid, {\n                  password: password\n                });\n\n              case 6:\n                return _context6.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 200, 'Password Reset Successfully'));\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](3);\n                return _context6.abrupt(\"return\", next(_context6.t0));\n\n              case 12:\n                return _context6.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, (0, _validator.inValidPassword)(password)));\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[3, 9]]);\n      }));\n\n      function resetPassword(_x13, _x14, _x15) {\n        return _resetPassword.apply(this, arguments);\n      }\n\n      return resetPassword;\n    }()\n    /*\r\n    /**\r\n     * @description Function to get specific user details\r\n     *\r\n     * @param {Object} req - HTTP request object\r\n     *\r\n     * @param {Object} res - HTTP response object\r\n     *\r\n     * @param {Function} next - Function to trigger next middleware\r\n     *\r\n     * @return {Object} Object resoponse with current user information status\r\n     */\n\n    /*\r\n    async show({ userData }, res, next) {\r\n      const { dataValues: { email } } = userData;\r\n      try {\r\n        const { dataValues: user } = await UserRepository.getOne({ email });\r\n        if (user) {\r\n          user.password = undefined;\r\n          return sendSuccessResponse(res, 200, user);\r\n        }\r\n        return sendErrorResponse(res, 400, 'User not found');\r\n      } catch (error) {\r\n        next(error);\r\n      }\r\n    }\r\n    */\n\n    /**\r\n     * @description logs out a user\r\n     *\r\n     * @param {object} req request from body to log out\r\n     *\r\n     * @param {object} res response to the body\r\n     *\r\n     * @returns {object} success\r\n     */\n\n  }, {\n    key: \"signout\",\n    value: function () {\n      var _signout = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(req, res) {\n        var token;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                token = req.headers.authorization.split(' ')[1] || req.headers.authorization;\n                _context7.next = 4;\n                return (0, _utils.blackListThisToken)(token);\n\n              case 4:\n                return _context7.abrupt(\"return\", (0, _sendResponse.sendSuccessResponse)(res, 200, 'You have succesfully signout'));\n\n              case 7:\n                _context7.prev = 7;\n                _context7.t0 = _context7[\"catch\"](0);\n                return _context7.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, _context7.t0));\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 7]]);\n      }));\n\n      function signout(_x16, _x17) {\n        return _signout.apply(this, arguments);\n      }\n\n      return signout;\n    }()\n    /*\r\n    /**\r\n     * @description Function to update user details\r\n     *\r\n     * @param {Object} req - HTTP request object\r\n     *\r\n     * @param {Object} res - HTTP response object\r\n     *\r\n     * @param {Function} next - Function to trigger next middleware\r\n     *\r\n     * @return {Object} Object resoponse with current user created status\r\n     */\n\n    /*\r\n    async update(req, res, next) {\r\n    const { body } = req;\r\n    try {\r\n     const userData = magicTrimmer(body);\r\n     const { email } = userData;\r\n     const result = await UserRepository.getOne({ email });\r\n     if (!result) {\r\n       const { userData: { dataValues: { uuid: userId } } } = req;\r\n       const [numberOfEdits, [{ dataValues }]] = await UserRepository.update(userId, body);\r\n       numberOfEdits > 0\r\n         ? sendSuccessResponse(res, 200, dataValues)\r\n         : sendSuccessResponse(res, 200, 'No edit made');\r\n     } else {\r\n       return sendErrorResponse(res, 409, `User ${email} already exists`);\r\n     }\r\n    } catch (error) {\r\n     next(error);\r\n    }\r\n    }\r\n    */\n\n  }]);\n  return AuthController;\n}();\n\nvar _default = new AuthController();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "AuthController.js"
      ],
      "names": [
        "AuthController",
        "res",
        "next",
        "protocol",
        "headers",
        "body",
        "userData",
        "email",
        "first_name",
        "last_name",
        "UserRepository",
        "getOne",
        "result",
        "password",
        "create",
        "newUser",
        "token",
        "uuid",
        "role",
        "link",
        "host",
        "userInformation",
        "message",
        "req",
        "query",
        "verify",
        "user",
        "dataValues",
        "is_verified",
        "update",
        "social_id",
        "name",
        "image",
        "provider",
        "facebook_id",
        "google_id",
        "checkUser",
        "image_url",
        "foundUser",
        "confirmPassword",
        "role_uuid",
        "params",
        "authorization",
        "split"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AATA;;AACA;;AAWA;;;IAGMA,c;;;;;;;;;;AACJ;;;;;;;;;;;;;;0DAW0CC,G,EAAKC,I;;;;;;AAAhCC,gBAAAA,Q,QAAAA,Q,EAAUC,O,QAAAA,O,EAASC,I,QAAAA,I;;AAExBC,gBAAAA,Q,GAAW,6BAAaD,IAAb,C;AACTE,gBAAAA,K,GAAiCD,Q,CAAjCC,K,EAAOC,U,GAA0BF,Q,CAA1BE,U,EAAYC,S,GAAcH,Q,CAAdG,S;;uBACNC,2BAAeC,MAAf,CAAsB;AAAEJ,kBAAAA,KAAK,EAALA;AAAF,iBAAtB,C;;;AAAfK,gBAAAA,M;;oBACDA,M;;;;;AACHP,gBAAAA,IAAI,CAACQ,QAAL,GAAgB,gCAAaR,IAAI,CAACQ,QAAlB,CAAhB;;uBACsBH,2BAAeI,MAAf,CAAsBT,IAAtB,C;;;AAAhBU,gBAAAA,O;AACAC,gBAAAA,K,GAAQ,iCACZ;AACEC,kBAAAA,IAAI,EAAEF,OAAO,CAACE,IADhB;AAEET,kBAAAA,UAAU,EAAVA,UAFF;AAGEC,kBAAAA,SAAS,EAATA,SAHF;AAIEF,kBAAAA,KAAK,EAALA,KAJF;AAKEW,kBAAAA,IAAI,EAAEH,OAAO,CAACG;AALhB,iBADY,C;AASdH,gBAAAA,OAAO,CAACC,KAAR,GAAgBA,KAAhB;AACMG,gBAAAA,I,aAAUhB,Q,eAAaC,OAAO,CAACgB,I,8CAAwCJ,K,iBAAYD,OAAO,CAACE,I;;uBAC3F,wBACJV,KADI,EAEJ,2CAFI,+EAGkEY,IAHlE,E;;;AAKAE,gBAAAA,e,GAAkB;AACtBC,kBAAAA,OAAO,EAAE,mCADa;AAEtBN,kBAAAA,KAAK,EAALA;AAFsB,iB;AAIxB,uDAAoBf,GAApB,EAAyB,GAAzB,EAA8BoB,eAA9B;;;;;iDAEO,qCAAkBpB,GAAlB,EAAuB,GAAvB,iBAAoCM,KAApC,qB;;;;;;;;;iDAGFL,IAAI,a;;;;;;;;;;;;;;;;AAIf;;;;;;;;;;;;;;;qDASmBqB,G,EAAKtB,G;;;;;;AACde,gBAAAA,K,GAAUO,GAAG,CAACC,K,CAAdR,K;;;uBAEe,iCAAYA,KAAZ,C;;;AAAfS,gBAAAA,M;;uBACaf,2BAAeC,MAAf,CAAsB;AAAEM,kBAAAA,IAAI,EAAEQ,MAAM,CAACR;AAAf,iBAAtB,C;;;AAAbS,gBAAAA,I;;sBACFA,IAAI,CAACC,UAAL,CAAgBC,WAAhB,KAAgC,I;;;;;kDAAa,qCAAkB3B,GAAlB,EAAuB,GAAvB,EAA4B,0BAA5B,C;;;;uBAC3CS,2BAAemB,MAAf,CAAsB;AAAED,kBAAAA,WAAW,EAAE;AAAf,iBAAtB,EAA6CH,MAAM,CAACR,IAApD,C;;;kDACC,mCAAgBhB,GAAhB,EAAqB,GAArB,EAA0B,6BAA1B,C;;;;;kDAEA,qCAAkBA,GAAlB,EAAuB,GAAvB,EAA4B,yBAA5B,C;;;;;;;;;;;;;;;;AAIX;;;;;;;;;;;;;;;;;4DAWuBA,G,EAAKC,I;;;;;;AAAbwB,gBAAAA,I,SAAAA,I;;AAGTI,gBAAAA,S,GAKEJ,I,CALFI,S,EACAC,I,GAIEL,I,CAJFK,I,EACAC,K,GAGEN,I,CAHFM,K,EACAzB,K,GAEEmB,I,CAFFnB,K,EACA0B,Q,GACEP,I,CADFO,Q;;sBAGgBA,QAAQ,KAAK,U;;;;;;uBACrBvB,2BAAeC,MAAf,CAAsB;AAAEuB,kBAAAA,WAAW,EAAEJ;AAAf,iBAAtB,C;;;;;;;;;uBACApB,2BAAeC,MAAf,CAAsB;AAAEwB,kBAAAA,SAAS,EAAEL;AAAb,iBAAtB,C;;;;;;AAFJM,gBAAAA,S;;qBAGFA,S;;;;;kDAAkB,uCAAoBnC,GAApB,EAAyB,GAAzB,EAA8B,6BAASmC,SAAT,CAA9B,C;;;;uBAEA1B,2BAAeI,MAAf,CAAsB;AAC1CiB,kBAAAA,IAAI,EAAJA,IAD0C;AAE1CxB,kBAAAA,KAAK,EAALA,KAF0C;AAG1CqB,kBAAAA,WAAW,EAAE,IAH6B;AAI1CS,kBAAAA,SAAS,EAAEL,KAJ+B;AAK1CE,kBAAAA,WAAW,EAAGD,QAAQ,KAAK,UAAb,GAA0BH,SAA1B,GAAsC,EALV;AAM1CK,kBAAAA,SAAS,EAAGF,QAAQ,KAAK,QAAb,GAAwBH,SAAxB,GAAoC,EANN;AAO1CZ,kBAAAA,IAAI,EAAE;AAPoC,iBAAtB,C;;;AAAhBH,gBAAAA,O;kDASC,uCAAoBd,GAApB,EAAyB,GAAzB,EAA8B,6BAASc,OAAT,CAA9B,C;;;;;kDAEAb,IAAI,c;;;;;;;;;;;;;;;;AAIf;;;;;;;;;;;;;;;;;4DAWuBD,G;;;;;;AAARI,gBAAAA,I,SAAAA,I;AACLE,gBAAAA,K,GAAoBF,I,CAApBE,K,EAAOM,Q,GAAaR,I,CAAbQ,Q;;uBACSH,2BAAeC,MAAf,CAAsB;AAAEJ,kBAAAA,KAAK,EAALA;AAAF,iBAAtB,C;;;AAAlB+B,gBAAAA,S;;oBACDA,S;;;;;kDAAkB,qCAAkBrC,GAAlB,EAAuB,GAAvB,EAA4B,gBAA5B,C;;;AACjBsC,gBAAAA,e,GAAkB,kCAAe1B,QAAf,EAAyByB,SAAS,CAACX,UAAV,CAAqBd,QAA9C,C;;oBACnB0B,e;;;;;kDAAwB,qCAAkBtC,GAAlB,EAAuB,GAAvB,EAA4B,oBAA5B,C;;;oBACxBqC,SAAS,CAACX,UAAV,CAAqBC,W;;;;;kDAAoB,qCAAkB3B,GAAlB,EAAuB,GAAvB,EAA4B,qBAA5B,C;;;;uBAC1B,iCAClB;AACEgB,kBAAAA,IAAI,EAAEqB,SAAS,CAACrB,IADlB;AAEEC,kBAAAA,IAAI,EAAEoB,SAAS,CAACpB,IAFlB;AAGEX,kBAAAA,KAAK,EAAE+B,SAAS,CAAC/B,KAHnB;AAIEiC,kBAAAA,SAAS,EAAEF,SAAS,CAACE;AAJvB,iBADkB,C;;;AAAdxB,gBAAAA,K;AAQAK,gBAAAA,e,GAAkB;AACtBL,kBAAAA,KAAK,EAALA;AADsB,iB;kDAGjB,uCAAoBf,GAApB,EAAyB,GAAzB,EAA8BoB,eAA9B,C;;;;;;;;;;;;;;;;AAIT;;;;;;;;;;;;;;;;;qDAWoBE,G,EAAKtB,G;;;;;;;AACfM,gBAAAA,K,GAAUgB,GAAG,CAAClB,I,CAAdE,K;;oBACH,6BAAaA,KAAb,C;;;;;;uBACoBG,2BAAeC,MAAf,CAAsB;AAAEJ,kBAAAA,KAAK,EAALA;AAAF,iBAAtB,C;;;;AAAfU,gBAAAA,I,SAAAA,I;;uBACY,iCAAY;AAAEA,kBAAAA,IAAI,EAAJA,IAAF;AAAQV,kBAAAA,KAAK,EAALA;AAAR,iBAAZ,C;;;AAAdS,gBAAAA,K;AACAG,gBAAAA,I,aAAUI,GAAG,CAACpB,Q,eAAaoB,GAAG,CAACnB,OAAJ,CAAYgB,I,yCAAmCH,I,cAAQD,K;;;uBAEhF,wBACJT,KADI,EAEJ,wBAFI,4EAG+DY,IAH/D,E;;;kDAKC,mCAAgBlB,GAAhB,EAAqB,GAArB,EAA0B,qDAA1B,C;;;;;kDAEA,qCAAkBA,GAAlB,EAAuB,GAAvB,EAA4B,+CAA5B,C;;;kDAGJ,qCAAkBA,GAAlB,EAAuB,GAAvB,EAA4B,6BAAaM,KAAb,CAA5B,C;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;;;;;qDAWoBgB,G,EAAKtB,G,EAAKC,I;;;;;;AACpBW,gBAAAA,Q,GAAaU,GAAG,CAAClB,I,CAAjBQ,Q;AACAI,gBAAAA,I,GAASM,GAAG,CAACkB,M,CAAbxB,I;;oBACH,gCAAgBJ,QAAhB,C;;;;;;;uBAEKH,2BAAemB,MAAf,CAAsBZ,IAAtB,EAA4B;AAAEJ,kBAAAA,QAAQ,EAARA;AAAF,iBAA5B,C;;;kDACC,mCAAgBZ,GAAhB,EAAqB,GAArB,EAA0B,6BAA1B,C;;;;;kDAEAC,IAAI,c;;;kDAGR,qCAAkBD,GAAlB,EAAuB,GAAvB,EAA4B,gCAAgBY,QAAhB,CAA5B,C;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;qDAScU,G,EAAKtB,G;;;;;;;AAETe,gBAAAA,K,GAAQO,GAAG,CAACnB,OAAJ,CAAYsC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,KAA2CpB,GAAG,CAACnB,OAAJ,CAAYsC,a;;uBAC/D,+BAAmB1B,KAAnB,C;;;kDACC,uCAAoBf,GAApB,EAAyB,GAAzB,EAA8B,8BAA9B,C;;;;;kDAEA,qCAAkBA,GAAlB,EAAuB,GAAvB,e;;;;;;;;;;;;;;;;AAGX;;;;;;;;;;;;;AAWG;;;;;;;;;;;;;;;;;;;;;;;;;;eAwBU,IAAID,cAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
      "sourcesContent": [
        "/* eslint-disable class-methods-use-this */\r\n/* eslint-disable camelcase */\r\nimport UserRepository from '../repositories/UserRepository';\r\nimport { blackListThisToken } from '../utils';\r\nimport { createToken, verifyToken } from '../modules/tokenProcessor';\r\nimport { sendErrorResponse, successResponse, sendSuccessResponse } from '../utils/sendResponse';\r\nimport { inValidEmail, inValidPassword, magicTrimmer } from '../modules/validator';\r\nimport sendEmail from '../services/emails';\r\nimport { hashPassword, unhashPassword } from '../utils/hashPassword';\r\nimport userInfo from '../utils/getUserInfo';\r\n\r\n\r\n/**\r\n * @description User controller\r\n */\r\nclass AuthController {\r\n  /**\r\n   * @description Handles user signup form\r\n   * \r\n   * @param {Object} req - HTTP request object\r\n   *\r\n   * @param {Object} res - HTTP response object\r\n   *\r\n   * @param {Function} next - Function to trigger next middleware\r\n   *\r\n   * @return {Object} Return success message and account creation status\r\n   */\r\n  async signup({ protocol, headers, body }, res, next) {\r\n    try {\r\n      const userData = magicTrimmer(body);\r\n      const { email, first_name, last_name } = userData;\r\n      const result = await UserRepository.getOne({ email });\r\n      if (!result) {\r\n        body.password = hashPassword(body.password);\r\n        const newUser = await UserRepository.create(body);\r\n        const token = createToken(\r\n          {\r\n            uuid: newUser.uuid,\r\n            first_name,\r\n            last_name,\r\n            email,\r\n            role: newUser.role\r\n          }\r\n        );\r\n        newUser.token = token;\r\n        const link = `${protocol}//${headers.host}/api/v1/auth/confirm_email?token=${token}&id=${newUser.uuid}`;\r\n        await sendEmail(\r\n          email,\r\n          'Thejust Online Voting System Verification',\r\n          `Please kindly click on the link below to verify your account <br/> ${link}`\r\n        );\r\n        const userInformation = {\r\n          message: 'User account created successfully',\r\n          token\r\n        };\r\n        sendSuccessResponse(res, 201, userInformation);\r\n      } else {\r\n        return sendErrorResponse(res, 409, `User ${email} already exists`);\r\n      }\r\n    } catch (err) {\r\n      return next(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description handles confirmation email sent to user's to verify its validity\r\n   * \r\n   * @param {object} req\r\n   *\r\n   * @param {object} res\r\n   *\r\n   * @returns {object} returns a response object\r\n   */\r\n  async confirmEmail(req, res) {\r\n    const { token } = req.query;\r\n    try {\r\n      const verify = await verifyToken(token);\r\n      const user = await UserRepository.getOne({ uuid: verify.uuid });\r\n      if (user.dataValues.is_verified === true) return sendErrorResponse(res, 400, 'Account verified already');\r\n      await UserRepository.update({ is_verified: true }, verify.uuid);\r\n      return successResponse(res, 200, 'Email verified successfully');\r\n    } catch (err) {\r\n      return sendErrorResponse(res, 400, 'Unable to verifiy email');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description handles login from Google, twitter and Facebook\r\n   *\r\n   * @param {object} user accepts user details object\r\n   *\r\n   * @param {res} res object*\r\n   *\r\n   * @param {function} next returns error if process fails\r\n   *\r\n   * @returns {object} returns a new or existing user's details\r\n   */\r\n  async social({ user }, res, next) {\r\n    try {\r\n      const {\r\n        social_id,\r\n        name,\r\n        image,\r\n        email,\r\n        provider\r\n      } = user;\r\n\r\n      const checkUser = provider === 'facebook'\r\n        ? await UserRepository.getOne({ facebook_id: social_id })\r\n        : await UserRepository.getOne({ google_id: social_id });\r\n      if (checkUser) return sendSuccessResponse(res, 201, userInfo(checkUser));\r\n\r\n      const newUser = await UserRepository.create({\r\n        name,\r\n        email,\r\n        is_verified: true,\r\n        image_url: image,\r\n        facebook_id: (provider === 'facebook' ? social_id : ''),\r\n        google_id: (provider === 'google' ? social_id : ''),\r\n        role: 'employee'\r\n      });\r\n      return sendSuccessResponse(res, 201, userInfo(newUser));\r\n    } catch (err) {\r\n      return next(err);\r\n    }\r\n  }\r\n\r\n  /** \r\n   * @description Uses login with email and password\r\n   *\r\n   * @param {req} req the request object\r\n   *\r\n   * @param {res} res the response object\r\n   *\r\n   * @param {object} body this is the body of the request\r\n   *\r\n   * @returns {obj} returns an response object\r\n   */\r\n  async signin({ body }, res) {\r\n    const { email, password } = body;\r\n    const foundUser = await UserRepository.getOne({ email });\r\n    if (!foundUser) return sendErrorResponse(res, 404, 'User not found');\r\n    const confirmPassword = unhashPassword(password, foundUser.dataValues.password);\r\n    if (!confirmPassword) return sendErrorResponse(res, 400, 'Incorrect Password');\r\n    if (!foundUser.dataValues.is_verified) return sendErrorResponse(res, 401, 'Verify Your Account');\r\n    const token = await createToken(\r\n      {\r\n        uuid: foundUser.uuid,\r\n        role: foundUser.role,\r\n        email: foundUser.email,\r\n        role_uuid: foundUser.role_uuid\r\n      }\r\n    );\r\n    const userInformation = {\r\n      token,\r\n    };\r\n    return sendSuccessResponse(res, 200, userInformation);\r\n  }\r\n  \r\n\r\n  /**\r\n  * @description Sends reset link to user Email\r\n  *\r\n  * @param {Object} req - Request object\r\n  *\r\n  * @param {Object} res - Response object\r\n  *\r\n  * @returns {Object} object containing user data which will be embedded in link sent to user\r\n  *\r\n  * @memberof UserController\r\n  */ \r\n  async sendResetLink(req, res) {\r\n    const { email } = req.body;\r\n    if (!inValidEmail(email)) {\r\n      const { uuid } = await UserRepository.getOne({ email });\r\n      const token = await createToken({ uuid, email });\r\n      const link = `${req.protocol}//${req.headers.host}/api/v1/auth/reset_password/${uuid}/${token}`;\r\n      try {\r\n        await sendEmail(\r\n          email,\r\n          'Thejust Password Reset',\r\n          `Please kindly click the link below to reset your password <br/> ${link}`\r\n        );\r\n        return successResponse(res, 200, 'A password reset link has been sent to your mailbox');\r\n      } catch (error) {\r\n        return sendErrorResponse(res, 500, 'Unable to perform the operation at the moment');\r\n      }\r\n    }\r\n    return sendErrorResponse(res, 400, inValidEmail(email));\r\n  }\r\n\r\n  /**\r\n   * @description Updates the user's password\r\n   *\r\n   * @param {object} req - request object\r\n   *\r\n   * @param {object} res - response object\r\n   *\r\n   * @param {object} next - response object\r\n   *\r\n   * @returns {object} either error or success\r\n   */\r\n  async resetPassword(req, res, next) {\r\n    const { password } = req.body;\r\n    const { uuid } = req.params;\r\n    if (!inValidPassword(password)) {\r\n      try {\r\n        await UserRepository.update(uuid, { password });\r\n        return successResponse(res, 200, 'Password Reset Successfully');\r\n      } catch (error) {\r\n        return next(error);\r\n      }\r\n    }\r\n    return sendErrorResponse(res, 400, inValidPassword(password));\r\n  }\r\n\r\n  /*\r\n  /**\r\n   * @description Function to get specific user details\r\n   *\r\n   * @param {Object} req - HTTP request object\r\n   *\r\n   * @param {Object} res - HTTP response object\r\n   *\r\n   * @param {Function} next - Function to trigger next middleware\r\n   *\r\n   * @return {Object} Object resoponse with current user information status\r\n   */\r\n  /*\r\n  async show({ userData }, res, next) {\r\n    const { dataValues: { email } } = userData;\r\n    try {\r\n      const { dataValues: user } = await UserRepository.getOne({ email });\r\n      if (user) {\r\n        user.password = undefined;\r\n        return sendSuccessResponse(res, 200, user);\r\n      }\r\n      return sendErrorResponse(res, 400, 'User not found');\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n*/\r\n  /**\r\n   * @description logs out a user\r\n   *\r\n   * @param {object} req request from body to log out\r\n   *\r\n   * @param {object} res response to the body\r\n   *\r\n   * @returns {object} success\r\n   */\r\n  async signout(req, res) {\r\n    try {\r\n      const token = req.headers.authorization.split(' ')[1] || req.headers.authorization;\r\n      await blackListThisToken(token);\r\n      return sendSuccessResponse(res, 200, 'You have succesfully signout');\r\n    } catch (error) {\r\n      return sendErrorResponse(res, 400, error);\r\n    }\r\n  }\r\n  /*\r\n  /**\r\n   * @description Function to update user details\r\n   *\r\n   * @param {Object} req - HTTP request object\r\n   *\r\n   * @param {Object} res - HTTP response object\r\n   *\r\n   * @param {Function} next - Function to trigger next middleware\r\n   *\r\n   * @return {Object} Object resoponse with current user created status\r\n   *//*\r\n  async update(req, res, next) {\r\n    const { body } = req;\r\n    try {\r\n      const userData = magicTrimmer(body);\r\n      const { email } = userData;\r\n      const result = await UserRepository.getOne({ email });\r\n      if (!result) {\r\n        const { userData: { dataValues: { uuid: userId } } } = req;\r\n        const [numberOfEdits, [{ dataValues }]] = await UserRepository.update(userId, body);\r\n        numberOfEdits > 0\r\n          ? sendSuccessResponse(res, 200, dataValues)\r\n          : sendSuccessResponse(res, 200, 'No edit made');\r\n      } else {\r\n        return sendErrorResponse(res, 409, `User ${email} already exists`);\r\n      }\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n  */\r\n}\r\n\r\n\r\nexport default new AuthController();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578960022174
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\\\\UserRepository.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\UserRepository.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\UserRepository.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\UserRepository.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
        "sourceFileName": "UserRepository.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable linebreak-style */\n\n/* eslint-disable no-useless-catch */\n\n/* eslint-disable class-methods-use-this */\n\n/* eslint-disable camelcase */\n\n/**\r\n * @fileoverview Contains the User Auth Repository class, an interface for querying User table\r\n *\r\n * @author TheJust\r\n *\r\n * @requires models/User.js\r\n */\nvar User = _models[\"default\"].User,\n    BlackListedToken = _models[\"default\"].BlackListedToken,\n    Role = _models[\"default\"].Role,\n    permission = _models[\"default\"].permission,\n    role_permission = _models[\"default\"].role_permission;\n/**\r\n * User repository class\r\n *\r\n * @class\r\n */\n\nvar UserRepository =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * @description constructor handles the user model\r\n   *\r\n   * User Model constructor\r\n   *\r\n   * @constructor\r\n   *\r\n   */\n  function UserRepository() {\n    (0, _classCallCheck2[\"default\"])(this, UserRepository);\n    this.db = User;\n  }\n  /**\r\n   * @description Creates a new user account with provided details\r\n   *\r\n   * @param {Object} param users details\r\n   *\r\n   * @return {Object} returns new user details\r\n   */\n\n\n  (0, _createClass2[\"default\"])(UserRepository, [{\n    key: \"create\",\n    value: function () {\n      var _create = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(_ref) {\n        var password, email, name, is_verified, _ref$image_url, image_url, _ref$facebook_id, facebook_id, _ref$google_id, google_id, _ref2, dataValues;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                password = _ref.password, email = _ref.email, name = _ref.name, is_verified = _ref.is_verified, _ref$image_url = _ref.image_url, image_url = _ref$image_url === void 0 ? '' : _ref$image_url, _ref$facebook_id = _ref.facebook_id, facebook_id = _ref$facebook_id === void 0 ? '' : _ref$facebook_id, _ref$google_id = _ref.google_id, google_id = _ref$google_id === void 0 ? '' : _ref$google_id;\n                _context.prev = 1;\n                _context.next = 4;\n                return this.db.create({\n                  name: name,\n                  email: email,\n                  password: password,\n                  is_verified: is_verified,\n                  image_url: image_url,\n                  facebook_id: facebook_id,\n                  google_id: google_id\n                });\n\n              case 4:\n                _ref2 = _context.sent;\n                dataValues = _ref2.dataValues;\n                return _context.abrupt(\"return\", dataValues);\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                throw new Error(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 9]]);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n    /**\r\n     * @description Returns users details based on the provided parameters\r\n     *\r\n     * @param {Object} condition checks required users parameter\r\n     *\r\n     * @param {Object} include adds users managers\r\n     *\r\n     * @return {Object} returns user details with managers uuid\r\n     */\n\n  }, {\n    key: \"getOne\",\n    value: function () {\n      var _getOne = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2() {\n        var condition,\n            include,\n            _args2 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                condition = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n                include = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : '';\n                _context2.prev = 2;\n                _context2.next = 5;\n                return this.db.findOne({\n                  where: condition,\n                  include: include\n                });\n\n              case 5:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](2);\n                throw new Error(_context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 8]]);\n      }));\n\n      function getOne() {\n        return _getOne.apply(this, arguments);\n      }\n\n      return getOne;\n    }()\n    /**\r\n     * @description this is a method that gets all users in the database\r\n     * \r\n     * @returns {array} returns an array of user objects\r\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function () {\n      var _getAll = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3() {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return User.findAll();\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                throw new Error(_context3.t0);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n\n      function getAll() {\n        return _getAll.apply(this, arguments);\n      }\n\n      return getAll;\n    }()\n    /**\r\n     * @description This is a function that finds a user token in the data base\r\n     *\r\n     * @param {Object} condition checks token in db\r\n     *\r\n     * @return {Object} returns token\r\n     */\n\n  }, {\n    key: \"findToken\",\n    value: function () {\n      var _findToken = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4() {\n        var condition,\n            _args4 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                condition = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};\n                _context4.prev = 1;\n                _context4.next = 4;\n                return BlackListedToken.findOne({\n                  where: condition\n                });\n\n              case 4:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](1);\n                throw new Error(_context4.t0);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 7]]);\n      }));\n\n      function findToken() {\n        return _findToken.apply(this, arguments);\n      }\n\n      return findToken;\n    }()\n    /**\r\n     *\r\n     * @param {string} changes\r\n     *\r\n     * @param {object} userId to update for user\r\n     *\r\n     * @returns {object} updated user\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5() {\n        var changes,\n            userId,\n            _args5 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                changes = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};\n                userId = _args5.length > 1 ? _args5[1] : undefined;\n                _context5.prev = 2;\n                _context5.next = 5;\n                return this.getOne({\n                  uuid: userId\n                });\n\n              case 5:\n                _context5.next = 7;\n                return this.db.update(changes, {\n                  where: {\n                    uuid: userId\n                  }\n                });\n\n              case 7:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 10:\n                _context5.prev = 10;\n                _context5.t0 = _context5[\"catch\"](2);\n                throw new Error(_context5.t0);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 10]]);\n      }));\n\n      function update() {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n    /**\r\n     * @description gets a list of roles from the database\r\n     * \r\n     * @returns {*} an array of role names\r\n     */\n\n  }, {\n    key: \"getRoles\",\n    value: function () {\n      var _getRoles = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6() {\n        var roles, roleNames;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return Role.findAll();\n\n              case 3:\n                roles = _context6.sent;\n\n                if (roles) {\n                  _context6.next = 6;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 6:\n                roleNames = roles.map(function (role) {\n                  return role.dataValues.name;\n                });\n                return _context6.abrupt(\"return\", roleNames);\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](0);\n                throw new Error(_context6.t0);\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 10]]);\n      }));\n\n      function getRoles() {\n        return _getRoles.apply(this, arguments);\n      }\n\n      return getRoles;\n    }()\n    /**\r\n     * @description gets a list of permissions from the database\r\n     * \r\n     * @param {*} roleId\r\n     * \r\n     * @returns {array} an array of permission names\r\n     */\n\n  }, {\n    key: \"getRolePermissions\",\n    value: function () {\n      var _getRolePermissions = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(roleId) {\n        var _ref3, _ref4, roles;\n\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return Role.findAll({\n                  where: {\n                    uuid: roleId\n                  },\n                  include: [{\n                    model: permission,\n                    as: 'permissions',\n                    required: true,\n                    attributes: ['uuid', 'name'],\n                    through: {\n                      attributes: []\n                    }\n                  }]\n                });\n\n              case 3:\n                _ref3 = _context7.sent;\n                _ref4 = (0, _slicedToArray2[\"default\"])(_ref3, 1);\n                roles = _ref4[0];\n                return _context7.abrupt(\"return\", roles.dataValues.permissions);\n\n              case 9:\n                _context7.prev = 9;\n                _context7.t0 = _context7[\"catch\"](0);\n                throw new Error(_context7.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 9]]);\n      }));\n\n      function getRolePermissions(_x2) {\n        return _getRolePermissions.apply(this, arguments);\n      }\n\n      return getRolePermissions;\n    }()\n    /**\r\n     * @description gets a list of permissions from the database\r\n     * \r\n     * @returns {array} an array of permission names\r\n     */\n\n  }, {\n    key: \"getPermissions\",\n    value: function () {\n      var _getPermissions = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8() {\n        var permissions, permissionNames;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return permission.findAll();\n\n              case 3:\n                permissions = _context8.sent;\n\n                if (permissions) {\n                  _context8.next = 6;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 6:\n                permissionNames = permissions.map(function (permits) {\n                  return permits.dataValues.name;\n                });\n                return _context8.abrupt(\"return\", permissionNames);\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](0);\n                throw new Error(_context8.t0);\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 10]]);\n      }));\n\n      function getPermissions() {\n        return _getPermissions.apply(this, arguments);\n      }\n\n      return getPermissions;\n    }()\n    /**\r\n     * \r\n     * @param {string} email \r\n     * \r\n     * @param {string} newRole\r\n     * \r\n     * @returns {object} updated user\r\n     */\n\n  }, {\n    key: \"setRole\",\n    value: function () {\n      var _setRole = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee9(email, newRole) {\n        var _ref5, uuid, data;\n\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return Role.findOne({\n                  where: {\n                    name: newRole\n                  }\n                });\n\n              case 3:\n                _ref5 = _context9.sent;\n                uuid = _ref5.uuid;\n                _context9.next = 7;\n                return User.update({\n                  role_uuid: uuid,\n                  role: newRole\n                }, {\n                  where: {\n                    email: email\n                  },\n                  plain: true\n                });\n\n              case 7:\n                data = _context9.sent;\n\n                if (!(newRole === 'Manager')) {\n                  _context9.next = 11;\n                  break;\n                }\n\n                _context9.next = 11;\n                return Manager.create({\n                  uuid: data.uuid\n                });\n\n              case 11:\n                return _context9.abrupt(\"return\", data);\n\n              case 14:\n                _context9.prev = 14;\n                _context9.t0 = _context9[\"catch\"](0);\n                throw Error(_context9.t0);\n\n              case 17:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 14]]);\n      }));\n\n      function setRole(_x3, _x4) {\n        return _setRole.apply(this, arguments);\n      }\n\n      return setRole;\n    }()\n    /**\r\n     * \r\n     * @param {string} role\r\n     * \r\n     * @param {string} permits\r\n     * \r\n     * @returns {object} updated user\r\n     */\n\n  }, {\n    key: \"setPermission\",\n    value: function () {\n      var _setPermission = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee10(role, permits) {\n        var userRole, userPermission, newRolePermission;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                _context10.next = 3;\n                return Role.findOne({\n                  where: {\n                    name: role\n                  }\n                });\n\n              case 3:\n                userRole = _context10.sent;\n                _context10.next = 6;\n                return permission.findOne({\n                  where: {\n                    name: permits\n                  }\n                });\n\n              case 6:\n                userPermission = _context10.sent;\n                _context10.next = 9;\n                return role_permission.create({\n                  role_uuid: userRole.uuid,\n                  permission_id: userPermission.uuid\n                });\n\n              case 9:\n                newRolePermission = _context10.sent;\n                return _context10.abrupt(\"return\", newRolePermission);\n\n              case 13:\n                _context10.prev = 13;\n                _context10.t0 = _context10[\"catch\"](0);\n                throw new Error(_context10.t0.message);\n\n              case 16:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 13]]);\n      }));\n\n      function setPermission(_x5, _x6) {\n        return _setPermission.apply(this, arguments);\n      }\n\n      return setPermission;\n    }()\n    /**\r\n     *  @description findOne is a function that search for an office Location\r\n     *\r\n     * @param {object} condition limits the search of the office location\r\n     *\r\n     * @returns {object} the details of the office location that has been searched for\r\n     */\n    // eslint-disable-next-line require-jsdoc\n\n  }, {\n    key: \"findById\",\n    value: function () {\n      var _findById = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee11(condition) {\n        var tripRequest;\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                _context11.next = 3;\n                return this.db.findByPk(condition);\n\n              case 3:\n                tripRequest = _context11.sent;\n                return _context11.abrupt(\"return\", tripRequest);\n\n              case 7:\n                _context11.prev = 7;\n                _context11.t0 = _context11[\"catch\"](0);\n                throw new Error(_context11.t0);\n\n              case 10:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[0, 7]]);\n      }));\n\n      function findById(_x7) {\n        return _findById.apply(this, arguments);\n      }\n\n      return findById;\n    }()\n  }]);\n  return UserRepository;\n}();\n\nvar _default = new UserRepository();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "UserRepository.js"
      ],
      "names": [
        "User",
        "Model",
        "BlackListedToken",
        "Role",
        "permission",
        "role_permission",
        "UserRepository",
        "db",
        "password",
        "email",
        "name",
        "is_verified",
        "image_url",
        "facebook_id",
        "google_id",
        "create",
        "dataValues",
        "Error",
        "condition",
        "include",
        "findOne",
        "where",
        "findAll",
        "changes",
        "userId",
        "getOne",
        "uuid",
        "update",
        "roles",
        "roleNames",
        "map",
        "role",
        "roleId",
        "model",
        "as",
        "required",
        "attributes",
        "through",
        "permissions",
        "message",
        "permissionNames",
        "permits",
        "newRole",
        "role_uuid",
        "plain",
        "data",
        "Manager",
        "userRole",
        "userPermission",
        "permission_id",
        "newRolePermission",
        "findByPk",
        "tripRequest"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;AAaA;;AAbA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;IAWEA,I,GAKEC,kB,CALFD,I;IACAE,gB,GAIED,kB,CAJFC,gB;IACAC,I,GAGEF,kB,CAHFE,I;IACAC,U,GAEEH,kB,CAFFG,U;IACAC,e,GACEJ,kB,CADFI,e;AAGF;;;;;;IAKMC,c;;;AACJ;;;;;;;;AAQA,4BAAc;AAAA;AACZ,SAAKC,EAAL,GAAUP,IAAV;AACD;AAED;;;;;;;;;;;;;;;;;;;;;AAQEQ,gBAAAA,Q,QAAAA,Q,EACAC,K,QAAAA,K,EACAC,I,QAAAA,I,EACAC,W,QAAAA,W,wBACAC,S,EAAAA,S,+BAAY,E,2CACZC,W,EAAAA,W,iCAAc,E,2CACdC,S,EAAAA,S,+BAAY,E;;;uBAGmB,KAAKP,EAAL,CAAQQ,MAAR,CAAe;AAC1CL,kBAAAA,IAAI,EAAJA,IAD0C;AAE1CD,kBAAAA,KAAK,EAALA,KAF0C;AAG1CD,kBAAAA,QAAQ,EAARA,QAH0C;AAI1CG,kBAAAA,WAAW,EAAXA,WAJ0C;AAK1CC,kBAAAA,SAAS,EAATA,SAL0C;AAM1CC,kBAAAA,WAAW,EAAXA,WAN0C;AAO1CC,kBAAAA,SAAS,EAATA;AAP0C,iBAAf,C;;;;AAArBE,gBAAAA,U,SAAAA,U;iDASDA,U;;;;;sBAED,IAAIC,KAAJ,a;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;;;;;;;AASaC,gBAAAA,S,8DAAY,E;AAAIC,gBAAAA,O,8DAAU,E;;;uBAEtB,KAAKZ,EAAL,CAAQa,OAAR,CAAgB;AAAEC,kBAAAA,KAAK,EAAEH,SAAT;AAAoBC,kBAAAA,OAAO,EAAPA;AAApB,iBAAhB,C;;;;;;;;sBAEP,IAAIF,KAAJ,c;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;;uBAOiBjB,IAAI,CAACsB,OAAL,E;;;;;;;;sBAEP,IAAIL,KAAJ,c;;;;;;;;;;;;;;;;AAKV;;;;;;;;;;;;;;;;;;;;AAOgBC,gBAAAA,S,8DAAY,E;;;uBAEXhB,gBAAgB,CAACkB,OAAjB,CAAyB;AAAEC,kBAAAA,KAAK,EAAEH;AAAT,iBAAzB,C;;;;;;;;sBAEP,IAAID,KAAJ,c;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;;;;;;AAQaM,gBAAAA,O,8DAAU,E;AAAIC,gBAAAA,M;;;uBAEjB,KAAKC,MAAL,CAAY;AAAEC,kBAAAA,IAAI,EAAEF;AAAR,iBAAZ,C;;;;uBACO,KAAKjB,EAAL,CAAQoB,MAAR,CAAeJ,OAAf,EAAwB;AAAEF,kBAAAA,KAAK,EAAE;AAAEK,oBAAAA,IAAI,EAAEF;AAAR;AAAT,iBAAxB,C;;;;;;;;sBAEP,IAAIP,KAAJ,c;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;;;uBAOwBd,IAAI,CAACmB,OAAL,E;;;AAAdM,gBAAAA,K;;oBACDA,K;;;;;;;;AACCC,gBAAAA,S,GAAYD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACf,UAAL,CAAgBN,IAApB;AAAA,iBAAd,C;kDACXmB,S;;;;;sBAED,IAAIZ,KAAJ,c;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;qDAOyBe,M;;;;;;;;;uBAEC7B,IAAI,CAACmB,OAAL,CACpB;AACED,kBAAAA,KAAK,EAAE;AAAEK,oBAAAA,IAAI,EAAEM;AAAR,mBADT;AAEEb,kBAAAA,OAAO,EAAE,CACP;AACEc,oBAAAA,KAAK,EAAE7B,UADT;AAEE8B,oBAAAA,EAAE,EAAE,aAFN;AAGEC,oBAAAA,QAAQ,EAAE,IAHZ;AAIEC,oBAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,CAJd;AAKEC,oBAAAA,OAAO,EAAE;AAAED,sBAAAA,UAAU,EAAE;AAAd;AALX,mBADO;AAFX,iBADoB,C;;;;;AAAfR,gBAAAA,K;kDAcAA,KAAK,CAACZ,UAAN,CAAiBsB,W;;;;;sBAElB,IAAIrB,KAAJ,CAAU,aAAMsB,OAAhB,C;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;;;uBAO8BnC,UAAU,CAACkB,OAAX,E;;;AAApBgB,gBAAAA,W;;oBACDA,W;;;;;;;;AACCE,gBAAAA,e,GAAkBF,WAAW,CAACR,GAAZ,CAAgB,UAAAW,OAAO;AAAA,yBAAIA,OAAO,CAACzB,UAAR,CAAmBN,IAAvB;AAAA,iBAAvB,C;kDACjB8B,e;;;;;sBAED,IAAIvB,KAAJ,c;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;qDAQcR,K,EAAOiC,O;;;;;;;;;uBAEMvC,IAAI,CAACiB,OAAL,CAAa;AAAEC,kBAAAA,KAAK,EAAE;AAAEX,oBAAAA,IAAI,EAAEgC;AAAR;AAAT,iBAAb,C;;;;AAAfhB,gBAAAA,I,SAAAA,I;;uBACW1B,IAAI,CAAC2B,MAAL,CACjB;AAAEgB,kBAAAA,SAAS,EAAEjB,IAAb;AAAmBK,kBAAAA,IAAI,EAAEW;AAAzB,iBADiB,EAEjB;AAAErB,kBAAAA,KAAK,EAAE;AAAEZ,oBAAAA,KAAK,EAALA;AAAF,mBAAT;AAAoBmC,kBAAAA,KAAK,EAAE;AAA3B,iBAFiB,C;;;AAAbC,gBAAAA,I;;sBAIFH,OAAO,KAAK,S;;;;;;uBACRI,OAAO,CAAC/B,MAAR,CACJ;AAAEW,kBAAAA,IAAI,EAAEmB,IAAI,CAACnB;AAAb,iBADI,C;;;kDAKDmB,I;;;;;sBAED5B,KAAK,c;;;;;;;;;;;;;;;;AAIf;;;;;;;;;;;;;;sDAQoBc,I,EAAMU,O;;;;;;;;uBAECtC,IAAI,CAACiB,OAAL,CAAa;AAAEC,kBAAAA,KAAK,EAAE;AAAEX,oBAAAA,IAAI,EAAEqB;AAAR;AAAT,iBAAb,C;;;AAAjBgB,gBAAAA,Q;;uBACuB3C,UAAU,CAACgB,OAAX,CAAmB;AAAEC,kBAAAA,KAAK,EAAE;AAAEX,oBAAAA,IAAI,EAAE+B;AAAR;AAAT,iBAAnB,C;;;AAAvBO,gBAAAA,c;;uBAC0B3C,eAAe,CAACU,MAAhB,CAC9B;AAAE4B,kBAAAA,SAAS,EAAEI,QAAQ,CAACrB,IAAtB;AAA4BuB,kBAAAA,aAAa,EAAED,cAAc,CAACtB;AAA1D,iBAD8B,C;;;AAA1BwB,gBAAAA,iB;mDAGCA,iB;;;;;sBAED,IAAIjC,KAAJ,CAAU,cAAMsB,OAAhB,C;;;;;;;;;;;;;;;;AAIV;;;;;;;AAOA;;;;;;;sDACerB,S;;;;;;;;uBAEe,KAAKX,EAAL,CAAQ4C,QAAR,CAAiBjC,SAAjB,C;;;AAApBkC,gBAAAA,W;mDACCA,W;;;;;sBAED,IAAInC,KAAJ,e;;;;;;;;;;;;;;;;;;;;eAIG,IAAIX,cAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "sourcesContent": [
        "/* eslint-disable no-plusplus */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-useless-catch */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable camelcase */\r\n/**\r\n * @fileoverview Contains the User Auth Repository class, an interface for querying User table\r\n *\r\n * @author TheJust\r\n *\r\n * @requires models/User.js\r\n */\r\n\r\nimport Model from '../models';\r\n\r\nconst {\r\n  User,\r\n  BlackListedToken,\r\n  Role,\r\n  permission,\r\n  role_permission,\r\n} = Model;\r\n\r\n/**\r\n * User repository class\r\n *\r\n * @class\r\n */\r\nclass UserRepository {\r\n  /**\r\n   * @description constructor handles the user model\r\n   *\r\n   * User Model constructor\r\n   *\r\n   * @constructor\r\n   *\r\n   */\r\n  constructor() {\r\n    this.db = User;\r\n  }\r\n\r\n  /**\r\n   * @description Creates a new user account with provided details\r\n   *\r\n   * @param {Object} param users details\r\n   *\r\n   * @return {Object} returns new user details\r\n   */\r\n  async create({\r\n    password,\r\n    email,\r\n    name,\r\n    is_verified,\r\n    image_url = '',\r\n    facebook_id = '',\r\n    google_id = ''\r\n  }) {\r\n    try {\r\n      const { dataValues } = await this.db.create({\r\n        name,\r\n        email,\r\n        password,\r\n        is_verified,\r\n        image_url,\r\n        facebook_id,\r\n        google_id\r\n      });\r\n      return dataValues;\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Returns users details based on the provided parameters\r\n   *\r\n   * @param {Object} condition checks required users parameter\r\n   *\r\n   * @param {Object} include adds users managers\r\n   *\r\n   * @return {Object} returns user details with managers uuid\r\n   */\r\n  async getOne(condition = {}, include = '') {\r\n    try {\r\n      return await this.db.findOne({ where: condition, include });\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * @description this is a method that gets all users in the database\r\n   * \r\n   * @returns {array} returns an array of user objects\r\n   */\r\n  async getAll() {\r\n    try {\r\n      return await User.findAll();\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @description This is a function that finds a user token in the data base\r\n   *\r\n   * @param {Object} condition checks token in db\r\n   *\r\n   * @return {Object} returns token\r\n   */\r\n  async findToken(condition = {}) {\r\n    try {\r\n      return await BlackListedToken.findOne({ where: condition });\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} changes\r\n   *\r\n   * @param {object} userId to update for user\r\n   *\r\n   * @returns {object} updated user\r\n   */\r\n  async update(changes = {}, userId) {\r\n    try {\r\n      await this.getOne({ uuid: userId });\r\n      return await this.db.update(changes, { where: { uuid: userId } });\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description gets a list of roles from the database\r\n   * \r\n   * @returns {*} an array of role names\r\n   */\r\n  async getRoles() {\r\n    try {\r\n      const roles = await Role.findAll();\r\n      if (!roles) return;\r\n      const roleNames = roles.map(role => role.dataValues.name);\r\n      return roleNames;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description gets a list of permissions from the database\r\n   * \r\n   * @param {*} roleId\r\n   * \r\n   * @returns {array} an array of permission names\r\n   */\r\n  async getRolePermissions(roleId) {\r\n    try {\r\n      const [roles] = await Role.findAll(\r\n        {\r\n          where: { uuid: roleId }, \r\n          include: [\r\n            {\r\n              model: permission,\r\n              as: 'permissions',\r\n              required: true,\r\n              attributes: ['uuid', 'name'],\r\n              through: { attributes: [] }\r\n            }\r\n          ],\r\n        }\r\n      );\r\n      return roles.dataValues.permissions;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description gets a list of permissions from the database\r\n   * \r\n   * @returns {array} an array of permission names\r\n   */\r\n  async getPermissions() {\r\n    try {\r\n      const permissions = await permission.findAll();\r\n      if (!permissions) return;\r\n      const permissionNames = permissions.map(permits => permits.dataValues.name);\r\n      return permissionNames;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} email \r\n   * \r\n   * @param {string} newRole\r\n   * \r\n   * @returns {object} updated user\r\n   */\r\n  async setRole(email, newRole) {\r\n    try {\r\n      const { uuid } = await Role.findOne({ where: { name: newRole } });\r\n      const data = await User.update(\r\n        { role_uuid: uuid, role: newRole },\r\n        { where: { email }, plain: true }\r\n      );\r\n      if (newRole === 'Manager') {\r\n        await Manager.create(\r\n          { uuid: data.uuid }\r\n        );\r\n      }\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      throw Error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} role\r\n   * \r\n   * @param {string} permits\r\n   * \r\n   * @returns {object} updated user\r\n   */\r\n  async setPermission(role, permits) {\r\n    try {\r\n      const userRole = await Role.findOne({ where: { name: role } });\r\n      const userPermission = await permission.findOne({ where: { name: permits } });\r\n      const newRolePermission = await role_permission.create(\r\n        { role_uuid: userRole.uuid, permission_id: userPermission.uuid }\r\n      );\r\n      return newRolePermission;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  @description findOne is a function that search for an office Location\r\n   *\r\n   * @param {object} condition limits the search of the office location\r\n   *\r\n   * @returns {object} the details of the office location that has been searched for\r\n   */\r\n  // eslint-disable-next-line require-jsdoc\r\n  async findById(condition) {\r\n    try {\r\n      const tripRequest = await this.db.findByPk(condition);\r\n      return tripRequest;\r\n    } catch (err) {\r\n      throw new Error(err);\r\n    }\r\n  }\r\n}\r\nexport default new UserRepository();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579120689714
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _config = _interopRequireDefault(require(\"../config/config\"));\n\nvar basename = _path[\"default\"].basename(__filename);\n\nvar env = process.env.NODE_ENV || 'development';\nvar config = _config[\"default\"][env];\nvar db = {};\nvar sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new _sequelize[\"default\"](process.env[config.use_env_variable], config);\n} else {\n  sequelize = new _sequelize[\"default\"](config.database, config.username, config.password, config);\n}\n\n_fs[\"default\"].readdirSync(__dirname).filter(function (file) {\n  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';\n}).forEach(function (file) {\n  var model = sequelize[\"import\"](_path[\"default\"].join(__dirname, file));\n  db[model.name] = model;\n});\n\nObject.keys(db).forEach(function (modelName) {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = _sequelize[\"default\"];\nsequelize.authenticate().then(function () {\n  console.log('Connection has been established successfully.');\n})[\"catch\"](function (err) {\n  console.error('Unable to connect to the database:', err);\n});\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJhc2VuYW1lIiwicGF0aCIsIl9fZmlsZW5hbWUiLCJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25maWciLCJlblZhcmlhYmxlcyIsImRiIiwic2VxdWVsaXplIiwidXNlX2Vudl92YXJpYWJsZSIsIlNlcXVlbGl6ZSIsImRhdGFiYXNlIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImZzIiwicmVhZGRpclN5bmMiLCJfX2Rpcm5hbWUiLCJmaWx0ZXIiLCJmaWxlIiwiaW5kZXhPZiIsInNsaWNlIiwiZm9yRWFjaCIsIm1vZGVsIiwiam9pbiIsIm5hbWUiLCJPYmplY3QiLCJrZXlzIiwibW9kZWxOYW1lIiwiYXNzb2NpYXRlIiwiYXV0aGVudGljYXRlIiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxRQUFRLEdBQUdDLGlCQUFLRCxRQUFMLENBQWNFLFVBQWQsQ0FBakI7O0FBQ0EsSUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQztBQUNBLElBQU1DLE1BQU0sR0FBR0MsbUJBQVlKLEdBQVosQ0FBZjtBQUNBLElBQU1LLEVBQUUsR0FBRyxFQUFYO0FBRUEsSUFBSUMsU0FBSjs7QUFDQSxJQUFJSCxNQUFNLENBQUNJLGdCQUFYLEVBQTZCO0FBQzNCRCxFQUFBQSxTQUFTLEdBQUcsSUFBSUUscUJBQUosQ0FBY1AsT0FBTyxDQUFDRCxHQUFSLENBQVlHLE1BQU0sQ0FBQ0ksZ0JBQW5CLENBQWQsRUFBb0RKLE1BQXBELENBQVo7QUFDRCxDQUZELE1BRU87QUFDTEcsRUFBQUEsU0FBUyxHQUFHLElBQUlFLHFCQUFKLENBQWNMLE1BQU0sQ0FBQ00sUUFBckIsRUFBK0JOLE1BQU0sQ0FBQ08sUUFBdEMsRUFBZ0RQLE1BQU0sQ0FBQ1EsUUFBdkQsRUFBaUVSLE1BQWpFLENBQVo7QUFDRDs7QUFFRFMsZUFDR0MsV0FESCxDQUNlQyxTQURmLEVBRUdDLE1BRkgsQ0FFVSxVQUFBQyxJQUFJO0FBQUEsU0FBS0EsSUFBSSxDQUFDQyxPQUFMLENBQWEsR0FBYixNQUFzQixDQUF2QixJQUE4QkQsSUFBSSxLQUFLbkIsUUFBdkMsSUFBcURtQixJQUFJLENBQUNFLEtBQUwsQ0FBVyxDQUFDLENBQVosTUFBbUIsS0FBNUU7QUFBQSxDQUZkLEVBR0dDLE9BSEgsQ0FHVyxVQUFBSCxJQUFJLEVBQUk7QUFDZixNQUFNSSxLQUFLLEdBQUdkLFNBQVMsVUFBVCxDQUFpQlIsaUJBQUt1QixJQUFMLENBQVVQLFNBQVYsRUFBcUJFLElBQXJCLENBQWpCLENBQWQ7QUFDQVgsRUFBQUEsRUFBRSxDQUFDZSxLQUFLLENBQUNFLElBQVAsQ0FBRixHQUFpQkYsS0FBakI7QUFDRCxDQU5IOztBQVFBRyxNQUFNLENBQUNDLElBQVAsQ0FBWW5CLEVBQVosRUFBZ0JjLE9BQWhCLENBQXdCLFVBQUFNLFNBQVMsRUFBSTtBQUNuQyxNQUFJcEIsRUFBRSxDQUFDb0IsU0FBRCxDQUFGLENBQWNDLFNBQWxCLEVBQTZCO0FBQzNCckIsSUFBQUEsRUFBRSxDQUFDb0IsU0FBRCxDQUFGLENBQWNDLFNBQWQsQ0FBd0JyQixFQUF4QjtBQUNEO0FBQ0YsQ0FKRDtBQU1BQSxFQUFFLENBQUNDLFNBQUgsR0FBZUEsU0FBZjtBQUNBRCxFQUFFLENBQUNHLFNBQUgsR0FBZUEscUJBQWY7QUFFQUYsU0FBUyxDQUNOcUIsWUFESCxHQUVHQyxJQUZILENBRVEsWUFBTTtBQUNWQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwrQ0FBWjtBQUNELENBSkgsV0FLUyxVQUFBQyxHQUFHLEVBQUk7QUFDWkYsRUFBQUEsT0FBTyxDQUFDRyxLQUFSLENBQWMsb0NBQWQsRUFBb0RELEdBQXBEO0FBQ0QsQ0FQSDtBQVNBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUI3QixFQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiIFxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuaW1wb3J0IGVuVmFyaWFibGVzIGZyb20gJy4uL2NvbmZpZy9jb25maWcnO1xuXG5jb25zdCBiYXNlbmFtZSA9IHBhdGguYmFzZW5hbWUoX19maWxlbmFtZSk7XG5jb25zdCBlbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViB8fCAnZGV2ZWxvcG1lbnQnO1xuY29uc3QgY29uZmlnID0gZW5WYXJpYWJsZXNbZW52XTtcbmNvbnN0IGRiID0ge307XG5cbmxldCBzZXF1ZWxpemU7XG5pZiAoY29uZmlnLnVzZV9lbnZfdmFyaWFibGUpIHtcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShwcm9jZXNzLmVudltjb25maWcudXNlX2Vudl92YXJpYWJsZV0sIGNvbmZpZyk7XG59IGVsc2Uge1xuICBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKGNvbmZpZy5kYXRhYmFzZSwgY29uZmlnLnVzZXJuYW1lLCBjb25maWcucGFzc3dvcmQsIGNvbmZpZyk7XG59XG5cbmZzXG4gIC5yZWFkZGlyU3luYyhfX2Rpcm5hbWUpXG4gIC5maWx0ZXIoZmlsZSA9PiAoZmlsZS5pbmRleE9mKCcuJykgIT09IDApICYmIChmaWxlICE9PSBiYXNlbmFtZSkgJiYgKGZpbGUuc2xpY2UoLTMpID09PSAnLmpzJykpXG4gIC5mb3JFYWNoKGZpbGUgPT4ge1xuICAgIGNvbnN0IG1vZGVsID0gc2VxdWVsaXplLmltcG9ydChwYXRoLmpvaW4oX19kaXJuYW1lLCBmaWxlKSk7XG4gICAgZGJbbW9kZWwubmFtZV0gPSBtb2RlbDtcbiAgfSk7XG5cbk9iamVjdC5rZXlzKGRiKS5mb3JFYWNoKG1vZGVsTmFtZSA9PiB7XG4gIGlmIChkYlttb2RlbE5hbWVdLmFzc29jaWF0ZSkge1xuICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcbiAgfVxufSk7XG5cbmRiLnNlcXVlbGl6ZSA9IHNlcXVlbGl6ZTtcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcblxuc2VxdWVsaXplXG4gIC5hdXRoZW50aWNhdGUoKVxuICAudGhlbigoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24gaGFzIGJlZW4gZXN0YWJsaXNoZWQgc3VjY2Vzc2Z1bGx5LicpO1xuICB9KVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gY29ubmVjdCB0byB0aGUgZGF0YWJhc2U6JywgZXJyKTtcbiAgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "basename",
        "path",
        "__filename",
        "env",
        "process",
        "NODE_ENV",
        "config",
        "enVariables",
        "db",
        "sequelize",
        "use_env_variable",
        "Sequelize",
        "database",
        "username",
        "password",
        "fs",
        "readdirSync",
        "__dirname",
        "filter",
        "file",
        "indexOf",
        "slice",
        "forEach",
        "model",
        "join",
        "name",
        "Object",
        "keys",
        "modelName",
        "associate",
        "authenticate",
        "then",
        "console",
        "log",
        "err",
        "error",
        "module",
        "exports"
      ],
      "mappings": ";;;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,QAAQ,GAAGC,iBAAKD,QAAL,CAAcE,UAAd,CAAjB;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,MAAM,GAAGC,mBAAYJ,GAAZ,CAAf;AACA,IAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcP,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIE,qBAAJ,CAAcL,MAAM,CAACM,QAArB,EAA+BN,MAAM,CAACO,QAAtC,EAAgDP,MAAM,CAACQ,QAAvD,EAAiER,MAAjE,CAAZ;AACD;;AAEDS,eACGC,WADH,CACeC,SADf,EAEGC,MAFH,CAEU,UAAAC,IAAI;AAAA,SAAKA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKnB,QAAvC,IAAqDmB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA5E;AAAA,CAFd,EAGGC,OAHH,CAGW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGd,SAAS,UAAT,CAAiBR,iBAAKuB,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAX,EAAAA,EAAE,CAACe,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CANH;;AAQAG,MAAM,CAACC,IAAP,CAAYnB,EAAZ,EAAgBc,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAIpB,EAAE,CAACoB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BrB,IAAAA,EAAE,CAACoB,SAAD,CAAF,CAAcC,SAAd,CAAwBrB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACG,SAAH,GAAeA,qBAAf;AAEAF,SAAS,CACNqB,YADH,GAEGC,IAFH,CAEQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACD,CAJH,WAKS,UAAAC,GAAG,EAAI;AACZF,EAAAA,OAAO,CAACG,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD,CAPH;AASAE,MAAM,CAACC,OAAP,GAAiB7B,EAAjB",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        " \nimport fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport enVariables from '../config/config';\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = enVariables[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach(file => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nsequelize\n  .authenticate()\n  .then(() => {\n    console.log('Connection has been established successfully.');\n  })\n  .catch(err => {\n    console.error('Unable to connect to the database:', err);\n  });\n\nmodule.exports = db;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577118016276
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\config\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\config\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\config\\config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\config\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\config",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = require(\"dotenv\");\n\n(0, _dotenv.config)();\nmodule.exports = {\n  development: {\n    username: 'root',\n    // use_env_variable: 'DATABASE_URL_DEV',\n    password: 'efe123',\n    database: 'voting',\n    host: '127.0.0.1',\n    dialect: 'mysql'\n  },\n  test: {\n    username: 'root',\n    password: 'efe123',\n    // use_env_variable: 'DATABASE_URL_DEV',\n    database: 'voting_test',\n    host: '127.0.0.1',\n    dialect: 'mysql'\n  },\n  production: {\n    // username: 'root',\n    use_env_variable: 'DATABASE_URL_DEV',\n    // password: 'efe123',\n    // database: 'database_production',\n    // host: '127.0.0.1',\n    dialect: 'mysql'\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZGV2ZWxvcG1lbnQiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJob3N0IiwiZGlhbGVjdCIsInRlc3QiLCJwcm9kdWN0aW9uIiwidXNlX2Vudl92YXJpYWJsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTtBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsV0FBVyxFQUFFO0FBQ1hDLElBQUFBLFFBQVEsRUFBRSxNQURDO0FBRVg7QUFDQUMsSUFBQUEsUUFBUSxFQUFFLFFBSEM7QUFJWEMsSUFBQUEsUUFBUSxFQUFFLFFBSkM7QUFLWEMsSUFBQUEsSUFBSSxFQUFFLFdBTEs7QUFNWEMsSUFBQUEsT0FBTyxFQUFFO0FBTkUsR0FERTtBQVVmQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkwsSUFBQUEsUUFBUSxFQUFFLE1BRE47QUFFSkMsSUFBQUEsUUFBUSxFQUFFLFFBRk47QUFHSjtBQUNBQyxJQUFBQSxRQUFRLEVBQUUsYUFKTjtBQUtKQyxJQUFBQSxJQUFJLEVBQUUsV0FMRjtBQU1KQyxJQUFBQSxPQUFPLEVBQUU7QUFOTCxHQVZTO0FBbUJmRSxFQUFBQSxVQUFVLEVBQUU7QUFDVjtBQUNBQyxJQUFBQSxnQkFBZ0IsRUFBRSxrQkFGUjtBQUdWO0FBQ0E7QUFDQTtBQUNBSCxJQUFBQSxPQUFPLEVBQUU7QUFOQztBQW5CRyxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcY29uZmlnIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnZG90ZW52JztcblxuY29uZmlnKCk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBkZXZlbG9wbWVudDoge1xuICAgIHVzZXJuYW1lOiAncm9vdCcsXG4gICAgLy8gdXNlX2Vudl92YXJpYWJsZTogJ0RBVEFCQVNFX1VSTF9ERVYnLFxuICAgIHBhc3N3b3JkOiAnZWZlMTIzJyxcbiAgICBkYXRhYmFzZTogJ3ZvdGluZycsXG4gICAgaG9zdDogJzEyNy4wLjAuMScsXG4gICAgZGlhbGVjdDogJ215c3FsJyxcbiAgXG4gIH0sXG4gIHRlc3Q6IHtcbiAgICB1c2VybmFtZTogJ3Jvb3QnLFxuICAgIHBhc3N3b3JkOiAnZWZlMTIzJyxcbiAgICAvLyB1c2VfZW52X3ZhcmlhYmxlOiAnREFUQUJBU0VfVVJMX0RFVicsXG4gICAgZGF0YWJhc2U6ICd2b3RpbmdfdGVzdCcsXG4gICAgaG9zdDogJzEyNy4wLjAuMScsXG4gICAgZGlhbGVjdDogJ215c3FsJyxcbiAgXG4gIH0sXG4gIHByb2R1Y3Rpb246IHtcbiAgICAvLyB1c2VybmFtZTogJ3Jvb3QnLFxuICAgIHVzZV9lbnZfdmFyaWFibGU6ICdEQVRBQkFTRV9VUkxfREVWJyxcbiAgICAvLyBwYXNzd29yZDogJ2VmZTEyMycsXG4gICAgLy8gZGF0YWJhc2U6ICdkYXRhYmFzZV9wcm9kdWN0aW9uJyxcbiAgICAvLyBob3N0OiAnMTI3LjAuMC4xJyxcbiAgICBkaWFsZWN0OiAnbXlzcWwnLFxuICBcbiAgfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "module",
        "exports",
        "development",
        "username",
        "password",
        "database",
        "host",
        "dialect",
        "test",
        "production",
        "use_env_variable"
      ],
      "mappings": ";;AAAA;;AAEA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,MADC;AAEX;AACAC,IAAAA,QAAQ,EAAE,QAHC;AAIXC,IAAAA,QAAQ,EAAE,QAJC;AAKXC,IAAAA,IAAI,EAAE,WALK;AAMXC,IAAAA,OAAO,EAAE;AANE,GADE;AAUfC,EAAAA,IAAI,EAAE;AACJL,IAAAA,QAAQ,EAAE,MADN;AAEJC,IAAAA,QAAQ,EAAE,QAFN;AAGJ;AACAC,IAAAA,QAAQ,EAAE,aAJN;AAKJC,IAAAA,IAAI,EAAE,WALF;AAMJC,IAAAA,OAAO,EAAE;AANL,GAVS;AAmBfE,EAAAA,UAAU,EAAE;AACV;AACAC,IAAAA,gBAAgB,EAAE,kBAFR;AAGV;AACA;AACA;AACAH,IAAAA,OAAO,EAAE;AANC;AAnBG,CAAjB",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\config",
      "sourcesContent": [
        "import { config } from 'dotenv';\n\nconfig();\n\nmodule.exports = {\n  development: {\n    username: 'root',\n    // use_env_variable: 'DATABASE_URL_DEV',\n    password: 'efe123',\n    database: 'voting',\n    host: '127.0.0.1',\n    dialect: 'mysql',\n  \n  },\n  test: {\n    username: 'root',\n    password: 'efe123',\n    // use_env_variable: 'DATABASE_URL_DEV',\n    database: 'voting_test',\n    host: '127.0.0.1',\n    dialect: 'mysql',\n  \n  },\n  production: {\n    // username: 'root',\n    use_env_variable: 'DATABASE_URL_DEV',\n    // password: 'efe123',\n    // database: 'database_production',\n    // host: '127.0.0.1',\n    dialect: 'mysql',\n  \n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577890824922
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\blacklistedtoken.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\blacklistedtoken.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\blacklistedtoken.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\blacklistedtoken.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "blacklistedtoken.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var BlackListedToken = sequelize.define('BlackListedToken', {\n    uuid: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    token: DataTypes.TEXT\n  }, {});\n\n  BlackListedToken.associate = function (models) {// associations can be defined here\n  };\n\n  return BlackListedToken;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsYWNrbGlzdGVkdG9rZW4uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIkJsYWNrTGlzdGVkVG9rZW4iLCJkZWZpbmUiLCJ1dWlkIiwidHlwZSIsIlVVSUQiLCJkZWZhdWx0VmFsdWUiLCJVVUlEVjQiLCJwcmltYXJ5S2V5IiwidG9rZW4iLCJURVhUIiwiYXNzb2NpYXRlIiwibW9kZWxzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxnQkFBZ0IsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLGtCQUFqQixFQUFxQztBQUM1REMsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxJQURaO0FBRUpDLE1BQUFBLFlBQVksRUFBRU4sU0FBUyxDQUFDTyxNQUZwQjtBQUdKQyxNQUFBQSxVQUFVLEVBQUU7QUFIUixLQURzRDtBQU01REMsSUFBQUEsS0FBSyxFQUFFVCxTQUFTLENBQUNVO0FBTjJDLEdBQXJDLEVBT3RCLEVBUHNCLENBQXpCOztBQVFBVCxFQUFBQSxnQkFBZ0IsQ0FBQ1UsU0FBakIsR0FBNkIsVUFBU0MsTUFBVCxFQUFpQixDQUM1QztBQUNELEdBRkQ7O0FBR0EsU0FBT1gsZ0JBQVA7QUFDRCxDQWJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBCbGFja0xpc3RlZFRva2VuID0gc2VxdWVsaXplLmRlZmluZSgnQmxhY2tMaXN0ZWRUb2tlbicsIHtcbiAgICB1dWlkOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRCxcbiAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLlVVSURWNCxcbiAgICAgIHByaW1hcnlLZXk6IHRydWVcbiAgICB9LFxuICAgIHRva2VuOiBEYXRhVHlwZXMuVEVYVCxcbiAgfSwge30pO1xuICBCbGFja0xpc3RlZFRva2VuLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIC8vIGFzc29jaWF0aW9ucyBjYW4gYmUgZGVmaW5lZCBoZXJlXG4gIH07XG4gIHJldHVybiBCbGFja0xpc3RlZFRva2VuO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "blacklistedtoken.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "BlackListedToken",
        "define",
        "uuid",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "primaryKey",
        "token",
        "TEXT",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,MAAV,CAAiB,kBAAjB,EAAqC;AAC5DC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,IADZ;AAEJC,MAAAA,YAAY,EAAEN,SAAS,CAACO,MAFpB;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADsD;AAM5DC,IAAAA,KAAK,EAAET,SAAS,CAACU;AAN2C,GAArC,EAOtB,EAPsB,CAAzB;;AAQAT,EAAAA,gBAAgB,CAACU,SAAjB,GAA6B,UAASC,MAAT,EAAiB,CAC5C;AACD,GAFD;;AAGA,SAAOX,gBAAP;AACD,CAbD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const BlackListedToken = sequelize.define('BlackListedToken', {\n    uuid: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    token: DataTypes.TEXT,\n  }, {});\n  BlackListedToken.associate = function(models) {\n    // associations can be defined here\n  };\n  return BlackListedToken;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1578488012303
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\candidate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\candidate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\candidate.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\candidate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "candidate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var candidate = sequelize.define('candidate', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    officeContesting: DataTypes.STRING,\n    status: DataTypes.STRING\n  }, {});\n\n  candidate.associate = function (models) {\n    candidate.belongsTo(models.party, {\n      as: 'party',\n      foreignKey: 'party_uuid'\n    });\n    candidate.belongsTo(models.User, {\n      as: 'user',\n      foreignKey: 'user_uuid'\n    }); // associations can be defined here\n  };\n\n  return candidate;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbmRpZGF0ZS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiY2FuZGlkYXRlIiwiZGVmaW5lIiwidXVpZCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJ0eXBlIiwiVVVJRCIsImRlZmF1bHRWYWx1ZSIsIlVVSURWNCIsIm9mZmljZUNvbnRlc3RpbmciLCJTVFJJTkciLCJzdGF0dXMiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJwYXJ0eSIsImFzIiwiZm9yZWlnbktleSIsIlVzZXIiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsU0FBUyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDOUNDLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxTQUFTLEVBQUUsS0FEUDtBQUVKQyxNQUFBQSxVQUFVLEVBQUUsSUFGUjtBQUdKQyxNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ08sSUFIWjtBQUlKQyxNQUFBQSxZQUFZLEVBQUVSLFNBQVMsQ0FBQ1M7QUFKcEIsS0FEd0M7QUFPOUNDLElBQUFBLGdCQUFnQixFQUFFVixTQUFTLENBQUNXLE1BUGtCO0FBUTlDQyxJQUFBQSxNQUFNLEVBQUVaLFNBQVMsQ0FBQ1c7QUFSNEIsR0FBOUIsRUFTZixFQVRlLENBQWxCOztBQVVBVixFQUFBQSxTQUFTLENBQUNZLFNBQVYsR0FBc0IsVUFBQUMsTUFBTSxFQUFJO0FBQzlCYixJQUFBQSxTQUFTLENBQUNjLFNBQVYsQ0FBb0JELE1BQU0sQ0FBQ0UsS0FBM0IsRUFBa0M7QUFDaENDLE1BQUFBLEVBQUUsRUFBRSxPQUQ0QjtBQUVoQ0MsTUFBQUEsVUFBVSxFQUFFO0FBRm9CLEtBQWxDO0FBSUFqQixJQUFBQSxTQUFTLENBQUNjLFNBQVYsQ0FBb0JELE1BQU0sQ0FBQ0ssSUFBM0IsRUFBaUM7QUFDL0JGLE1BQUFBLEVBQUUsRUFBRSxNQUQyQjtBQUUvQkMsTUFBQUEsVUFBVSxFQUFFO0FBRm1CLEtBQWpDLEVBTDhCLENBUzlCO0FBQ0QsR0FWRDs7QUFXQSxTQUFPakIsU0FBUDtBQUNELENBdkJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBjYW5kaWRhdGUgPSBzZXF1ZWxpemUuZGVmaW5lKCdjYW5kaWRhdGUnLCB7XG4gICAgdXVpZDoge1xuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRCxcbiAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLlVVSURWNFxuICAgIH0sXG4gICAgb2ZmaWNlQ29udGVzdGluZzogRGF0YVR5cGVzLlNUUklORyxcbiAgICBzdGF0dXM6IERhdGFUeXBlcy5TVFJJTkdcbiAgfSwge30pO1xuICBjYW5kaWRhdGUuYXNzb2NpYXRlID0gbW9kZWxzID0+IHtcbiAgICBjYW5kaWRhdGUuYmVsb25nc1RvKG1vZGVscy5wYXJ0eSwge1xuICAgICAgYXM6ICdwYXJ0eScsIFxuICAgICAgZm9yZWlnbktleTogJ3BhcnR5X3V1aWQnIFxuICAgIH0pO1xuICAgIGNhbmRpZGF0ZS5iZWxvbmdzVG8obW9kZWxzLlVzZXIsIHtcbiAgICAgIGFzOiAndXNlcicsIFxuICAgICAgZm9yZWlnbktleTogJ3VzZXJfdXVpZCcgXG4gICAgfSk7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgfTtcbiAgcmV0dXJuIGNhbmRpZGF0ZTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "candidate.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "candidate",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "officeContesting",
        "STRING",
        "status",
        "associate",
        "models",
        "belongsTo",
        "party",
        "as",
        "foreignKey",
        "User"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC9CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KADwC;AAO9CC,IAAAA,gBAAgB,EAAEV,SAAS,CAACW,MAPkB;AAQ9CC,IAAAA,MAAM,EAAEZ,SAAS,CAACW;AAR4B,GAA9B,EASf,EATe,CAAlB;;AAUAV,EAAAA,SAAS,CAACY,SAAV,GAAsB,UAAAC,MAAM,EAAI;AAC9Bb,IAAAA,SAAS,CAACc,SAAV,CAAoBD,MAAM,CAACE,KAA3B,EAAkC;AAChCC,MAAAA,EAAE,EAAE,OAD4B;AAEhCC,MAAAA,UAAU,EAAE;AAFoB,KAAlC;AAIAjB,IAAAA,SAAS,CAACc,SAAV,CAAoBD,MAAM,CAACK,IAA3B,EAAiC;AAC/BF,MAAAA,EAAE,EAAE,MAD2B;AAE/BC,MAAAA,UAAU,EAAE;AAFmB,KAAjC,EAL8B,CAS9B;AACD,GAVD;;AAWA,SAAOjB,SAAP;AACD,CAvBD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\n  const candidate = sequelize.define('candidate', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    officeContesting: DataTypes.STRING,\n    status: DataTypes.STRING\n  }, {});\n  candidate.associate = models => {\n    candidate.belongsTo(models.party, {\n      as: 'party', \n      foreignKey: 'party_uuid' \n    });\n    candidate.belongsTo(models.User, {\n      as: 'user', \n      foreignKey: 'user_uuid' \n    });\n    // associations can be defined here\n  };\n  return candidate;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579050295602
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\chat.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\chat.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\chat.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\chat.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "chat.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var chat = sequelize.define('chat', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    message: DataTypes.STRING\n  }, {});\n\n  chat.associate = function (models) {// associations can be defined here\n  };\n\n  return chat;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImNoYXQiLCJkZWZpbmUiLCJ1dWlkIiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInR5cGUiLCJVVUlEIiwiZGVmYXVsdFZhbHVlIiwiVVVJRFY0IiwibWVzc2FnZSIsIlNUUklORyIsImFzc29jaWF0ZSIsIm1vZGVscyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsSUFBSSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDcENDLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxTQUFTLEVBQUUsS0FEUDtBQUVKQyxNQUFBQSxVQUFVLEVBQUUsSUFGUjtBQUdKQyxNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ08sSUFIWjtBQUlKQyxNQUFBQSxZQUFZLEVBQUVSLFNBQVMsQ0FBQ1M7QUFKcEIsS0FEOEI7QUFPcENDLElBQUFBLE9BQU8sRUFBRVYsU0FBUyxDQUFDVztBQVBpQixHQUF6QixFQVFWLEVBUlUsQ0FBYjs7QUFTQVYsRUFBQUEsSUFBSSxDQUFDVyxTQUFMLEdBQWlCLFVBQVNDLE1BQVQsRUFBaUIsQ0FDaEM7QUFDRCxHQUZEOztBQUdBLFNBQU9aLElBQVA7QUFDRCxDQWREIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBjaGF0ID0gc2VxdWVsaXplLmRlZmluZSgnY2hhdCcsIHtcbiAgICB1dWlkOiB7XG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgcHJpbWFyeUtleTogdHJ1ZSxcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5VVUlELFxuICAgICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuVVVJRFY0XG4gICAgfSxcbiAgICBtZXNzYWdlOiBEYXRhVHlwZXMuU1RSSU5HXG4gIH0sIHt9KTtcbiAgY2hhdC5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICB9O1xuICByZXR1cm4gY2hhdDtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "chat.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "chat",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "message",
        "STRING",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KAD8B;AAOpCC,IAAAA,OAAO,EAAEV,SAAS,CAACW;AAPiB,GAAzB,EAQV,EARU,CAAb;;AASAV,EAAAA,IAAI,CAACW,SAAL,GAAiB,UAASC,MAAT,EAAiB,CAChC;AACD,GAFD;;AAGA,SAAOZ,IAAP;AACD,CAdD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const chat = sequelize.define('chat', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    message: DataTypes.STRING\n  }, {});\n  chat.associate = function(models) {\n    // associations can be defined here\n  };\n  return chat;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577353099276
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\comment.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\comment.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\comment.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "comment.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var comment = sequelize.define('comment', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    message: DataTypes.STRING\n  }, {});\n\n  comment.associate = function (models) {// associations can be defined here\n  };\n\n  return comment;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsImNvbW1lbnQiLCJkZWZpbmUiLCJ1dWlkIiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInR5cGUiLCJVVUlEIiwiZGVmYXVsdFZhbHVlIiwiVVVJRFY0IiwibWVzc2FnZSIsIlNUUklORyIsImFzc29jaWF0ZSIsIm1vZGVscyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsT0FBTyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsU0FBakIsRUFBNEI7QUFDMUNDLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxTQUFTLEVBQUUsS0FEUDtBQUVKQyxNQUFBQSxVQUFVLEVBQUUsSUFGUjtBQUdKQyxNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ08sSUFIWjtBQUlKQyxNQUFBQSxZQUFZLEVBQUVSLFNBQVMsQ0FBQ1M7QUFKcEIsS0FEb0M7QUFPMUNDLElBQUFBLE9BQU8sRUFBRVYsU0FBUyxDQUFDVztBQVB1QixHQUE1QixFQVFiLEVBUmEsQ0FBaEI7O0FBU0FWLEVBQUFBLE9BQU8sQ0FBQ1csU0FBUixHQUFvQixVQUFTQyxNQUFULEVBQWlCLENBQ25DO0FBQ0QsR0FGRDs7QUFHQSxTQUFPWixPQUFQO0FBQ0QsQ0FkRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgY29tbWVudCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2NvbW1lbnQnLCB7XG4gICAgdXVpZDoge1xuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRCxcbiAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLlVVSURWNFxuICAgIH0sXG4gICAgbWVzc2FnZTogRGF0YVR5cGVzLlNUUklOR1xuICB9LCB7fSk7XG4gIGNvbW1lbnQuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgfTtcbiAgcmV0dXJuIGNvbW1lbnQ7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "comment.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "comment",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "message",
        "STRING",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KADoC;AAO1CC,IAAAA,OAAO,EAAEV,SAAS,CAACW;AAPuB,GAA5B,EAQb,EARa,CAAhB;;AASAV,EAAAA,OAAO,CAACW,SAAR,GAAoB,UAASC,MAAT,EAAiB,CACnC;AACD,GAFD;;AAGA,SAAOZ,OAAP;AACD,CAdD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const comment = sequelize.define('comment', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    message: DataTypes.STRING\n  }, {});\n  comment.associate = function(models) {\n    // associations can be defined here\n  };\n  return comment;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577353088662
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\notification.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\notification.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\notification.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\notification.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "notification.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var notification = sequelize.define('notification', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    message: DataTypes.STRING\n  }, {});\n\n  notification.associate = function (models) {// associations can be defined here\n  };\n\n  return notification;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwibm90aWZpY2F0aW9uIiwiZGVmaW5lIiwidXVpZCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJ0eXBlIiwiVVVJRCIsImRlZmF1bHRWYWx1ZSIsIlVVSURWNCIsIm1lc3NhZ2UiLCJTVFJJTkciLCJhc3NvY2lhdGUiLCJtb2RlbHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLFlBQVksR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLGNBQWpCLEVBQWlDO0FBQ3BEQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsU0FBUyxFQUFFLEtBRFA7QUFFSkMsTUFBQUEsVUFBVSxFQUFFLElBRlI7QUFHSkMsTUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNPLElBSFo7QUFJSkMsTUFBQUEsWUFBWSxFQUFFUixTQUFTLENBQUNTO0FBSnBCLEtBRDhDO0FBT3BEQyxJQUFBQSxPQUFPLEVBQUVWLFNBQVMsQ0FBQ1c7QUFQaUMsR0FBakMsRUFRbEIsRUFSa0IsQ0FBckI7O0FBU0FWLEVBQUFBLFlBQVksQ0FBQ1csU0FBYixHQUF5QixVQUFTQyxNQUFULEVBQWlCLENBQ3hDO0FBQ0QsR0FGRDs7QUFHQSxTQUFPWixZQUFQO0FBQ0QsQ0FkRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3Qgbm90aWZpY2F0aW9uID0gc2VxdWVsaXplLmRlZmluZSgnbm90aWZpY2F0aW9uJywge1xuICAgIHV1aWQ6IHtcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICBwcmltYXJ5S2V5OiB0cnVlLFxuICAgICAgdHlwZTogRGF0YVR5cGVzLlVVSUQsXG4gICAgICBkZWZhdWx0VmFsdWU6IERhdGFUeXBlcy5VVUlEVjRcbiAgICB9LFxuICAgIG1lc3NhZ2U6IERhdGFUeXBlcy5TVFJJTkdcbiAgfSwge30pO1xuICBub3RpZmljYXRpb24uYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgfTtcbiAgcmV0dXJuIG5vdGlmaWNhdGlvbjtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "notification.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "notification",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "message",
        "STRING",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,YAAY,GAAGF,SAAS,CAACG,MAAV,CAAiB,cAAjB,EAAiC;AACpDC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KAD8C;AAOpDC,IAAAA,OAAO,EAAEV,SAAS,CAACW;AAPiC,GAAjC,EAQlB,EARkB,CAArB;;AASAV,EAAAA,YAAY,CAACW,SAAb,GAAyB,UAASC,MAAT,EAAiB,CACxC;AACD,GAFD;;AAGA,SAAOZ,YAAP;AACD,CAdD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const notification = sequelize.define('notification', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    message: DataTypes.STRING\n  }, {});\n  notification.associate = function(models) {\n    // associations can be defined here\n  };\n  return notification;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577353075735
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\office_position.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\office_position.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\office_position.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\office_position.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "office_position.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var office_position = sequelize.define('office_position', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    name: DataTypes.STRING\n  }, {});\n\n  office_position.associate = function (models) {// associations can be defined here\n  };\n\n  return office_position;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9mZmljZV9wb3NpdGlvbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwib2ZmaWNlX3Bvc2l0aW9uIiwiZGVmaW5lIiwidXVpZCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJ0eXBlIiwiVVVJRCIsImRlZmF1bHRWYWx1ZSIsIlVVSURWNCIsIm5hbWUiLCJTVFJJTkciLCJhc3NvY2lhdGUiLCJtb2RlbHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLGVBQWUsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLGlCQUFqQixFQUFvQztBQUMxREMsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLFNBQVMsRUFBRSxLQURQO0FBRUpDLE1BQUFBLFVBQVUsRUFBRSxJQUZSO0FBR0pDLE1BQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDTyxJQUhaO0FBSUpDLE1BQUFBLFlBQVksRUFBRVIsU0FBUyxDQUFDUztBQUpwQixLQURvRDtBQU8xREMsSUFBQUEsSUFBSSxFQUFFVixTQUFTLENBQUNXO0FBUDBDLEdBQXBDLEVBUXJCLEVBUnFCLENBQXhCOztBQVNBVixFQUFBQSxlQUFlLENBQUNXLFNBQWhCLEdBQTRCLFVBQVNDLE1BQVQsRUFBaUIsQ0FDM0M7QUFDRCxHQUZEOztBQUdBLFNBQU9aLGVBQVA7QUFDRCxDQWREIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBvZmZpY2VfcG9zaXRpb24gPSBzZXF1ZWxpemUuZGVmaW5lKCdvZmZpY2VfcG9zaXRpb24nLCB7XG4gICAgdXVpZDoge1xuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRCxcbiAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLlVVSURWNFxuICAgIH0sXG4gICAgbmFtZTogRGF0YVR5cGVzLlNUUklOR1xuICB9LCB7fSk7XG4gIG9mZmljZV9wb3NpdGlvbi5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICB9O1xuICByZXR1cm4gb2ZmaWNlX3Bvc2l0aW9uO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "office_position.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "office_position",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "name",
        "STRING",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,eAAe,GAAGF,SAAS,CAACG,MAAV,CAAiB,iBAAjB,EAAoC;AAC1DC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KADoD;AAO1DC,IAAAA,IAAI,EAAEV,SAAS,CAACW;AAP0C,GAApC,EAQrB,EARqB,CAAxB;;AASAV,EAAAA,eAAe,CAACW,SAAhB,GAA4B,UAASC,MAAT,EAAiB,CAC3C;AACD,GAFD;;AAGA,SAAOZ,eAAP;AACD,CAdD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const office_position = sequelize.define('office_position', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    name: DataTypes.STRING\n  }, {});\n  office_position.associate = function(models) {\n    // associations can be defined here\n  };\n  return office_position;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577353066956
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\party.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\party.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\party.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\party.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "party.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var party = sequelize.define('party', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    party_name: DataTypes.STRING,\n    phone_number: DataTypes.STRING,\n    address: DataTypes.STRING,\n    status: DataTypes.STRING\n  }, {});\n\n  party.associate = function (models) {\n    // associations can be defined here\n    party.belongsTo(models.User, {\n      as: 'party',\n      foreignKey: 'admin_uuid',\n      onDelete: 'CASCADE',\n      constraints: false\n    });\n    party.hasMany(models.candidate, {\n      as: 'candidate',\n      foreignKey: 'party_uuid',\n      onDelete: 'CASCADE'\n    });\n    party.belongsToMany(models.User, {\n      through: 'user_party',\n      foreignKey: 'user_uuid',\n      constraints: false\n    });\n  };\n\n  return party;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnR5LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJwYXJ0eSIsImRlZmluZSIsInV1aWQiLCJhbGxvd051bGwiLCJwcmltYXJ5S2V5IiwidHlwZSIsIlVVSUQiLCJkZWZhdWx0VmFsdWUiLCJVVUlEVjQiLCJwYXJ0eV9uYW1lIiwiU1RSSU5HIiwicGhvbmVfbnVtYmVyIiwiYWRkcmVzcyIsInN0YXR1cyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsIlVzZXIiLCJhcyIsImZvcmVpZ25LZXkiLCJvbkRlbGV0ZSIsImNvbnN0cmFpbnRzIiwiaGFzTWFueSIsImNhbmRpZGF0ZSIsImJlbG9uZ3NUb01hbnkiLCJ0aHJvdWdoIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxLQUFLLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixPQUFqQixFQUEwQjtBQUN0Q0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLFNBQVMsRUFBRSxLQURQO0FBRUpDLE1BQUFBLFVBQVUsRUFBRSxJQUZSO0FBR0pDLE1BQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDTyxJQUhaO0FBSUpDLE1BQUFBLFlBQVksRUFBRVIsU0FBUyxDQUFDUztBQUpwQixLQURnQztBQU90Q0MsSUFBQUEsVUFBVSxFQUFFVixTQUFTLENBQUNXLE1BUGdCO0FBUXRDQyxJQUFBQSxZQUFZLEVBQUVaLFNBQVMsQ0FBQ1csTUFSYztBQVN0Q0UsSUFBQUEsT0FBTyxFQUFFYixTQUFTLENBQUNXLE1BVG1CO0FBVXRDRyxJQUFBQSxNQUFNLEVBQUVkLFNBQVMsQ0FBQ1c7QUFWb0IsR0FBMUIsRUFXWCxFQVhXLENBQWQ7O0FBWUFWLEVBQUFBLEtBQUssQ0FBQ2MsU0FBTixHQUFrQixVQUFDQyxNQUFELEVBQVk7QUFDNUI7QUFDQWYsSUFBQUEsS0FBSyxDQUFDZ0IsU0FBTixDQUFnQkQsTUFBTSxDQUFDRSxJQUF2QixFQUE2QjtBQUMzQkMsTUFBQUEsRUFBRSxFQUFFLE9BRHVCO0FBRTNCQyxNQUFBQSxVQUFVLEVBQUUsWUFGZTtBQUczQkMsTUFBQUEsUUFBUSxFQUFFLFNBSGlCO0FBSTNCQyxNQUFBQSxXQUFXLEVBQUU7QUFKYyxLQUE3QjtBQU1BckIsSUFBQUEsS0FBSyxDQUFDc0IsT0FBTixDQUFjUCxNQUFNLENBQUNRLFNBQXJCLEVBQWdDO0FBQzlCTCxNQUFBQSxFQUFFLEVBQUUsV0FEMEI7QUFFOUJDLE1BQUFBLFVBQVUsRUFBRSxZQUZrQjtBQUc5QkMsTUFBQUEsUUFBUSxFQUFFO0FBSG9CLEtBQWhDO0FBS0FwQixJQUFBQSxLQUFLLENBQUN3QixhQUFOLENBQW9CVCxNQUFNLENBQUNFLElBQTNCLEVBQWlDO0FBQy9CUSxNQUFBQSxPQUFPLEVBQUUsWUFEc0I7QUFFL0JOLE1BQUFBLFVBQVUsRUFBRSxXQUZtQjtBQUcvQkUsTUFBQUEsV0FBVyxFQUFFO0FBSGtCLEtBQWpDO0FBS0QsR0FsQkQ7O0FBbUJBLFNBQU9yQixLQUFQO0FBQ0QsQ0FqQ0QiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IHBhcnR5ID0gc2VxdWVsaXplLmRlZmluZSgncGFydHknLCB7XG4gICAgdXVpZDoge1xuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRCxcbiAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLlVVSURWNFxuICAgIH0sXG4gICAgcGFydHlfbmFtZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBwaG9uZV9udW1iZXI6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgYWRkcmVzczogRGF0YVR5cGVzLlNUUklORyxcbiAgICBzdGF0dXM6IERhdGFUeXBlcy5TVFJJTkdcbiAgfSwge30pO1xuICBwYXJ0eS5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgICBwYXJ0eS5iZWxvbmdzVG8obW9kZWxzLlVzZXIsIHtcbiAgICAgIGFzOiAncGFydHknLFxuICAgICAgZm9yZWlnbktleTogJ2FkbWluX3V1aWQnLFxuICAgICAgb25EZWxldGU6ICdDQVNDQURFJyxcbiAgICAgIGNvbnN0cmFpbnRzOiBmYWxzZVxuICAgIH0pO1xuICAgIHBhcnR5Lmhhc01hbnkobW9kZWxzLmNhbmRpZGF0ZSwge1xuICAgICAgYXM6ICdjYW5kaWRhdGUnLCBcbiAgICAgIGZvcmVpZ25LZXk6ICdwYXJ0eV91dWlkJyxcbiAgICAgIG9uRGVsZXRlOiAnQ0FTQ0FERSdcbiAgICB9KTtcbiAgICBwYXJ0eS5iZWxvbmdzVG9NYW55KG1vZGVscy5Vc2VyLCB7XG4gICAgICB0aHJvdWdoOiAndXNlcl9wYXJ0eScsXG4gICAgICBmb3JlaWduS2V5OiAndXNlcl91dWlkJyxcbiAgICAgIGNvbnN0cmFpbnRzOiBmYWxzZVxuICAgIH0pO1xuICB9O1xuICByZXR1cm4gcGFydHk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "party.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "party",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "party_name",
        "STRING",
        "phone_number",
        "address",
        "status",
        "associate",
        "models",
        "belongsTo",
        "User",
        "as",
        "foreignKey",
        "onDelete",
        "constraints",
        "hasMany",
        "candidate",
        "belongsToMany",
        "through"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAV,CAAiB,OAAjB,EAA0B;AACtCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KADgC;AAOtCC,IAAAA,UAAU,EAAEV,SAAS,CAACW,MAPgB;AAQtCC,IAAAA,YAAY,EAAEZ,SAAS,CAACW,MARc;AAStCE,IAAAA,OAAO,EAAEb,SAAS,CAACW,MATmB;AAUtCG,IAAAA,MAAM,EAAEd,SAAS,CAACW;AAVoB,GAA1B,EAWX,EAXW,CAAd;;AAYAV,EAAAA,KAAK,CAACc,SAAN,GAAkB,UAACC,MAAD,EAAY;AAC5B;AACAf,IAAAA,KAAK,CAACgB,SAAN,CAAgBD,MAAM,CAACE,IAAvB,EAA6B;AAC3BC,MAAAA,EAAE,EAAE,OADuB;AAE3BC,MAAAA,UAAU,EAAE,YAFe;AAG3BC,MAAAA,QAAQ,EAAE,SAHiB;AAI3BC,MAAAA,WAAW,EAAE;AAJc,KAA7B;AAMArB,IAAAA,KAAK,CAACsB,OAAN,CAAcP,MAAM,CAACQ,SAArB,EAAgC;AAC9BL,MAAAA,EAAE,EAAE,WAD0B;AAE9BC,MAAAA,UAAU,EAAE,YAFkB;AAG9BC,MAAAA,QAAQ,EAAE;AAHoB,KAAhC;AAKApB,IAAAA,KAAK,CAACwB,aAAN,CAAoBT,MAAM,CAACE,IAA3B,EAAiC;AAC/BQ,MAAAA,OAAO,EAAE,YADsB;AAE/BN,MAAAA,UAAU,EAAE,WAFmB;AAG/BE,MAAAA,WAAW,EAAE;AAHkB,KAAjC;AAKD,GAlBD;;AAmBA,SAAOrB,KAAP;AACD,CAjCD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const party = sequelize.define('party', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    party_name: DataTypes.STRING,\n    phone_number: DataTypes.STRING,\n    address: DataTypes.STRING,\n    status: DataTypes.STRING\n  }, {});\n  party.associate = (models) => {\n    // associations can be defined here\n    party.belongsTo(models.User, {\n      as: 'party',\n      foreignKey: 'admin_uuid',\n      onDelete: 'CASCADE',\n      constraints: false\n    });\n    party.hasMany(models.candidate, {\n      as: 'candidate', \n      foreignKey: 'party_uuid',\n      onDelete: 'CASCADE'\n    });\n    party.belongsToMany(models.User, {\n      through: 'user_party',\n      foreignKey: 'user_uuid',\n      constraints: false\n    });\n  };\n  return party;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579043989774
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\permission.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\permission.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\permission.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\permission.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "permission.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var permission = sequelize.define('permission', {\n    uuid: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    name: DataTypes.STRING\n  }, {});\n\n  permission.associate = function (models) {\n    permission.belongsToMany(models.Role, {\n      through: 'role_permission',\n      as: 'roles',\n      foreignKey: 'permission_id'\n    });\n  };\n\n  return permission;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcm1pc3Npb24uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInBlcm1pc3Npb24iLCJkZWZpbmUiLCJ1dWlkIiwidHlwZSIsIlVVSUQiLCJkZWZhdWx0VmFsdWUiLCJVVUlEVjQiLCJwcmltYXJ5S2V5IiwibmFtZSIsIlNUUklORyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUb01hbnkiLCJSb2xlIiwidGhyb3VnaCIsImFzIiwiZm9yZWlnbktleSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsVUFBVSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsWUFBakIsRUFBK0I7QUFDaERDLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ssSUFEWjtBQUVKQyxNQUFBQSxZQUFZLEVBQUVOLFNBQVMsQ0FBQ08sTUFGcEI7QUFHSkMsTUFBQUEsVUFBVSxFQUFFO0FBSFIsS0FEMEM7QUFNaERDLElBQUFBLElBQUksRUFBRVQsU0FBUyxDQUFDVTtBQU5nQyxHQUEvQixFQU9oQixFQVBnQixDQUFuQjs7QUFRQVQsRUFBQUEsVUFBVSxDQUFDVSxTQUFYLEdBQXVCLFVBQUNDLE1BQUQsRUFBWTtBQUNqQ1gsSUFBQUEsVUFBVSxDQUFDWSxhQUFYLENBQXlCRCxNQUFNLENBQUNFLElBQWhDLEVBQXNDO0FBQ3BDQyxNQUFBQSxPQUFPLEVBQUUsaUJBRDJCO0FBRXBDQyxNQUFBQSxFQUFFLEVBQUUsT0FGZ0M7QUFHcENDLE1BQUFBLFVBQVUsRUFBRTtBQUh3QixLQUF0QztBQUtELEdBTkQ7O0FBT0EsU0FBT2hCLFVBQVA7QUFDRCxDQWpCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgcGVybWlzc2lvbiA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3Blcm1pc3Npb24nLCB7XG4gICAgdXVpZDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlVVSUQsXG4gICAgICBkZWZhdWx0VmFsdWU6IERhdGFUeXBlcy5VVUlEVjQsXG4gICAgICBwcmltYXJ5S2V5OiB0cnVlXG4gICAgfSxcbiAgICBuYW1lOiBEYXRhVHlwZXMuU1RSSU5HXG4gIH0sIHt9KTtcbiAgcGVybWlzc2lvbi5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XG4gICAgcGVybWlzc2lvbi5iZWxvbmdzVG9NYW55KG1vZGVscy5Sb2xlLCB7XG4gICAgICB0aHJvdWdoOiAncm9sZV9wZXJtaXNzaW9uJyxcbiAgICAgIGFzOiAncm9sZXMnLFxuICAgICAgZm9yZWlnbktleTogJ3Blcm1pc3Npb25faWQnXG4gICAgfSk7XG4gIH07XG4gIHJldHVybiBwZXJtaXNzaW9uO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "permission.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "permission",
        "define",
        "uuid",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "primaryKey",
        "name",
        "STRING",
        "associate",
        "models",
        "belongsToMany",
        "Role",
        "through",
        "as",
        "foreignKey"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,UAAU,GAAGF,SAAS,CAACG,MAAV,CAAiB,YAAjB,EAA+B;AAChDC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,IADZ;AAEJC,MAAAA,YAAY,EAAEN,SAAS,CAACO,MAFpB;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAD0C;AAMhDC,IAAAA,IAAI,EAAET,SAAS,CAACU;AANgC,GAA/B,EAOhB,EAPgB,CAAnB;;AAQAT,EAAAA,UAAU,CAACU,SAAX,GAAuB,UAACC,MAAD,EAAY;AACjCX,IAAAA,UAAU,CAACY,aAAX,CAAyBD,MAAM,CAACE,IAAhC,EAAsC;AACpCC,MAAAA,OAAO,EAAE,iBAD2B;AAEpCC,MAAAA,EAAE,EAAE,OAFgC;AAGpCC,MAAAA,UAAU,EAAE;AAHwB,KAAtC;AAKD,GAND;;AAOA,SAAOhB,UAAP;AACD,CAjBD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const permission = sequelize.define('permission', {\n    uuid: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    name: DataTypes.STRING\n  }, {});\n  permission.associate = (models) => {\n    permission.belongsToMany(models.Role, {\n      through: 'role_permission',\n      as: 'roles',\n      foreignKey: 'permission_id'\n    });\n  };\n  return permission;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1578431150277
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\result.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\result.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\result.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\result.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "result.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Result = sequelize.define('Result', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    party: DataTypes.STRING\n  }, {});\n\n  Result.associate = function (models) {// associations can be defined here\n  };\n\n  return Result;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3VsdC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiUmVzdWx0IiwiZGVmaW5lIiwidXVpZCIsImFsbG93TnVsbCIsInByaW1hcnlLZXkiLCJ0eXBlIiwiVVVJRCIsImRlZmF1bHRWYWx1ZSIsIlVVSURWNCIsInBhcnR5IiwiU1RSSU5HIiwiYXNzb2NpYXRlIiwibW9kZWxzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxNQUFNLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixRQUFqQixFQUEyQjtBQUN4Q0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLFNBQVMsRUFBRSxLQURQO0FBRUpDLE1BQUFBLFVBQVUsRUFBRSxJQUZSO0FBR0pDLE1BQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDTyxJQUhaO0FBSUpDLE1BQUFBLFlBQVksRUFBRVIsU0FBUyxDQUFDUztBQUpwQixLQURrQztBQU94Q0MsSUFBQUEsS0FBSyxFQUFFVixTQUFTLENBQUNXO0FBUHVCLEdBQTNCLEVBUVosRUFSWSxDQUFmOztBQVNBVixFQUFBQSxNQUFNLENBQUNXLFNBQVAsR0FBbUIsVUFBU0MsTUFBVCxFQUFpQixDQUNsQztBQUNELEdBRkQ7O0FBR0EsU0FBT1osTUFBUDtBQUNELENBZEQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFJlc3VsdCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1Jlc3VsdCcsIHtcbiAgICB1dWlkOiB7XG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgcHJpbWFyeUtleTogdHJ1ZSxcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5VVUlELFxuICAgICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuVVVJRFY0XG4gICAgfSxcbiAgICBwYXJ0eTogRGF0YVR5cGVzLlNUUklOR1xuICB9LCB7fSk7XG4gIFJlc3VsdC5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICB9O1xuICByZXR1cm4gUmVzdWx0O1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "result.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Result",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "party",
        "STRING",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACxCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KADkC;AAOxCC,IAAAA,KAAK,EAAEV,SAAS,CAACW;AAPuB,GAA3B,EAQZ,EARY,CAAf;;AASAV,EAAAA,MAAM,CAACW,SAAP,GAAmB,UAASC,MAAT,EAAiB,CAClC;AACD,GAFD;;AAGA,SAAOZ,MAAP;AACD,CAdD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Result = sequelize.define('Result', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    party: DataTypes.STRING\n  }, {});\n  Result.associate = function(models) {\n    // associations can be defined here\n  };\n  return Result;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577353045853
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\role.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\role.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\role.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\role.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "role.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Role = sequelize.define('Role', {\n    uuid: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    name: DataTypes.STRING\n  }, {});\n\n  Role.associate = function (models) {\n    Role.hasMany(models.User, {\n      foreignKey: 'role_uuid',\n      as: 'roles'\n    });\n    Role.belongsToMany(models.permission, {\n      through: 'role_permission',\n      as: 'permission',\n      foreignKey: 'Role_uuid'\n    });\n  };\n\n  return Role;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlJvbGUiLCJkZWZpbmUiLCJ1dWlkIiwidHlwZSIsIlVVSUQiLCJkZWZhdWx0VmFsdWUiLCJVVUlEVjQiLCJwcmltYXJ5S2V5IiwibmFtZSIsIlNUUklORyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJVc2VyIiwiZm9yZWlnbktleSIsImFzIiwiYmVsb25nc1RvTWFueSIsInBlcm1pc3Npb24iLCJ0aHJvdWdoIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLElBQUksR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ3BDQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLElBRFo7QUFFSkMsTUFBQUEsWUFBWSxFQUFFTixTQUFTLENBQUNPLE1BRnBCO0FBR0pDLE1BQUFBLFVBQVUsRUFBRTtBQUhSLEtBRDhCO0FBTXBDQyxJQUFBQSxJQUFJLEVBQUVULFNBQVMsQ0FBQ1U7QUFOb0IsR0FBekIsRUFPVixFQVBVLENBQWI7O0FBUUFULEVBQUFBLElBQUksQ0FBQ1UsU0FBTCxHQUFpQixVQUFDQyxNQUFELEVBQVk7QUFDM0JYLElBQUFBLElBQUksQ0FBQ1ksT0FBTCxDQUFhRCxNQUFNLENBQUNFLElBQXBCLEVBQTBCO0FBQ3hCQyxNQUFBQSxVQUFVLEVBQUUsV0FEWTtBQUV4QkMsTUFBQUEsRUFBRSxFQUFFO0FBRm9CLEtBQTFCO0FBSUFmLElBQUFBLElBQUksQ0FBQ2dCLGFBQUwsQ0FBbUJMLE1BQU0sQ0FBQ00sVUFBMUIsRUFBc0M7QUFDcENDLE1BQUFBLE9BQU8sRUFBRSxpQkFEMkI7QUFFcENILE1BQUFBLEVBQUUsRUFBRSxZQUZnQztBQUdwQ0QsTUFBQUEsVUFBVSxFQUFFO0FBSHdCLEtBQXRDO0FBS0QsR0FWRDs7QUFXQSxTQUFPZCxJQUFQO0FBQ0QsQ0FyQkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFJvbGUgPSBzZXF1ZWxpemUuZGVmaW5lKCdSb2xlJywge1xuICAgIHV1aWQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5VVUlELFxuICAgICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuVVVJRFY0LFxuICAgICAgcHJpbWFyeUtleTogdHJ1ZVxuICAgIH0sXG4gICAgbmFtZTogRGF0YVR5cGVzLlNUUklOR1xuICB9LCB7fSk7XG4gIFJvbGUuYXNzb2NpYXRlID0gKG1vZGVscykgPT4ge1xuICAgIFJvbGUuaGFzTWFueShtb2RlbHMuVXNlciwge1xuICAgICAgZm9yZWlnbktleTogJ3JvbGVfdXVpZCcsXG4gICAgICBhczogJ3JvbGVzJ1xuICAgIH0pO1xuICAgIFJvbGUuYmVsb25nc1RvTWFueShtb2RlbHMucGVybWlzc2lvbiwge1xuICAgICAgdGhyb3VnaDogJ3JvbGVfcGVybWlzc2lvbicsXG4gICAgICBhczogJ3Blcm1pc3Npb24nLFxuICAgICAgZm9yZWlnbktleTogJ1JvbGVfdXVpZCdcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIFJvbGU7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "role.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Role",
        "define",
        "uuid",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "primaryKey",
        "name",
        "STRING",
        "associate",
        "models",
        "hasMany",
        "User",
        "foreignKey",
        "as",
        "belongsToMany",
        "permission",
        "through"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,IADZ;AAEJC,MAAAA,YAAY,EAAEN,SAAS,CAACO,MAFpB;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAD8B;AAMpCC,IAAAA,IAAI,EAAET,SAAS,CAACU;AANoB,GAAzB,EAOV,EAPU,CAAb;;AAQAT,EAAAA,IAAI,CAACU,SAAL,GAAiB,UAACC,MAAD,EAAY;AAC3BX,IAAAA,IAAI,CAACY,OAAL,CAAaD,MAAM,CAACE,IAApB,EAA0B;AACxBC,MAAAA,UAAU,EAAE,WADY;AAExBC,MAAAA,EAAE,EAAE;AAFoB,KAA1B;AAIAf,IAAAA,IAAI,CAACgB,aAAL,CAAmBL,MAAM,CAACM,UAA1B,EAAsC;AACpCC,MAAAA,OAAO,EAAE,iBAD2B;AAEpCH,MAAAA,EAAE,EAAE,YAFgC;AAGpCD,MAAAA,UAAU,EAAE;AAHwB,KAAtC;AAKD,GAVD;;AAWA,SAAOd,IAAP;AACD,CArBD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "module.exports = (sequelize, DataTypes) => {\n  const Role = sequelize.define('Role', {\n    uuid: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    name: DataTypes.STRING\n  }, {});\n  Role.associate = (models) => {\n    Role.hasMany(models.User, {\n      foreignKey: 'role_uuid',\n      as: 'roles'\n    });\n    Role.belongsToMany(models.permission, {\n      through: 'role_permission',\n      as: 'permission',\n      foreignKey: 'Role_uuid'\n    });\n  };\n  return Role;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578433026636
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\role_permission.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\role_permission.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\role_permission.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\role_permission.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "role_permission.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _default = function _default(sequelize, DataTypes) {\n  var role_permission = sequelize.define('role_permission', {\n    uuid: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    role_uuid: DataTypes.UUID,\n    permission_id: DataTypes.UUID\n  }, {});\n\n  role_permission.associate = function (models) {// associations can be defined here\n  };\n\n  return role_permission;\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvbGVfcGVybWlzc2lvbi5qcyJdLCJuYW1lcyI6WyJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJyb2xlX3Blcm1pc3Npb24iLCJkZWZpbmUiLCJ1dWlkIiwidHlwZSIsIlVVSUQiLCJkZWZhdWx0VmFsdWUiLCJVVUlEVjQiLCJwcmltYXJ5S2V5Iiwicm9sZV91dWlkIiwicGVybWlzc2lvbl9pZCIsImFzc29jaWF0ZSIsIm1vZGVscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztlQUFlLGtCQUFDQSxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDdkMsTUFBTUMsZUFBZSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsaUJBQWpCLEVBQW9DO0FBQzFEQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLElBRFo7QUFFSkMsTUFBQUEsWUFBWSxFQUFFTixTQUFTLENBQUNPLE1BRnBCO0FBR0pDLE1BQUFBLFVBQVUsRUFBRTtBQUhSLEtBRG9EO0FBTTFEQyxJQUFBQSxTQUFTLEVBQUVULFNBQVMsQ0FBQ0ssSUFOcUM7QUFPMURLLElBQUFBLGFBQWEsRUFBRVYsU0FBUyxDQUFDSztBQVBpQyxHQUFwQyxFQVFyQixFQVJxQixDQUF4Qjs7QUFTQUosRUFBQUEsZUFBZSxDQUFDVSxTQUFoQixHQUE0QixVQUFVQyxNQUFWLEVBQWtCLENBQzVDO0FBQ0QsR0FGRDs7QUFHQSxTQUFPWCxlQUFQO0FBQ0QsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IHJvbGVfcGVybWlzc2lvbiA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3JvbGVfcGVybWlzc2lvbicsIHtcbiAgICB1dWlkOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRCxcbiAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLlVVSURWNCxcbiAgICAgIHByaW1hcnlLZXk6IHRydWVcbiAgICB9LFxuICAgIHJvbGVfdXVpZDogRGF0YVR5cGVzLlVVSUQsXG4gICAgcGVybWlzc2lvbl9pZDogRGF0YVR5cGVzLlVVSURcbiAgfSwge30pO1xuICByb2xlX3Blcm1pc3Npb24uYXNzb2NpYXRlID0gZnVuY3Rpb24gKG1vZGVscykge1xuICAgIC8vIGFzc29jaWF0aW9ucyBjYW4gYmUgZGVmaW5lZCBoZXJlXG4gIH07XG4gIHJldHVybiByb2xlX3Blcm1pc3Npb247XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "role_permission.js"
      ],
      "names": [
        "sequelize",
        "DataTypes",
        "role_permission",
        "define",
        "uuid",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "primaryKey",
        "role_uuid",
        "permission_id",
        "associate",
        "models"
      ],
      "mappings": ";;;;;;;eAAe,kBAACA,SAAD,EAAYC,SAAZ,EAA0B;AACvC,MAAMC,eAAe,GAAGF,SAAS,CAACG,MAAV,CAAiB,iBAAjB,EAAoC;AAC1DC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,IADZ;AAEJC,MAAAA,YAAY,EAAEN,SAAS,CAACO,MAFpB;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADoD;AAM1DC,IAAAA,SAAS,EAAET,SAAS,CAACK,IANqC;AAO1DK,IAAAA,aAAa,EAAEV,SAAS,CAACK;AAPiC,GAApC,EAQrB,EARqB,CAAxB;;AASAJ,EAAAA,eAAe,CAACU,SAAhB,GAA4B,UAAUC,MAAV,EAAkB,CAC5C;AACD,GAFD;;AAGA,SAAOX,eAAP;AACD,C",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "export default (sequelize, DataTypes) => {\n  const role_permission = sequelize.define('role_permission', {\n    uuid: {\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4,\n      primaryKey: true\n    },\n    role_uuid: DataTypes.UUID,\n    permission_id: DataTypes.UUID\n  }, {});\n  role_permission.associate = function (models) {\n    // associations can be defined here\n  };\n  return role_permission;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578433224366
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var User = sequelize.define('User', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    first_name: DataTypes.STRING,\n    last_name: DataTypes.STRING,\n    email: DataTypes.STRING,\n    password: DataTypes.STRING,\n    state: DataTypes.STRING,\n    country: DataTypes.STRING,\n    residential_address: DataTypes.STRING,\n    city: DataTypes.STRING,\n    role: DataTypes.STRING,\n    role_uuid: {\n      type: DataTypes.UUID\n    },\n    party_uuid: {\n      type: DataTypes.UUID\n    },\n    is_verified: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false\n    },\n    is_partisan: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false\n    },\n    gender: DataTypes.STRING,\n    date_of_birth: DataTypes.STRING,\n    createdAt: {\n      type: DataTypes.DATE,\n      field: 'created_at'\n    },\n    updatedAt: {\n      type: DataTypes.DATE,\n      filed: 'updated_at'\n    }\n  }, {\n    underscored: true,\n    sequelize: sequelize,\n    modelName: 'user'\n  });\n\n  User.associate = function (models) {\n    // associations can be defined here\n    User.hasMany(models.vote, {\n      as: 'vote',\n      foreignKey: 'user_uuid',\n      onDelete: 'CASCADE'\n    });\n    User.hasMany(models.notification, {\n      as: 'notification',\n      foreignKey: 'user_uuid',\n      onDelete: 'CASCADE'\n    });\n    User.hasMany(models.comment, {\n      as: 'comment',\n      foreignKey: 'user_uuid',\n      onDelete: 'CASCADE'\n    });\n    User.hasMany(models.chat, {\n      as: 'chat',\n      foreignKey: 'user_uuid',\n      onDelete: 'CASCADE'\n    });\n    User.hasOne(models.party, {\n      as: 'party',\n      foreignKey: 'admin_uuid',\n      onDelete: 'CASCADE',\n      constraints: false\n    });\n    User.belongsToMany(models.party, {\n      through: 'user_party',\n      foreignKey: 'party_uuid',\n      constraints: false\n    });\n  };\n\n  return User;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlVzZXIiLCJkZWZpbmUiLCJ1dWlkIiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInR5cGUiLCJVVUlEIiwiZGVmYXVsdFZhbHVlIiwiVVVJRFY0IiwiZmlyc3RfbmFtZSIsIlNUUklORyIsImxhc3RfbmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJzdGF0ZSIsImNvdW50cnkiLCJyZXNpZGVudGlhbF9hZGRyZXNzIiwiY2l0eSIsInJvbGUiLCJyb2xlX3V1aWQiLCJwYXJ0eV91dWlkIiwiaXNfdmVyaWZpZWQiLCJCT09MRUFOIiwiaXNfcGFydGlzYW4iLCJnZW5kZXIiLCJkYXRlX29mX2JpcnRoIiwiY3JlYXRlZEF0IiwiREFURSIsImZpZWxkIiwidXBkYXRlZEF0IiwiZmlsZWQiLCJ1bmRlcnNjb3JlZCIsIm1vZGVsTmFtZSIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJ2b3RlIiwiYXMiLCJmb3JlaWduS2V5Iiwib25EZWxldGUiLCJub3RpZmljYXRpb24iLCJjb21tZW50IiwiY2hhdCIsImhhc09uZSIsInBhcnR5IiwiY29uc3RyYWludHMiLCJiZWxvbmdzVG9NYW55IiwidGhyb3VnaCJdLCJtYXBwaW5ncyI6Ijs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLFNBQVMsRUFBRSxLQURQO0FBRUpDLE1BQUFBLFVBQVUsRUFBRSxJQUZSO0FBR0pDLE1BQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDTyxJQUhaO0FBSUpDLE1BQUFBLFlBQVksRUFBRVIsU0FBUyxDQUFDUztBQUpwQixLQUQ4QjtBQU9wQ0MsSUFBQUEsVUFBVSxFQUFFVixTQUFTLENBQUNXLE1BUGM7QUFRcENDLElBQUFBLFNBQVMsRUFBRVosU0FBUyxDQUFDVyxNQVJlO0FBU3BDRSxJQUFBQSxLQUFLLEVBQUViLFNBQVMsQ0FBQ1csTUFUbUI7QUFVcENHLElBQUFBLFFBQVEsRUFBRWQsU0FBUyxDQUFDVyxNQVZnQjtBQVdwQ0ksSUFBQUEsS0FBSyxFQUFFZixTQUFTLENBQUNXLE1BWG1CO0FBWXBDSyxJQUFBQSxPQUFPLEVBQUVoQixTQUFTLENBQUNXLE1BWmlCO0FBYXBDTSxJQUFBQSxtQkFBbUIsRUFBRWpCLFNBQVMsQ0FBQ1csTUFiSztBQWNwQ08sSUFBQUEsSUFBSSxFQUFFbEIsU0FBUyxDQUFDVyxNQWRvQjtBQWVwQ1EsSUFBQUEsSUFBSSxFQUFFbkIsU0FBUyxDQUFDVyxNQWZvQjtBQWdCcENTLElBQUFBLFNBQVMsRUFBRTtBQUNUZCxNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ087QUFEUCxLQWhCeUI7QUFtQnBDYyxJQUFBQSxVQUFVLEVBQUU7QUFDVmYsTUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNPO0FBRE4sS0FuQndCO0FBc0JwQ2UsSUFBQUEsV0FBVyxFQUFFO0FBQ1hoQixNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ3VCLE9BREw7QUFFWGYsTUFBQUEsWUFBWSxFQUFFO0FBRkgsS0F0QnVCO0FBMEJwQ2dCLElBQUFBLFdBQVcsRUFBRTtBQUNYbEIsTUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUN1QixPQURMO0FBRVhmLE1BQUFBLFlBQVksRUFBRTtBQUZILEtBMUJ1QjtBQThCcENpQixJQUFBQSxNQUFNLEVBQUV6QixTQUFTLENBQUNXLE1BOUJrQjtBQStCcENlLElBQUFBLGFBQWEsRUFBRTFCLFNBQVMsQ0FBQ1csTUEvQlc7QUFnQ3BDZ0IsSUFBQUEsU0FBUyxFQUFFO0FBQ1RyQixNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQzRCLElBRFA7QUFFVEMsTUFBQUEsS0FBSyxFQUFFO0FBRkUsS0FoQ3lCO0FBb0NwQ0MsSUFBQUEsU0FBUyxFQUFFO0FBQ1R4QixNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQzRCLElBRFA7QUFFVEcsTUFBQUEsS0FBSyxFQUFFO0FBRkU7QUFwQ3lCLEdBQXpCLEVBd0NWO0FBQ0RDLElBQUFBLFdBQVcsRUFBRSxJQURaO0FBRURqQyxJQUFBQSxTQUFTLEVBQVRBLFNBRkM7QUFHRGtDLElBQUFBLFNBQVMsRUFBRTtBQUhWLEdBeENVLENBQWI7O0FBNkNBaEMsRUFBQUEsSUFBSSxDQUFDaUMsU0FBTCxHQUFpQixVQUFDQyxNQUFELEVBQVk7QUFDM0I7QUFDQWxDLElBQUFBLElBQUksQ0FBQ21DLE9BQUwsQ0FBYUQsTUFBTSxDQUFDRSxJQUFwQixFQUEwQjtBQUN4QkMsTUFBQUEsRUFBRSxFQUFFLE1BRG9CO0FBRXhCQyxNQUFBQSxVQUFVLEVBQUUsV0FGWTtBQUd4QkMsTUFBQUEsUUFBUSxFQUFFO0FBSGMsS0FBMUI7QUFLQXZDLElBQUFBLElBQUksQ0FBQ21DLE9BQUwsQ0FBYUQsTUFBTSxDQUFDTSxZQUFwQixFQUFrQztBQUNoQ0gsTUFBQUEsRUFBRSxFQUFFLGNBRDRCO0FBRWhDQyxNQUFBQSxVQUFVLEVBQUUsV0FGb0I7QUFHaENDLE1BQUFBLFFBQVEsRUFBRTtBQUhzQixLQUFsQztBQUtBdkMsSUFBQUEsSUFBSSxDQUFDbUMsT0FBTCxDQUFhRCxNQUFNLENBQUNPLE9BQXBCLEVBQTZCO0FBQzNCSixNQUFBQSxFQUFFLEVBQUUsU0FEdUI7QUFFM0JDLE1BQUFBLFVBQVUsRUFBRSxXQUZlO0FBRzNCQyxNQUFBQSxRQUFRLEVBQUU7QUFIaUIsS0FBN0I7QUFLQXZDLElBQUFBLElBQUksQ0FBQ21DLE9BQUwsQ0FBYUQsTUFBTSxDQUFDUSxJQUFwQixFQUEwQjtBQUN4QkwsTUFBQUEsRUFBRSxFQUFFLE1BRG9CO0FBRXhCQyxNQUFBQSxVQUFVLEVBQUUsV0FGWTtBQUd4QkMsTUFBQUEsUUFBUSxFQUFFO0FBSGMsS0FBMUI7QUFNQXZDLElBQUFBLElBQUksQ0FBQzJDLE1BQUwsQ0FBWVQsTUFBTSxDQUFDVSxLQUFuQixFQUEwQjtBQUN4QlAsTUFBQUEsRUFBRSxFQUFFLE9BRG9CO0FBRXhCQyxNQUFBQSxVQUFVLEVBQUUsWUFGWTtBQUd4QkMsTUFBQUEsUUFBUSxFQUFFLFNBSGM7QUFJeEJNLE1BQUFBLFdBQVcsRUFBRTtBQUpXLEtBQTFCO0FBTUE3QyxJQUFBQSxJQUFJLENBQUM4QyxhQUFMLENBQW1CWixNQUFNLENBQUNVLEtBQTFCLEVBQWlDO0FBQy9CRyxNQUFBQSxPQUFPLEVBQUUsWUFEc0I7QUFFL0JULE1BQUFBLFVBQVUsRUFBRSxZQUZtQjtBQUcvQk8sTUFBQUEsV0FBVyxFQUFFO0FBSGtCLEtBQWpDO0FBS0QsR0FsQ0Q7O0FBbUNBLFNBQU83QyxJQUFQO0FBQ0QsQ0FsRkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIlxubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgVXNlciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1VzZXInLCB7XG4gICAgdXVpZDoge1xuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRCxcbiAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLlVVSURWNFxuICAgIH0sXG4gICAgZmlyc3RfbmFtZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBsYXN0X25hbWU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgZW1haWw6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgcGFzc3dvcmQ6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgc3RhdGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgY291bnRyeTogRGF0YVR5cGVzLlNUUklORyxcbiAgICByZXNpZGVudGlhbF9hZGRyZXNzOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGNpdHk6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgcm9sZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICByb2xlX3V1aWQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5VVUlEXG4gICAgfSxcbiAgICBwYXJ0eV91dWlkOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRFxuICAgIH0sXG4gICAgaXNfdmVyaWZpZWQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgICAgZGVmYXVsdFZhbHVlOiBmYWxzZVxuICAgIH0sXG4gICAgaXNfcGFydGlzYW46IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgICAgZGVmYXVsdFZhbHVlOiBmYWxzZVxuICAgIH0sXG4gICAgZ2VuZGVyOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGRhdGVfb2ZfYmlydGg6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgY3JlYXRlZEF0OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuREFURSxcbiAgICAgIGZpZWxkOiAnY3JlYXRlZF9hdCdcbiAgICB9LCBcbiAgICB1cGRhdGVkQXQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5EQVRFLFxuICAgICAgZmlsZWQ6ICd1cGRhdGVkX2F0J1xuICAgIH1cbiAgfSwge1xuICAgIHVuZGVyc2NvcmVkOiB0cnVlLFxuICAgIHNlcXVlbGl6ZSxcbiAgICBtb2RlbE5hbWU6ICd1c2VyJ1xuICB9KTtcbiAgVXNlci5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgICBVc2VyLmhhc01hbnkobW9kZWxzLnZvdGUsIHtcbiAgICAgIGFzOiAndm90ZScsIFxuICAgICAgZm9yZWlnbktleTogJ3VzZXJfdXVpZCcsXG4gICAgICBvbkRlbGV0ZTogJ0NBU0NBREUnIFxuICAgIH0pO1xuICAgIFVzZXIuaGFzTWFueShtb2RlbHMubm90aWZpY2F0aW9uLCB7XG4gICAgICBhczogJ25vdGlmaWNhdGlvbicsIFxuICAgICAgZm9yZWlnbktleTogJ3VzZXJfdXVpZCcsXG4gICAgICBvbkRlbGV0ZTogJ0NBU0NBREUnXG4gICAgfSk7XG4gICAgVXNlci5oYXNNYW55KG1vZGVscy5jb21tZW50LCB7XG4gICAgICBhczogJ2NvbW1lbnQnLCBcbiAgICAgIGZvcmVpZ25LZXk6ICd1c2VyX3V1aWQnLFxuICAgICAgb25EZWxldGU6ICdDQVNDQURFJ1xuICAgIH0pO1xuICAgIFVzZXIuaGFzTWFueShtb2RlbHMuY2hhdCwge1xuICAgICAgYXM6ICdjaGF0JywgXG4gICAgICBmb3JlaWduS2V5OiAndXNlcl91dWlkJyxcbiAgICAgIG9uRGVsZXRlOiAnQ0FTQ0FERScsXG4gICAgfSk7XG4gICBcbiAgICBVc2VyLmhhc09uZShtb2RlbHMucGFydHksIHtcbiAgICAgIGFzOiAncGFydHknLFxuICAgICAgZm9yZWlnbktleTogJ2FkbWluX3V1aWQnLFxuICAgICAgb25EZWxldGU6ICdDQVNDQURFJyxcbiAgICAgIGNvbnN0cmFpbnRzOiBmYWxzZVxuICAgIH0pO1xuICAgIFVzZXIuYmVsb25nc1RvTWFueShtb2RlbHMucGFydHksIHtcbiAgICAgIHRocm91Z2g6ICd1c2VyX3BhcnR5JyxcbiAgICAgIGZvcmVpZ25LZXk6ICdwYXJ0eV91dWlkJyxcbiAgICAgIGNvbnN0cmFpbnRzOiBmYWxzZVxuICAgIH0pO1xuICB9O1xuICByZXR1cm4gVXNlcjtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "User",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "first_name",
        "STRING",
        "last_name",
        "email",
        "password",
        "state",
        "country",
        "residential_address",
        "city",
        "role",
        "role_uuid",
        "party_uuid",
        "is_verified",
        "BOOLEAN",
        "is_partisan",
        "gender",
        "date_of_birth",
        "createdAt",
        "DATE",
        "field",
        "updatedAt",
        "filed",
        "underscored",
        "modelName",
        "associate",
        "models",
        "hasMany",
        "vote",
        "as",
        "foreignKey",
        "onDelete",
        "notification",
        "comment",
        "chat",
        "hasOne",
        "party",
        "constraints",
        "belongsToMany",
        "through"
      ],
      "mappings": ";;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KAD8B;AAOpCC,IAAAA,UAAU,EAAEV,SAAS,CAACW,MAPc;AAQpCC,IAAAA,SAAS,EAAEZ,SAAS,CAACW,MARe;AASpCE,IAAAA,KAAK,EAAEb,SAAS,CAACW,MATmB;AAUpCG,IAAAA,QAAQ,EAAEd,SAAS,CAACW,MAVgB;AAWpCI,IAAAA,KAAK,EAAEf,SAAS,CAACW,MAXmB;AAYpCK,IAAAA,OAAO,EAAEhB,SAAS,CAACW,MAZiB;AAapCM,IAAAA,mBAAmB,EAAEjB,SAAS,CAACW,MAbK;AAcpCO,IAAAA,IAAI,EAAElB,SAAS,CAACW,MAdoB;AAepCQ,IAAAA,IAAI,EAAEnB,SAAS,CAACW,MAfoB;AAgBpCS,IAAAA,SAAS,EAAE;AACTd,MAAAA,IAAI,EAAEN,SAAS,CAACO;AADP,KAhByB;AAmBpCc,IAAAA,UAAU,EAAE;AACVf,MAAAA,IAAI,EAAEN,SAAS,CAACO;AADN,KAnBwB;AAsBpCe,IAAAA,WAAW,EAAE;AACXhB,MAAAA,IAAI,EAAEN,SAAS,CAACuB,OADL;AAEXf,MAAAA,YAAY,EAAE;AAFH,KAtBuB;AA0BpCgB,IAAAA,WAAW,EAAE;AACXlB,MAAAA,IAAI,EAAEN,SAAS,CAACuB,OADL;AAEXf,MAAAA,YAAY,EAAE;AAFH,KA1BuB;AA8BpCiB,IAAAA,MAAM,EAAEzB,SAAS,CAACW,MA9BkB;AA+BpCe,IAAAA,aAAa,EAAE1B,SAAS,CAACW,MA/BW;AAgCpCgB,IAAAA,SAAS,EAAE;AACTrB,MAAAA,IAAI,EAAEN,SAAS,CAAC4B,IADP;AAETC,MAAAA,KAAK,EAAE;AAFE,KAhCyB;AAoCpCC,IAAAA,SAAS,EAAE;AACTxB,MAAAA,IAAI,EAAEN,SAAS,CAAC4B,IADP;AAETG,MAAAA,KAAK,EAAE;AAFE;AApCyB,GAAzB,EAwCV;AACDC,IAAAA,WAAW,EAAE,IADZ;AAEDjC,IAAAA,SAAS,EAATA,SAFC;AAGDkC,IAAAA,SAAS,EAAE;AAHV,GAxCU,CAAb;;AA6CAhC,EAAAA,IAAI,CAACiC,SAAL,GAAiB,UAACC,MAAD,EAAY;AAC3B;AACAlC,IAAAA,IAAI,CAACmC,OAAL,CAAaD,MAAM,CAACE,IAApB,EAA0B;AACxBC,MAAAA,EAAE,EAAE,MADoB;AAExBC,MAAAA,UAAU,EAAE,WAFY;AAGxBC,MAAAA,QAAQ,EAAE;AAHc,KAA1B;AAKAvC,IAAAA,IAAI,CAACmC,OAAL,CAAaD,MAAM,CAACM,YAApB,EAAkC;AAChCH,MAAAA,EAAE,EAAE,cAD4B;AAEhCC,MAAAA,UAAU,EAAE,WAFoB;AAGhCC,MAAAA,QAAQ,EAAE;AAHsB,KAAlC;AAKAvC,IAAAA,IAAI,CAACmC,OAAL,CAAaD,MAAM,CAACO,OAApB,EAA6B;AAC3BJ,MAAAA,EAAE,EAAE,SADuB;AAE3BC,MAAAA,UAAU,EAAE,WAFe;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAA7B;AAKAvC,IAAAA,IAAI,CAACmC,OAAL,CAAaD,MAAM,CAACQ,IAApB,EAA0B;AACxBL,MAAAA,EAAE,EAAE,MADoB;AAExBC,MAAAA,UAAU,EAAE,WAFY;AAGxBC,MAAAA,QAAQ,EAAE;AAHc,KAA1B;AAMAvC,IAAAA,IAAI,CAAC2C,MAAL,CAAYT,MAAM,CAACU,KAAnB,EAA0B;AACxBP,MAAAA,EAAE,EAAE,OADoB;AAExBC,MAAAA,UAAU,EAAE,YAFY;AAGxBC,MAAAA,QAAQ,EAAE,SAHc;AAIxBM,MAAAA,WAAW,EAAE;AAJW,KAA1B;AAMA7C,IAAAA,IAAI,CAAC8C,aAAL,CAAmBZ,MAAM,CAACU,KAA1B,EAAiC;AAC/BG,MAAAA,OAAO,EAAE,YADsB;AAE/BT,MAAAA,UAAU,EAAE,YAFmB;AAG/BO,MAAAA,WAAW,EAAE;AAHkB,KAAjC;AAKD,GAlCD;;AAmCA,SAAO7C,IAAP;AACD,CAlFD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "\nmodule.exports = (sequelize, DataTypes) => {\n  const User = sequelize.define('User', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    first_name: DataTypes.STRING,\n    last_name: DataTypes.STRING,\n    email: DataTypes.STRING,\n    password: DataTypes.STRING,\n    state: DataTypes.STRING,\n    country: DataTypes.STRING,\n    residential_address: DataTypes.STRING,\n    city: DataTypes.STRING,\n    role: DataTypes.STRING,\n    role_uuid: {\n      type: DataTypes.UUID\n    },\n    party_uuid: {\n      type: DataTypes.UUID\n    },\n    is_verified: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false\n    },\n    is_partisan: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false\n    },\n    gender: DataTypes.STRING,\n    date_of_birth: DataTypes.STRING,\n    createdAt: {\n      type: DataTypes.DATE,\n      field: 'created_at'\n    }, \n    updatedAt: {\n      type: DataTypes.DATE,\n      filed: 'updated_at'\n    }\n  }, {\n    underscored: true,\n    sequelize,\n    modelName: 'user'\n  });\n  User.associate = (models) => {\n    // associations can be defined here\n    User.hasMany(models.vote, {\n      as: 'vote', \n      foreignKey: 'user_uuid',\n      onDelete: 'CASCADE' \n    });\n    User.hasMany(models.notification, {\n      as: 'notification', \n      foreignKey: 'user_uuid',\n      onDelete: 'CASCADE'\n    });\n    User.hasMany(models.comment, {\n      as: 'comment', \n      foreignKey: 'user_uuid',\n      onDelete: 'CASCADE'\n    });\n    User.hasMany(models.chat, {\n      as: 'chat', \n      foreignKey: 'user_uuid',\n      onDelete: 'CASCADE',\n    });\n   \n    User.hasOne(models.party, {\n      as: 'party',\n      foreignKey: 'admin_uuid',\n      onDelete: 'CASCADE',\n      constraints: false\n    });\n    User.belongsToMany(models.party, {\n      through: 'user_party',\n      foreignKey: 'party_uuid',\n      constraints: false\n    });\n  };\n  return User;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579044101366
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\user_party.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\user_party.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\user_party.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\user_party.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "user_party.js"
      }
    },
    "ast": null,
    "code": "/* eslint-disable camelcase */\n'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var user_party = sequelize.define('user_party', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    user_uuid: {\n      type: DataTypes.UUID\n    },\n    party_uuid: {\n      type: DataTypes.UUID\n    },\n    is_verified: DataTypes.STRING\n  }, {});\n\n  user_party.associate = function (models) {// associations can be defined here\n  };\n\n  return user_party;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfcGFydHkuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInVzZXJfcGFydHkiLCJkZWZpbmUiLCJ1dWlkIiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInR5cGUiLCJVVUlEIiwiZGVmYXVsdFZhbHVlIiwiVVVJRFY0IiwidXNlcl91dWlkIiwicGFydHlfdXVpZCIsImlzX3ZlcmlmaWVkIiwiU1RSSU5HIiwiYXNzb2NpYXRlIiwibW9kZWxzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLFVBQVUsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFlBQWpCLEVBQStCO0FBQ2hEQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsU0FBUyxFQUFFLEtBRFA7QUFFSkMsTUFBQUEsVUFBVSxFQUFFLElBRlI7QUFHSkMsTUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNPLElBSFo7QUFJSkMsTUFBQUEsWUFBWSxFQUFFUixTQUFTLENBQUNTO0FBSnBCLEtBRDBDO0FBT2hEQyxJQUFBQSxTQUFTLEVBQUU7QUFDVEosTUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNPO0FBRFAsS0FQcUM7QUFVaERJLElBQUFBLFVBQVUsRUFBRTtBQUNWTCxNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ087QUFETixLQVZvQztBQWFoREssSUFBQUEsV0FBVyxFQUFFWixTQUFTLENBQUNhO0FBYnlCLEdBQS9CLEVBY2hCLEVBZGdCLENBQW5COztBQWVBWixFQUFBQSxVQUFVLENBQUNhLFNBQVgsR0FBdUIsVUFBQ0MsTUFBRCxFQUFZLENBQ2pDO0FBQ0QsR0FGRDs7QUFHQSxTQUFPZCxVQUFQO0FBQ0QsQ0FwQkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xuJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgdXNlcl9wYXJ0eSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3VzZXJfcGFydHknLCB7XG4gICAgdXVpZDoge1xuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRCxcbiAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLlVVSURWNFxuICAgIH0sXG4gICAgdXNlcl91dWlkOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVVVJRFxuICAgIH0sXG4gICAgcGFydHlfdXVpZDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlVVSURcbiAgICB9LFxuICAgIGlzX3ZlcmlmaWVkOiBEYXRhVHlwZXMuU1RSSU5HXG4gIH0sIHt9KTtcbiAgdXNlcl9wYXJ0eS5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgfTtcbiAgcmV0dXJuIHVzZXJfcGFydHk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user_party.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "user_party",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "user_uuid",
        "party_uuid",
        "is_verified",
        "STRING",
        "associate",
        "models"
      ],
      "mappings": "AAAA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,UAAU,GAAGF,SAAS,CAACG,MAAV,CAAiB,YAAjB,EAA+B;AAChDC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KAD0C;AAOhDC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,IAAI,EAAEN,SAAS,CAACO;AADP,KAPqC;AAUhDI,IAAAA,UAAU,EAAE;AACVL,MAAAA,IAAI,EAAEN,SAAS,CAACO;AADN,KAVoC;AAahDK,IAAAA,WAAW,EAAEZ,SAAS,CAACa;AAbyB,GAA/B,EAchB,EAdgB,CAAnB;;AAeAZ,EAAAA,UAAU,CAACa,SAAX,GAAuB,UAACC,MAAD,EAAY,CACjC;AACD,GAFD;;AAGA,SAAOd,UAAP;AACD,CApBD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "/* eslint-disable camelcase */\n'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const user_party = sequelize.define('user_party', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    user_uuid: {\n      type: DataTypes.UUID\n    },\n    party_uuid: {\n      type: DataTypes.UUID\n    },\n    is_verified: DataTypes.STRING\n  }, {});\n  user_party.associate = (models) => {\n    // associations can be defined here\n  };\n  return user_party;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579114298631
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\models\\\\vote.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\vote.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\vote.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models\\vote.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
        "sourceFileName": "vote.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (sequelize, DataTypes) {\n  var vote = sequelize.define('vote', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    today: DataTypes.STRING\n  }, {});\n\n  vote.associate = function (models) {// associations can be defined here\n  };\n\n  return vote;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZvdGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsInZvdGUiLCJkZWZpbmUiLCJ1dWlkIiwiYWxsb3dOdWxsIiwicHJpbWFyeUtleSIsInR5cGUiLCJVVUlEIiwiZGVmYXVsdFZhbHVlIiwiVVVJRFY0IiwidG9kYXkiLCJTVFJJTkciLCJhc3NvY2lhdGUiLCJtb2RlbHMiXSwibWFwcGluZ3MiOiI7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsSUFBSSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDcENDLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxTQUFTLEVBQUUsS0FEUDtBQUVKQyxNQUFBQSxVQUFVLEVBQUUsSUFGUjtBQUdKQyxNQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ08sSUFIWjtBQUlKQyxNQUFBQSxZQUFZLEVBQUVSLFNBQVMsQ0FBQ1M7QUFKcEIsS0FEOEI7QUFPcENDLElBQUFBLEtBQUssRUFBRVYsU0FBUyxDQUFDVztBQVBtQixHQUF6QixFQVFWLEVBUlUsQ0FBYjs7QUFTQVYsRUFBQUEsSUFBSSxDQUFDVyxTQUFMLEdBQWlCLFVBQVNDLE1BQVQsRUFBaUIsQ0FDaEM7QUFDRCxHQUZEOztBQUdBLFNBQU9aLElBQVA7QUFDRCxDQWREIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IHZvdGUgPSBzZXF1ZWxpemUuZGVmaW5lKCd2b3RlJywge1xuICAgIHV1aWQ6IHtcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICBwcmltYXJ5S2V5OiB0cnVlLFxuICAgICAgdHlwZTogRGF0YVR5cGVzLlVVSUQsXG4gICAgICBkZWZhdWx0VmFsdWU6IERhdGFUeXBlcy5VVUlEVjRcbiAgICB9LFxuICAgIHRvZGF5OiBEYXRhVHlwZXMuU1RSSU5HXG4gIH0sIHt9KTtcbiAgdm90ZS5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICB9O1xuICByZXR1cm4gdm90ZTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "vote.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "vote",
        "define",
        "uuid",
        "allowNull",
        "primaryKey",
        "type",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "today",
        "STRING",
        "associate",
        "models"
      ],
      "mappings": ";;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,IAAI,EAAEN,SAAS,CAACO,IAHZ;AAIJC,MAAAA,YAAY,EAAER,SAAS,CAACS;AAJpB,KAD8B;AAOpCC,IAAAA,KAAK,EAAEV,SAAS,CAACW;AAPmB,GAAzB,EAQV,EARU,CAAb;;AASAV,EAAAA,IAAI,CAACW,SAAL,GAAiB,UAASC,MAAT,EAAiB,CAChC;AACD,GAFD;;AAGA,SAAOZ,IAAP;AACD,CAdD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\models",
      "sourcesContent": [
        "\nmodule.exports = (sequelize, DataTypes) => {\n  const vote = sequelize.define('vote', {\n    uuid: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      defaultValue: DataTypes.UUIDV4\n    },\n    today: DataTypes.STRING\n  }, {});\n  vote.associate = function(models) {\n    // associations can be defined here\n  };\n  return vote;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577861807914
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\utils\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMessage = exports.isBlackListed = exports.blackListThisToken = exports.getDay = exports.getMIlliSeconds = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nvar _UserRepository = _interopRequireDefault(require(\"../repositories/UserRepository\"));\n\nvar _NotificationRepository = _interopRequireDefault(require(\"../repositories/NotificationRepository\"));\n\n// eslint-disable-next-line arrow-parens\nvar getMIlliSeconds = function getMIlliSeconds(date) {\n  return date ? new Date(date).getTime() : new Date().getTime();\n};\n\nexports.getMIlliSeconds = getMIlliSeconds;\n\nvar getDay = function getDay(date) {\n  var dateInMillisec = getMIlliSeconds(date);\n  return Math.floor(dateInMillisec / 86400000);\n};\n\nexports.getDay = getDay;\nvar BlackListedToken = _models[\"default\"].BlackListedToken;\n/**\r\n *\r\n * @param {string} token it acepts a valid token\r\n * @returns {boolean} returns true when token is found otherwise false\r\n */\n\nvar isBlackListed =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(token) {\n    var blockedToken;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _UserRepository[\"default\"].findToken({\n              token: token\n            });\n\n          case 2:\n            blockedToken = _context.sent;\n            return _context.abrupt(\"return\", !!blockedToken);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function isBlackListed(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\r\n * @param {text} token accepts token\r\n *\r\n * @returns {string} returns error when it could not create a user\r\n */\n\n\nexports.isBlackListed = isBlackListed;\n\nvar blackListThisToken =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2(token) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return BlackListedToken.create({\n              token: token\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function blackListThisToken(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.blackListThisToken = blackListThisToken;\n\nvar createMessage =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee3(message, status, notificationType, userUuid) {\n    var data;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            data = {\n              message: message,\n              status: status,\n              notification_type: notificationType,\n              user_uuid: userUuid\n            };\n\n            _NotificationRepository[\"default\"].create(data);\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function createMessage(_x3, _x4, _x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // const updateMessage = async (changes, tripUuid) => {\n//   TripRequestRepository.update(changes, tripUuid); \n// };\n\n\nexports.createMessage = createMessage;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldE1JbGxpU2Vjb25kcyIsImRhdGUiLCJEYXRlIiwiZ2V0VGltZSIsImdldERheSIsImRhdGVJbk1pbGxpc2VjIiwiTWF0aCIsImZsb29yIiwiQmxhY2tMaXN0ZWRUb2tlbiIsIm1vZGVscyIsImlzQmxhY2tMaXN0ZWQiLCJ0b2tlbiIsIlVzZXJSZXBvc2l0b3J5IiwiZmluZFRva2VuIiwiYmxvY2tlZFRva2VuIiwiYmxhY2tMaXN0VGhpc1Rva2VuIiwiY3JlYXRlIiwiY3JlYXRlTWVzc2FnZSIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJub3RpZmljYXRpb25UeXBlIiwidXNlclV1aWQiLCJkYXRhIiwibm90aWZpY2F0aW9uX3R5cGUiLCJ1c2VyX3V1aWQiLCJOb3RpZmljYXRpb25SZXBvc2l0b3J5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBSEE7QUFLTyxJQUFNQSxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUFDLElBQUk7QUFBQSxTQUFLQSxJQUFJLEdBQUcsSUFBSUMsSUFBSixDQUFTRCxJQUFULEVBQWVFLE9BQWYsRUFBSCxHQUE4QixJQUFJRCxJQUFKLEdBQVdDLE9BQVgsRUFBdkM7QUFBQSxDQUE1Qjs7OztBQUVBLElBQU1DLE1BQU0sR0FBRyxTQUFUQSxNQUFTLENBQUNILElBQUQsRUFBVTtBQUM5QixNQUFNSSxjQUFjLEdBQUdMLGVBQWUsQ0FBQ0MsSUFBRCxDQUF0QztBQUNBLFNBQU9LLElBQUksQ0FBQ0MsS0FBTCxDQUFXRixjQUFjLEdBQUcsUUFBNUIsQ0FBUDtBQUNELENBSE07OztJQUtDRyxnQixHQUFxQkMsa0IsQ0FBckJELGdCO0FBRVI7Ozs7OztBQU1BLElBQU1FLGFBQWE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUFHLGlCQUFPQyxLQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ09DLDJCQUFlQyxTQUFmLENBQXlCO0FBQUVGLGNBQUFBLEtBQUssRUFBTEE7QUFBRixhQUF6QixDQURQOztBQUFBO0FBQ2RHLFlBQUFBLFlBRGM7QUFBQSw2Q0FFYixDQUFDLENBQUNBLFlBRlc7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBYkosYUFBYTtBQUFBO0FBQUE7QUFBQSxHQUFuQjtBQUtBOzs7Ozs7Ozs7QUFLQSxJQUFNSyxrQkFBa0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUFHLGtCQUFPSixLQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNuQkgsZ0JBQWdCLENBQUNRLE1BQWpCLENBQXdCO0FBQzVCTCxjQUFBQSxLQUFLLEVBQUxBO0FBRDRCLGFBQXhCLENBRG1COztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWxCSSxrQkFBa0I7QUFBQTtBQUFBO0FBQUEsR0FBeEI7Ozs7QUFLQSxJQUFNRSxhQUFhO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFBRyxrQkFBT0MsT0FBUCxFQUFnQkMsTUFBaEIsRUFBd0JDLGdCQUF4QixFQUEwQ0MsUUFBMUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2RDLFlBQUFBLElBRGMsR0FDUDtBQUNYSixjQUFBQSxPQUFPLEVBQVBBLE9BRFc7QUFFWEMsY0FBQUEsTUFBTSxFQUFOQSxNQUZXO0FBR1hJLGNBQUFBLGlCQUFpQixFQUFFSCxnQkFIUjtBQUlYSSxjQUFBQSxTQUFTLEVBQUVIO0FBSkEsYUFETzs7QUFPcEJJLCtDQUF1QlQsTUFBdkIsQ0FBOEJNLElBQTlCOztBQVBvQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFiTCxhQUFhO0FBQUE7QUFBQTtBQUFBLEdBQW5CLEMsQ0FTQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXHV0aWxzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGFycm93LXBhcmVuc1xyXG5pbXBvcnQgbW9kZWxzIGZyb20gJy4uL21vZGVscyc7XHJcbmltcG9ydCBVc2VyUmVwb3NpdG9yeSBmcm9tICcuLi9yZXBvc2l0b3JpZXMvVXNlclJlcG9zaXRvcnknO1xyXG5pbXBvcnQgTm90aWZpY2F0aW9uUmVwb3NpdG9yeSBmcm9tICcuLi9yZXBvc2l0b3JpZXMvTm90aWZpY2F0aW9uUmVwb3NpdG9yeSc7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0TUlsbGlTZWNvbmRzID0gZGF0ZSA9PiAoZGF0ZSA/IG5ldyBEYXRlKGRhdGUpLmdldFRpbWUoKSA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpKTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXREYXkgPSAoZGF0ZSkgPT4ge1xyXG4gIGNvbnN0IGRhdGVJbk1pbGxpc2VjID0gZ2V0TUlsbGlTZWNvbmRzKGRhdGUpO1xyXG4gIHJldHVybiBNYXRoLmZsb29yKGRhdGVJbk1pbGxpc2VjIC8gODY0MDAwMDApO1xyXG59O1xyXG5cclxuY29uc3QgeyBCbGFja0xpc3RlZFRva2VuIH0gPSBtb2RlbHM7XHJcblxyXG4vKipcclxuICpcclxuICogQHBhcmFtIHtzdHJpbmd9IHRva2VuIGl0IGFjZXB0cyBhIHZhbGlkIHRva2VuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufSByZXR1cm5zIHRydWUgd2hlbiB0b2tlbiBpcyBmb3VuZCBvdGhlcndpc2UgZmFsc2VcclxuICovXHJcblxyXG5jb25zdCBpc0JsYWNrTGlzdGVkID0gYXN5bmMgKHRva2VuKSA9PiB7XHJcbiAgY29uc3QgYmxvY2tlZFRva2VuID0gYXdhaXQgVXNlclJlcG9zaXRvcnkuZmluZFRva2VuKHsgdG9rZW4gfSk7XHJcbiAgcmV0dXJuICEhYmxvY2tlZFRva2VuO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7dGV4dH0gdG9rZW4gYWNjZXB0cyB0b2tlblxyXG4gKlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSByZXR1cm5zIGVycm9yIHdoZW4gaXQgY291bGQgbm90IGNyZWF0ZSBhIHVzZXJcclxuICovXHJcbmNvbnN0IGJsYWNrTGlzdFRoaXNUb2tlbiA9IGFzeW5jICh0b2tlbikgPT4ge1xyXG4gIGF3YWl0IEJsYWNrTGlzdGVkVG9rZW4uY3JlYXRlKHtcclxuICAgIHRva2VuLFxyXG4gIH0pO1xyXG59O1xyXG5jb25zdCBjcmVhdGVNZXNzYWdlID0gYXN5bmMgKG1lc3NhZ2UsIHN0YXR1cywgbm90aWZpY2F0aW9uVHlwZSwgdXNlclV1aWQpID0+IHtcclxuICBjb25zdCBkYXRhID0ge1xyXG4gICAgbWVzc2FnZSxcclxuICAgIHN0YXR1cyxcclxuICAgIG5vdGlmaWNhdGlvbl90eXBlOiBub3RpZmljYXRpb25UeXBlLFxyXG4gICAgdXNlcl91dWlkOiB1c2VyVXVpZCxcclxuICB9O1xyXG4gIE5vdGlmaWNhdGlvblJlcG9zaXRvcnkuY3JlYXRlKGRhdGEpO1xyXG59O1xyXG4vLyBjb25zdCB1cGRhdGVNZXNzYWdlID0gYXN5bmMgKGNoYW5nZXMsIHRyaXBVdWlkKSA9PiB7XHJcbi8vICAgVHJpcFJlcXVlc3RSZXBvc2l0b3J5LnVwZGF0ZShjaGFuZ2VzLCB0cmlwVXVpZCk7IFxyXG4vLyB9O1xyXG5leHBvcnQge1xyXG4gIGJsYWNrTGlzdFRoaXNUb2tlbiwgaXNCbGFja0xpc3RlZCwgY3JlYXRlTWVzc2FnZVxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getMIlliSeconds",
        "date",
        "Date",
        "getTime",
        "getDay",
        "dateInMillisec",
        "Math",
        "floor",
        "BlackListedToken",
        "models",
        "isBlackListed",
        "token",
        "UserRepository",
        "findToken",
        "blockedToken",
        "blackListThisToken",
        "create",
        "createMessage",
        "message",
        "status",
        "notificationType",
        "userUuid",
        "data",
        "notification_type",
        "user_uuid",
        "NotificationRepository"
      ],
      "mappings": ";;;;;;;;;;;;;AACA;;AACA;;AACA;;AAHA;AAKO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,IAAI;AAAA,SAAKA,IAAI,GAAG,IAAIC,IAAJ,CAASD,IAAT,EAAeE,OAAf,EAAH,GAA8B,IAAID,IAAJ,GAAWC,OAAX,EAAvC;AAAA,CAA5B;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACH,IAAD,EAAU;AAC9B,MAAMI,cAAc,GAAGL,eAAe,CAACC,IAAD,CAAtC;AACA,SAAOK,IAAI,CAACC,KAAL,CAAWF,cAAc,GAAG,QAA5B,CAAP;AACD,CAHM;;;IAKCG,gB,GAAqBC,kB,CAArBD,gB;AAER;;;;;;AAMA,IAAME,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOC,2BAAeC,SAAf,CAAyB;AAAEF,cAAAA,KAAK,EAALA;AAAF,aAAzB,CADP;;AAAA;AACdG,YAAAA,YADc;AAAA,6CAEb,CAAC,CAACA,YAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbJ,aAAa;AAAA;AAAA;AAAA,GAAnB;AAKA;;;;;;;;;AAKA,IAAMK,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOJ,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACnBH,gBAAgB,CAACQ,MAAjB,CAAwB;AAC5BL,cAAAA,KAAK,EAALA;AAD4B,aAAxB,CADmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBI,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;;;AAKA,IAAME,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOC,OAAP,EAAgBC,MAAhB,EAAwBC,gBAAxB,EAA0CC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,IADc,GACP;AACXJ,cAAAA,OAAO,EAAPA,OADW;AAEXC,cAAAA,MAAM,EAANA,MAFW;AAGXI,cAAAA,iBAAiB,EAAEH,gBAHR;AAIXI,cAAAA,SAAS,EAAEH;AAJA,aADO;;AAOpBI,+CAAuBT,MAAvB,CAA8BM,IAA9B;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbL,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CASA;AACA;AACA",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
      "sourcesContent": [
        "// eslint-disable-next-line arrow-parens\r\nimport models from '../models';\r\nimport UserRepository from '../repositories/UserRepository';\r\nimport NotificationRepository from '../repositories/NotificationRepository';\r\n\r\nexport const getMIlliSeconds = date => (date ? new Date(date).getTime() : new Date().getTime());\r\n\r\nexport const getDay = (date) => {\r\n  const dateInMillisec = getMIlliSeconds(date);\r\n  return Math.floor(dateInMillisec / 86400000);\r\n};\r\n\r\nconst { BlackListedToken } = models;\r\n\r\n/**\r\n *\r\n * @param {string} token it acepts a valid token\r\n * @returns {boolean} returns true when token is found otherwise false\r\n */\r\n\r\nconst isBlackListed = async (token) => {\r\n  const blockedToken = await UserRepository.findToken({ token });\r\n  return !!blockedToken;\r\n};\r\n\r\n/**\r\n * @param {text} token accepts token\r\n *\r\n * @returns {string} returns error when it could not create a user\r\n */\r\nconst blackListThisToken = async (token) => {\r\n  await BlackListedToken.create({\r\n    token,\r\n  });\r\n};\r\nconst createMessage = async (message, status, notificationType, userUuid) => {\r\n  const data = {\r\n    message,\r\n    status,\r\n    notification_type: notificationType,\r\n    user_uuid: userUuid,\r\n  };\r\n  NotificationRepository.create(data);\r\n};\r\n// const updateMessage = async (changes, tripUuid) => {\r\n//   TripRequestRepository.update(changes, tripUuid); \r\n// };\r\nexport {\r\n  blackListThisToken, isBlackListed, createMessage\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577796706795
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\\\\NotificationRepository.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\NotificationRepository.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\NotificationRepository.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\NotificationRepository.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
        "sourceFileName": "NotificationRepository.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\n/* eslint-disable require-jsdoc */\nvar Notification = _models[\"default\"].Notification;\n/**\r\n * @description NotificaionRepository handles method that query our database\r\n */\n\nvar NotificationRepository =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * @description constructor handles the properties/univsersal data for our requestRepository\r\n   */\n  function NotificationRepository() {\n    (0, _classCallCheck2[\"default\"])(this, NotificationRepository);\n    this.db = Notification;\n  }\n  /**\r\n   * @description Returns user's selected notifications\r\n   *\r\n   * @param {Object} condition - Checks notification based on the condition\r\n   *\r\n   * @return {Object} returns selected notification details\r\n   */\n\n\n  (0, _createClass2[\"default\"])(NotificationRepository, [{\n    key: \"getAll\",\n    value: function () {\n      var _getAll = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee() {\n        var condition,\n            _args = arguments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                condition = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n                _context.prev = 1;\n                _context.next = 4;\n                return this.db.findAll({\n                  where: condition\n                });\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                throw new Error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function getAll() {\n        return _getAll.apply(this, arguments);\n      }\n\n      return getAll;\n    }()\n    /**\r\n    * @description NotificationRepository handles method that query our database\r\n    *\r\n    * @param {object} notificationDetails refers to the notification data\r\n    *\r\n    * @returns {object} the details of the request that was created\r\n    */\n\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(notificationDetails) {\n        var _ref, dataValues;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.db.create(notificationDetails);\n\n              case 3:\n                _ref = _context2.sent;\n                dataValues = _ref.dataValues;\n                return _context2.abrupt(\"return\", dataValues);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                throw new Error(_context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n    /**\r\n     * @description NotificationRepository handles method that query our database\r\n     *\r\n     * @param {object} condition refers to the notification data\r\n     *\r\n     * @returns {object} the details of the request that was created\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"findNotificationById\",\n    value: function () {\n      var _findNotificationById = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(condition) {\n        var include, tripRequest;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                include = '';\n                _context3.next = 4;\n                return this.db.findOne({\n                  where: condition,\n                  include: include\n                });\n\n              case 4:\n                tripRequest = _context3.sent;\n                return _context3.abrupt(\"return\", tripRequest);\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                throw new Error(_context3.t0);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n\n      function findNotificationById(_x2) {\n        return _findNotificationById.apply(this, arguments);\n      }\n\n      return findNotificationById;\n    }()\n  }]);\n  return NotificationRepository;\n}(); // async getOne(condition = {}, include = '') {\n//   try {\n//     return await this.db.findOne({ where: condition, include });\n//   } catch (e) {\n//     throw new Error(e);\n//   }\n// }\n\n\nvar _default = new NotificationRepository();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5vdGlmaWNhdGlvblJlcG9zaXRvcnkuanMiXSwibmFtZXMiOlsiTm90aWZpY2F0aW9uIiwiTW9kZWxzIiwiTm90aWZpY2F0aW9uUmVwb3NpdG9yeSIsImRiIiwiY29uZGl0aW9uIiwiZmluZEFsbCIsIndoZXJlIiwiRXJyb3IiLCJub3RpZmljYXRpb25EZXRhaWxzIiwiY3JlYXRlIiwiZGF0YVZhbHVlcyIsImluY2x1ZGUiLCJmaW5kT25lIiwidHJpcFJlcXVlc3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7O0FBREE7SUFHUUEsWSxHQUFpQkMsa0IsQ0FBakJELFk7QUFFUjs7OztJQUdNRSxzQjs7O0FBQ0o7OztBQUdBLG9DQUFjO0FBQUE7QUFDWixTQUFLQyxFQUFMLEdBQVVILFlBQVY7QUFDRDtBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPYUksZ0JBQUFBLFMsMkRBQVksRTs7O3VCQUVSLEtBQUtELEVBQUwsQ0FBUUUsT0FBUixDQUFnQjtBQUFFQyxrQkFBQUEsS0FBSyxFQUFFRjtBQUFULGlCQUFoQixDOzs7Ozs7OztzQkFFUCxJQUFJRyxLQUFKLGE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJVjs7Ozs7Ozs7Ozs7OztxREFPYUMsbUI7Ozs7Ozs7Ozt1QkFFb0IsS0FBS0wsRUFBTCxDQUFRTSxNQUFSLENBQWVELG1CQUFmLEM7Ozs7QUFBckJFLGdCQUFBQSxVLFFBQUFBLFU7a0RBQ0RBLFU7Ozs7O3NCQUVELElBQUlILEtBQUosYzs7Ozs7Ozs7Ozs7Ozs7OztBQUlaOzs7Ozs7O0FBT0U7Ozs7Ozs7cURBQzJCSCxTOzs7Ozs7O0FBRWpCTyxnQkFBQUEsTyxHQUFVLEU7O3VCQUNVLEtBQUtSLEVBQUwsQ0FBUVMsT0FBUixDQUFnQjtBQUFFTixrQkFBQUEsS0FBSyxFQUFFRixTQUFUO0FBQW9CTyxrQkFBQUEsT0FBTyxFQUFQQTtBQUFwQixpQkFBaEIsQzs7O0FBQXBCRSxnQkFBQUEsVztrREFDQ0EsVzs7Ozs7c0JBRUQsSUFBSU4sS0FBSixjOzs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FJWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O2VBQ2UsSUFBSUwsc0JBQUosRSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xccmVwb3NpdG9yaWVzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgcmVxdWlyZS1qc2RvYyAqL1xyXG5pbXBvcnQgTW9kZWxzIGZyb20gJy4uL21vZGVscyc7XHJcblxyXG5jb25zdCB7IE5vdGlmaWNhdGlvbiB9ID0gTW9kZWxzO1xyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvbiBOb3RpZmljYWlvblJlcG9zaXRvcnkgaGFuZGxlcyBtZXRob2QgdGhhdCBxdWVyeSBvdXIgZGF0YWJhc2VcclxuICovXHJcbmNsYXNzIE5vdGlmaWNhdGlvblJlcG9zaXRvcnkge1xyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiBjb25zdHJ1Y3RvciBoYW5kbGVzIHRoZSBwcm9wZXJ0aWVzL3VuaXZzZXJzYWwgZGF0YSBmb3Igb3VyIHJlcXVlc3RSZXBvc2l0b3J5XHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmRiID0gTm90aWZpY2F0aW9uO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uIFJldHVybnMgdXNlcidzIHNlbGVjdGVkIG5vdGlmaWNhdGlvbnNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjb25kaXRpb24gLSBDaGVja3Mgbm90aWZpY2F0aW9uIGJhc2VkIG9uIHRoZSBjb25kaXRpb25cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge09iamVjdH0gcmV0dXJucyBzZWxlY3RlZCBub3RpZmljYXRpb24gZGV0YWlsc1xyXG4gICAqL1xyXG4gIGFzeW5jIGdldEFsbChjb25kaXRpb24gPSB7fSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuZGIuZmluZEFsbCh7IHdoZXJlOiBjb25kaXRpb24gfSk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gKiBAZGVzY3JpcHRpb24gTm90aWZpY2F0aW9uUmVwb3NpdG9yeSBoYW5kbGVzIG1ldGhvZCB0aGF0IHF1ZXJ5IG91ciBkYXRhYmFzZVxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gbm90aWZpY2F0aW9uRGV0YWlscyByZWZlcnMgdG8gdGhlIG5vdGlmaWNhdGlvbiBkYXRhXHJcbiAqXHJcbiAqIEByZXR1cm5zIHtvYmplY3R9IHRoZSBkZXRhaWxzIG9mIHRoZSByZXF1ZXN0IHRoYXQgd2FzIGNyZWF0ZWRcclxuICovXHJcbiAgYXN5bmMgY3JlYXRlKG5vdGlmaWNhdGlvbkRldGFpbHMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHsgZGF0YVZhbHVlcyB9ID0gYXdhaXQgdGhpcy5kYi5jcmVhdGUobm90aWZpY2F0aW9uRGV0YWlscyk7XHJcbiAgICAgIHJldHVybiBkYXRhVmFsdWVzO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbi8qKlxyXG4gKiBAZGVzY3JpcHRpb24gTm90aWZpY2F0aW9uUmVwb3NpdG9yeSBoYW5kbGVzIG1ldGhvZCB0aGF0IHF1ZXJ5IG91ciBkYXRhYmFzZVxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZGl0aW9uIHJlZmVycyB0byB0aGUgbm90aWZpY2F0aW9uIGRhdGFcclxuICpcclxuICogQHJldHVybnMge29iamVjdH0gdGhlIGRldGFpbHMgb2YgdGhlIHJlcXVlc3QgdGhhdCB3YXMgY3JlYXRlZFxyXG4gKi9cclxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2xhc3MtbWV0aG9kcy11c2UtdGhpc1xyXG4gIGFzeW5jIGZpbmROb3RpZmljYXRpb25CeUlkKGNvbmRpdGlvbikge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgaW5jbHVkZSA9ICcnO1xyXG4gICAgICBjb25zdCB0cmlwUmVxdWVzdCA9IGF3YWl0IHRoaXMuZGIuZmluZE9uZSh7IHdoZXJlOiBjb25kaXRpb24sIGluY2x1ZGUgfSk7XHJcbiAgICAgIHJldHVybiB0cmlwUmVxdWVzdDtcclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuLy8gYXN5bmMgZ2V0T25lKGNvbmRpdGlvbiA9IHt9LCBpbmNsdWRlID0gJycpIHtcclxuLy8gICB0cnkge1xyXG4vLyAgICAgcmV0dXJuIGF3YWl0IHRoaXMuZGIuZmluZE9uZSh7IHdoZXJlOiBjb25kaXRpb24sIGluY2x1ZGUgfSk7XHJcbi8vICAgfSBjYXRjaCAoZSkge1xyXG4vLyAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xyXG4vLyAgIH1cclxuLy8gfVxyXG5leHBvcnQgZGVmYXVsdCBuZXcgTm90aWZpY2F0aW9uUmVwb3NpdG9yeSgpO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "NotificationRepository.js"
      ],
      "names": [
        "Notification",
        "Models",
        "NotificationRepository",
        "db",
        "condition",
        "findAll",
        "where",
        "Error",
        "notificationDetails",
        "create",
        "dataValues",
        "include",
        "findOne",
        "tripRequest"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AACA;;AADA;IAGQA,Y,GAAiBC,kB,CAAjBD,Y;AAER;;;;IAGME,sB;;;AACJ;;;AAGA,oCAAc;AAAA;AACZ,SAAKC,EAAL,GAAUH,YAAV;AACD;AAED;;;;;;;;;;;;;;;;;;;;;AAOaI,gBAAAA,S,2DAAY,E;;;uBAER,KAAKD,EAAL,CAAQE,OAAR,CAAgB;AAAEC,kBAAAA,KAAK,EAAEF;AAAT,iBAAhB,C;;;;;;;;sBAEP,IAAIG,KAAJ,a;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;qDAOaC,mB;;;;;;;;;uBAEoB,KAAKL,EAAL,CAAQM,MAAR,CAAeD,mBAAf,C;;;;AAArBE,gBAAAA,U,QAAAA,U;kDACDA,U;;;;;sBAED,IAAIH,KAAJ,c;;;;;;;;;;;;;;;;AAIZ;;;;;;;AAOE;;;;;;;qDAC2BH,S;;;;;;;AAEjBO,gBAAAA,O,GAAU,E;;uBACU,KAAKR,EAAL,CAAQS,OAAR,CAAgB;AAAEN,kBAAAA,KAAK,EAAEF,SAAT;AAAoBO,kBAAAA,OAAO,EAAPA;AAApB,iBAAhB,C;;;AAApBE,gBAAAA,W;kDACCA,W;;;;;sBAED,IAAIN,KAAJ,c;;;;;;;;;;;;;;;;;;KAIZ;AACA;AACA;AACA;AACA;AACA;AACA;;;eACe,IAAIL,sBAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "sourcesContent": [
        "/* eslint-disable require-jsdoc */\r\nimport Models from '../models';\r\n\r\nconst { Notification } = Models;\r\n\r\n/**\r\n * @description NotificaionRepository handles method that query our database\r\n */\r\nclass NotificationRepository {\r\n  /**\r\n   * @description constructor handles the properties/univsersal data for our requestRepository\r\n   */\r\n  constructor() {\r\n    this.db = Notification;\r\n  }\r\n\r\n  /**\r\n   * @description Returns user's selected notifications\r\n   *\r\n   * @param {Object} condition - Checks notification based on the condition\r\n   *\r\n   * @return {Object} returns selected notification details\r\n   */\r\n  async getAll(condition = {}) {\r\n    try {\r\n      return await this.db.findAll({ where: condition });\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n * @description NotificationRepository handles method that query our database\r\n *\r\n * @param {object} notificationDetails refers to the notification data\r\n *\r\n * @returns {object} the details of the request that was created\r\n */\r\n  async create(notificationDetails) {\r\n    try {\r\n      const { dataValues } = await this.db.create(notificationDetails);\r\n      return dataValues;\r\n    } catch (err) {\r\n      throw new Error(err);\r\n    }\r\n  }\r\n\r\n/**\r\n * @description NotificationRepository handles method that query our database\r\n *\r\n * @param {object} condition refers to the notification data\r\n *\r\n * @returns {object} the details of the request that was created\r\n */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  async findNotificationById(condition) {\r\n    try {\r\n      const include = '';\r\n      const tripRequest = await this.db.findOne({ where: condition, include });\r\n      return tripRequest;\r\n    } catch (err) {\r\n      throw new Error(err);\r\n    }\r\n  }\r\n}\r\n// async getOne(condition = {}, include = '') {\r\n//   try {\r\n//     return await this.db.findOne({ where: condition, include });\r\n//   } catch (e) {\r\n//     throw new Error(e);\r\n//   }\r\n// }\r\nexport default new NotificationRepository();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577796761704
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\modules\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\modules\\\\tokenProcessor.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules\\tokenProcessor.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules\\tokenProcessor.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules\\tokenProcessor.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules",
        "sourceFileName": "tokenProcessor.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.verifyToken = exports.createToken = void 0;\n\nvar _dotenv = require(\"dotenv\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\n/* eslint-disable linebreak-style */\n(0, _dotenv.config)();\n/**\r\n *\r\n * @param {object} payload\r\n * @returns {string} token\r\n */\n\nvar createToken = function createToken(payload) {\n  var token = _jsonwebtoken[\"default\"].sign(payload, process.env.JWT_SECRET, {\n    expiresIn: '24h'\n  });\n\n  return token;\n};\n/**\r\n *\r\n * @param {string} token\r\n * @returns {object} verifiedToken\r\n */\n\n\nexports.createToken = createToken;\n\nvar verifyToken = function verifyToken(token) {\n  var verifiedToken = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET, {\n    expiresIn: '24h'\n  });\n\n  return verifiedToken;\n};\n\nexports.verifyToken = verifyToken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuUHJvY2Vzc29yLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVRva2VuIiwicGF5bG9hZCIsInRva2VuIiwiand0Iiwic2lnbiIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiZXhwaXJlc0luIiwidmVyaWZ5VG9rZW4iLCJ2ZXJpZmllZFRva2VuIiwidmVyaWZ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFGQTtBQUlBO0FBRUE7Ozs7OztBQUtPLElBQU1BLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNDLE9BQUQsRUFBYTtBQUN0QyxNQUFNQyxLQUFLLEdBQUdDLHlCQUFJQyxJQUFKLENBQVNILE9BQVQsRUFBa0JJLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUE5QixFQUEwQztBQUN0REMsSUFBQUEsU0FBUyxFQUFFO0FBRDJDLEdBQTFDLENBQWQ7O0FBR0EsU0FBT04sS0FBUDtBQUNELENBTE07QUFPUDs7Ozs7Ozs7O0FBS08sSUFBTU8sV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ1AsS0FBRCxFQUFXO0FBQ3BDLE1BQU1RLGFBQWEsR0FBR1AseUJBQUlRLE1BQUosQ0FBV1QsS0FBWCxFQUFrQkcsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTlCLEVBQTBDO0FBQzlEQyxJQUFBQSxTQUFTLEVBQUU7QUFEbUQsR0FBMUMsQ0FBdEI7O0FBR0EsU0FBT0UsYUFBUDtBQUNELENBTE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXG1vZHVsZXMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBsaW5lYnJlYWstc3R5bGUgKi9cclxuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnZG90ZW52JztcclxuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xyXG5cclxuY29uZmlnKCk7XHJcblxyXG4vKipcclxuICpcclxuICogQHBhcmFtIHtvYmplY3R9IHBheWxvYWRcclxuICogQHJldHVybnMge3N0cmluZ30gdG9rZW5cclxuICovXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVUb2tlbiA9IChwYXlsb2FkKSA9PiB7XHJcbiAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbihwYXlsb2FkLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVULCB7XHJcbiAgICBleHBpcmVzSW46ICcyNGgnXHJcbiAgfSk7XHJcbiAgcmV0dXJuIHRva2VuO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0b2tlblxyXG4gKiBAcmV0dXJucyB7b2JqZWN0fSB2ZXJpZmllZFRva2VuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgdmVyaWZ5VG9rZW4gPSAodG9rZW4pID0+IHtcclxuICBjb25zdCB2ZXJpZmllZFRva2VuID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCwge1xyXG4gICAgZXhwaXJlc0luOiAnMjRoJ1xyXG4gIH0pO1xyXG4gIHJldHVybiB2ZXJpZmllZFRva2VuO1xyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "tokenProcessor.js"
      ],
      "names": [
        "createToken",
        "payload",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "expiresIn",
        "verifyToken",
        "verifiedToken",
        "verify"
      ],
      "mappings": ";;;;;;;;;AACA;;AACA;;AAFA;AAIA;AAEA;;;;;;AAKO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAa;AACtC,MAAMC,KAAK,GAAGC,yBAAIC,IAAJ,CAASH,OAAT,EAAkBI,OAAO,CAACC,GAAR,CAAYC,UAA9B,EAA0C;AACtDC,IAAAA,SAAS,EAAE;AAD2C,GAA1C,CAAd;;AAGA,SAAON,KAAP;AACD,CALM;AAOP;;;;;;;;;AAKO,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACP,KAAD,EAAW;AACpC,MAAMQ,aAAa,GAAGP,yBAAIQ,MAAJ,CAAWT,KAAX,EAAkBG,OAAO,CAACC,GAAR,CAAYC,UAA9B,EAA0C;AAC9DC,IAAAA,SAAS,EAAE;AADmD,GAA1C,CAAtB;;AAGA,SAAOE,aAAP;AACD,CALM",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules",
      "sourcesContent": [
        "/* eslint-disable linebreak-style */\r\nimport { config } from 'dotenv';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconfig();\r\n\r\n/**\r\n *\r\n * @param {object} payload\r\n * @returns {string} token\r\n */\r\nexport const createToken = (payload) => {\r\n  const token = jwt.sign(payload, process.env.JWT_SECRET, {\r\n    expiresIn: '24h'\r\n  });\r\n  return token;\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} token\r\n * @returns {object} verifiedToken\r\n */\r\nexport const verifyToken = (token) => {\r\n  const verifiedToken = jwt.verify(token, process.env.JWT_SECRET, {\r\n    expiresIn: '24h'\r\n  });\r\n  return verifiedToken;\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577786737368
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\utils\\\\sendResponse.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\sendResponse.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\sendResponse.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\sendResponse.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
        "sourceFileName": "sendResponse.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.successResponse = exports.sendSuccessResponse = exports.sendErrorResponse = void 0;\n\nvar sendErrorResponse = function sendErrorResponse(res, code, errorMessage) {\n  return res.status(code).send({\n    status: 'error',\n    error: errorMessage\n  });\n};\n\nexports.sendErrorResponse = sendErrorResponse;\n\nvar sendSuccessResponse = function sendSuccessResponse(res, code, data) {\n  return res.status(code).send({\n    status: 'success',\n    data: data\n  });\n};\n\nexports.sendSuccessResponse = sendSuccessResponse;\n\nvar successResponse = function successResponse(res, code, successMessage) {\n  res.status(code).json({\n    status: 'Success',\n    message: successMessage\n  });\n};\n\nexports.successResponse = successResponse;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbmRSZXNwb25zZS5qcyJdLCJuYW1lcyI6WyJzZW5kRXJyb3JSZXNwb25zZSIsInJlcyIsImNvZGUiLCJlcnJvck1lc3NhZ2UiLCJzdGF0dXMiLCJzZW5kIiwiZXJyb3IiLCJzZW5kU3VjY2Vzc1Jlc3BvbnNlIiwiZGF0YSIsInN1Y2Nlc3NSZXNwb25zZSIsInN1Y2Nlc3NNZXNzYWdlIiwianNvbiIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxJQUFNQSxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxZQUFaO0FBQUEsU0FBNkJGLEdBQUcsQ0FBQ0csTUFBSixDQUFXRixJQUFYLEVBQWlCRyxJQUFqQixDQUFzQjtBQUNoRkQsSUFBQUEsTUFBTSxFQUFFLE9BRHdFO0FBRWhGRSxJQUFBQSxLQUFLLEVBQUVIO0FBRnlFLEdBQXRCLENBQTdCO0FBQUEsQ0FBMUI7Ozs7QUFJRSxJQUFNSSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLENBQUNOLEdBQUQsRUFBTUMsSUFBTixFQUFZTSxJQUFaO0FBQUEsU0FBcUJQLEdBQUcsQ0FBQ0csTUFBSixDQUFXRixJQUFYLEVBQWlCRyxJQUFqQixDQUFzQjtBQUM1RUQsSUFBQUEsTUFBTSxFQUFFLFNBRG9FO0FBRTVFSSxJQUFBQSxJQUFJLEVBQUpBO0FBRjRFLEdBQXRCLENBQXJCO0FBQUEsQ0FBNUI7Ozs7QUFLQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNSLEdBQUQsRUFBTUMsSUFBTixFQUFZUSxjQUFaLEVBQStCO0FBQzVEVCxFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0YsSUFBWCxFQUFpQlMsSUFBakIsQ0FBc0I7QUFDcEJQLElBQUFBLE1BQU0sRUFBRSxTQURZO0FBRXBCUSxJQUFBQSxPQUFPLEVBQUVGO0FBRlcsR0FBdEI7QUFJRCxDQUxNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFx1dGlscyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBzZW5kRXJyb3JSZXNwb25zZSA9IChyZXMsIGNvZGUsIGVycm9yTWVzc2FnZSkgPT4gcmVzLnN0YXR1cyhjb2RlKS5zZW5kKHtcclxuICAgIHN0YXR1czogJ2Vycm9yJyxcclxuICAgIGVycm9yOiBlcnJvck1lc3NhZ2UsXHJcbiAgfSk7XHJcbiAgZXhwb3J0IGNvbnN0IHNlbmRTdWNjZXNzUmVzcG9uc2UgPSAocmVzLCBjb2RlLCBkYXRhKSA9PiByZXMuc3RhdHVzKGNvZGUpLnNlbmQoe1xyXG4gICAgc3RhdHVzOiAnc3VjY2VzcycsXHJcbiAgICBkYXRhXHJcbiAgfSk7XHJcbiAgXHJcbiAgZXhwb3J0IGNvbnN0IHN1Y2Nlc3NSZXNwb25zZSA9IChyZXMsIGNvZGUsIHN1Y2Nlc3NNZXNzYWdlKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzKGNvZGUpLmpzb24oe1xyXG4gICAgICBzdGF0dXM6ICdTdWNjZXNzJyxcclxuICAgICAgbWVzc2FnZTogc3VjY2Vzc01lc3NhZ2UsXHJcbiAgICB9KTtcclxuICB9O1xyXG4gICJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sendResponse.js"
      ],
      "names": [
        "sendErrorResponse",
        "res",
        "code",
        "errorMessage",
        "status",
        "send",
        "error",
        "sendSuccessResponse",
        "data",
        "successResponse",
        "successMessage",
        "json",
        "message"
      ],
      "mappings": ";;;;;;;AAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAMC,IAAN,EAAYC,YAAZ;AAAA,SAA6BF,GAAG,CAACG,MAAJ,CAAWF,IAAX,EAAiBG,IAAjB,CAAsB;AAChFD,IAAAA,MAAM,EAAE,OADwE;AAEhFE,IAAAA,KAAK,EAAEH;AAFyE,GAAtB,CAA7B;AAAA,CAA1B;;;;AAIE,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACN,GAAD,EAAMC,IAAN,EAAYM,IAAZ;AAAA,SAAqBP,GAAG,CAACG,MAAJ,CAAWF,IAAX,EAAiBG,IAAjB,CAAsB;AAC5ED,IAAAA,MAAM,EAAE,SADoE;AAE5EI,IAAAA,IAAI,EAAJA;AAF4E,GAAtB,CAArB;AAAA,CAA5B;;;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACR,GAAD,EAAMC,IAAN,EAAYQ,cAAZ,EAA+B;AAC5DT,EAAAA,GAAG,CAACG,MAAJ,CAAWF,IAAX,EAAiBS,IAAjB,CAAsB;AACpBP,IAAAA,MAAM,EAAE,SADY;AAEpBQ,IAAAA,OAAO,EAAEF;AAFW,GAAtB;AAID,CALM",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
      "sourcesContent": [
        "export const sendErrorResponse = (res, code, errorMessage) => res.status(code).send({\r\n    status: 'error',\r\n    error: errorMessage,\r\n  });\r\n  export const sendSuccessResponse = (res, code, data) => res.status(code).send({\r\n    status: 'success',\r\n    data\r\n  });\r\n  \r\n  export const successResponse = (res, code, successMessage) => {\r\n    res.status(code).json({\r\n      status: 'Success',\r\n      message: successMessage,\r\n    });\r\n  };\r\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1577781160896
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\modules\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\modules\\\\validator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules\\validator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules\\validator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules\\validator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules",
        "sourceFileName": "validator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = exports.inValidDateComparison = exports.inValidPartyName = exports.inValidPhoneNumber = exports.inValidGender = exports.inValidAddress = exports.inValidDate = exports.inValidPassword = exports.inValidEmail = exports.inValidName = exports.magicTrimmer = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _utils = require(\"../utils\");\n\n/**\r\n *\r\n * @description magicTrimmer removes leadng and trailing spaces from a string\r\n *\r\n * @param {payload} payload is the object that contains the data you want to trim\r\n *\r\n */\nvar magicTrimmer = function magicTrimmer(payload) {\n  var data = {};\n\n  if (payload) {\n    Object.keys(payload).forEach(function (key) {\n      var value = payload[key];\n      Object.assign(data, (0, _defineProperty2[\"default\"])({}, key, value.trim()));\n    });\n    Object.assign(payload, data);\n  }\n\n  return payload;\n};\n/**\r\n   *\r\n   * @description inValidName is function which validates a name\r\n   *\r\n   * @param {name} name is the eniity you want to validate\r\n   *\r\n   * @param {value} value is the data yur want to validate\r\n   *\r\n   * @returns {boolean} return true or false\r\n   */\n\n\nexports.magicTrimmer = magicTrimmer;\n\nvar inValidName = function inValidName(name, value) {\n  if (!value) return \"\".concat(name, \" is required\");\n  if (!/^[a-z]+$/i.test(value)) return \"\".concat(name, \" is not valid\");\n  return false;\n};\n/**\r\n   * @description inValidEmail is a function that validates an email\r\n   *\r\n   * @param {email} email is the data you want to verify if its a valid email\r\n   *\r\n   * @returns {string} string is type of data thr function returns\r\n   */\n\n\nexports.inValidName = inValidName;\n\nvar inValidEmail = function inValidEmail(email) {\n  if (!email) return 'email is required';\n  email = email.toLowerCase();\n  if (!/^[A-Za-z0-9.-_]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/.test(email)) return 'email is not valid';\n  return false;\n};\n/**\r\n   *\r\n   * @description inValidPassword is a function that validates a password\r\n   *\r\n   * @param {string} password is the data you want to validate whether it is alphanumeric\r\n   *\r\n   * @returns {string} string is the type of data the function returns\r\n   */\n\n\nexports.inValidEmail = inValidEmail;\n\nvar inValidPassword = function inValidPassword(password) {\n  if (!password) return 'password is required';\n  if (password.length < 8) return 'password should be at least eight characters';\n\n  if (!/\\d/.test(password) || !/[a-z]/.test(password) || !/[A-Z]/.test(password) || !/^[a-zA-Z0-9]+$/.test(password)) {\n    return 'password should contain at least one Uppercase letter, one lowercase letter, and at least one digit with now space';\n  }\n\n  return false;\n};\n/**\r\n   *\r\n   * @description inValidDate is a function that validates a date\r\n   *\r\n   * @param {string} date is the data you want to validate\r\n   *\r\n   * @returns {string} string is the type of data the function returns\r\n   */\n\n\nexports.inValidPassword = inValidPassword;\n\nvar inValidDate = function inValidDate(date) {\n  if (!date) return undefined;\n  var decision = (0, _moment[\"default\"])(date, 'MM/DD/YYYY', true).isValid();\n  if (!decision) return 'date should be of the form MM/DD/YYYY';\n  return false;\n};\n/**\r\n * @description inValidAddress is a function that returns address\r\n * \r\n * @param {string} address is the parameter\r\n * \r\n * @returns {string} the type of data the function returns\r\n * \r\n */\n\n\nexports.inValidDate = inValidDate;\n\nvar inValidAddress = function inValidAddress(address) {\n  if (!address) return undefined;\n  if (!/^[\\w\\s-.,]+$/i.test(address)) return \"\".concat(address, \" is not valid\");\n  return false;\n};\n/**\r\n* @description inValidGender is a function that returns address\r\n* \r\n* @param {string} gender is the parameter\r\n* \r\n* @returns {string} the type of data the function returns\r\n* \r\n*/\n\n\nexports.inValidAddress = inValidAddress;\n\nvar inValidGender = function inValidGender(gender) {\n  if (!gender) return undefined;\n  gender = gender.toLowerCase();\n  if (gender !== ('male' || 'female')) return \"\".concat(gender, \" is not valid\");\n  return false;\n};\n/**\r\n* @description inValidPhoneNumber is a function that returns address\r\n* \r\n* @param {string} number is the parameter\r\n* \r\n* @returns {string} the type of data the function returns\r\n* \r\n*/\n\n\nexports.inValidGender = inValidGender;\n\nvar inValidPhoneNumber = function inValidPhoneNumber(number) {\n  if (!number) return undefined;\n  if (!/^[\\d]{8,11}$/.test(number)) return \"\".concat(number, \" is not valid\");\n  return false;\n};\n/**\r\n* @description inValidPartyName is a function that returns address\r\n* \r\n* @param {string} name is the parameter\r\n* \r\n* @returns {string} the type of data the function returns\r\n* \r\n*/\n\n\nexports.inValidPhoneNumber = inValidPhoneNumber;\n\nvar inValidPartyName = function inValidPartyName(name) {\n  if (!name) return undefined;\n  if (!/^[a-z\\s?]{4,}$/.test(name)) return \"\".concat(name, \" is not valid\");\n  return false;\n};\n\nexports.inValidPartyName = inValidPartyName;\n\nvar inValidDateComparison = function inValidDateComparison(travelDate, returnDate) {\n  var travelDateMilliSec = (0, _utils.getMIlliSeconds)(travelDate);\n  var todayDateMilliSec = (0, _utils.getMIlliSeconds)();\n  var travelDay = (0, _utils.getDay)(travelDate);\n  var returnDay = (0, _utils.getDay)(returnDate);\n  if (travelDateMilliSec <= todayDateMilliSec) return 'Your travel date must be a future date';\n  if (returnDay < travelDay) return 'You cannot enter a return date that is before your travel date';\n  return false;\n};\n\nexports.inValidDateComparison = inValidDateComparison;\n\nvar validate = function validate(obj) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (obj[key]) {\n      result[key] = obj[key];\n    }\n\n    if (obj[key] === undefined) {\n      result[key] = \"\".concat(key, \" is required\");\n    }\n  });\n\n  if (Object.keys(result).length) {\n    return result;\n  }\n\n  return null;\n};\n\nexports.validate = validate;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "validator.js"
      ],
      "names": [
        "magicTrimmer",
        "payload",
        "data",
        "Object",
        "keys",
        "forEach",
        "key",
        "value",
        "assign",
        "trim",
        "inValidName",
        "name",
        "test",
        "inValidEmail",
        "email",
        "toLowerCase",
        "inValidPassword",
        "password",
        "length",
        "inValidDate",
        "date",
        "undefined",
        "decision",
        "isValid",
        "inValidAddress",
        "address",
        "inValidGender",
        "gender",
        "inValidPhoneNumber",
        "number",
        "inValidPartyName",
        "inValidDateComparison",
        "travelDate",
        "returnDate",
        "travelDateMilliSec",
        "todayDateMilliSec",
        "travelDay",
        "returnDay",
        "validate",
        "obj",
        "result"
      ],
      "mappings": ";;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;AAQO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,OAAO,EAAI;AACrC,MAAMC,IAAI,GAAG,EAAb;;AACA,MAAID,OAAJ,EAAa;AACXE,IAAAA,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA6B,UAACC,GAAD,EAAS;AACpC,UAAMC,KAAK,GAAGN,OAAO,CAACK,GAAD,CAArB;AACAH,MAAAA,MAAM,CAACK,MAAP,CAAcN,IAAd,uCAAuBI,GAAvB,EAA6BC,KAAK,CAACE,IAAN,EAA7B;AACD,KAHD;AAIAN,IAAAA,MAAM,CAACK,MAAP,CAAcP,OAAd,EAAuBC,IAAvB;AACD;;AACD,SAAOD,OAAP;AACD,CAVM;AAYP;;;;;;;;;;;;;;AAUO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOJ,KAAP,EAAiB;AAC1C,MAAI,CAACA,KAAL,EAAY,iBAAUI,IAAV;AACZ,MAAI,CAAC,YAAYC,IAAZ,CAAiBL,KAAjB,CAAL,EAA8B,iBAAUI,IAAV;AAC9B,SAAO,KAAP;AACD,CAJM;AAMP;;;;;;;;;;;AAOO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACnC,MAAI,CAACA,KAAL,EAAY,OAAO,mBAAP;AACZA,EAAAA,KAAK,GAAGA,KAAK,CAACC,WAAN,EAAR;AACA,MAAI,CAAC,kDAAkDH,IAAlD,CAAuDE,KAAvD,CAAL,EAAoE,OAAO,oBAAP;AACpE,SAAO,KAAP;AACD,CALM;AAOP;;;;;;;;;;;;AAQO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ,EAAI;AACzC,MAAI,CAACA,QAAL,EAAe,OAAO,sBAAP;AACf,MAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB,OAAO,8CAAP;;AACzB,MAAI,CAAC,KAAKN,IAAL,CAAUK,QAAV,CAAD,IAAwB,CAAC,QAAQL,IAAR,CAAaK,QAAb,CAAzB,IAAmD,CAAC,QAAQL,IAAR,CAAaK,QAAb,CAApD,IAA8E,CAAC,iBAAiBL,IAAjB,CAAsBK,QAAtB,CAAnF,EAAoH;AAClH,WAAO,oHAAP;AACD;;AACD,SAAO,KAAP;AACD,CAPM;AASP;;;;;;;;;;;;AASO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,MAAI,CAACA,IAAL,EAAW,OAAOC,SAAP;AACX,MAAMC,QAAQ,GAAG,wBAAOF,IAAP,EAAa,YAAb,EAA2B,IAA3B,EAAiCG,OAAjC,EAAjB;AACA,MAAI,CAACD,QAAL,EAAe,OAAO,uCAAP;AACf,SAAO,KAAP;AACD,CALM;AAMP;;;;;;;;;;;;AAQO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO,EAAI;AACvC,MAAI,CAACA,OAAL,EAAc,OAAOJ,SAAP;AACd,MAAI,CAAC,gBAAgBT,IAAhB,CAAqBa,OAArB,CAAL,EAAoC,iBAAUA,OAAV;AACpC,SAAO,KAAP;AACD,CAJM;AAKP;;;;;;;;;;;;AAQO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM,EAAI;AACrC,MAAI,CAACA,MAAL,EAAa,OAAON,SAAP;AACbM,EAAAA,MAAM,GAAGA,MAAM,CAACZ,WAAP,EAAT;AACA,MAAIY,MAAM,MAAM,UAAU,QAAhB,CAAV,EAAqC,iBAAUA,MAAV;AACrC,SAAO,KAAP;AACD,CALM;AAMP;;;;;;;;;;;;AAQO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,MAAM,EAAI;AAC1C,MAAI,CAACA,MAAL,EAAa,OAAOR,SAAP;AACb,MAAI,CAAC,eAAeT,IAAf,CAAoBiB,MAApB,CAAL,EAAkC,iBAAUA,MAAV;AAClC,SAAO,KAAP;AACD,CAJM;AAKP;;;;;;;;;;;;AAQO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAnB,IAAI,EAAI;AACtC,MAAI,CAACA,IAAL,EAAW,OAAOU,SAAP;AACX,MAAI,CAAC,iBAAiBT,IAAjB,CAAsBD,IAAtB,CAAL,EAAkC,iBAAUA,IAAV;AAClC,SAAO,KAAP;AACD,CAJM;;;;AAMA,IAAMoB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,UAAD,EAAaC,UAAb,EAA4B;AAC/D,MAAMC,kBAAkB,GAAG,4BAAgBF,UAAhB,CAA3B;AACA,MAAMG,iBAAiB,GAAG,6BAA1B;AACA,MAAMC,SAAS,GAAG,mBAAOJ,UAAP,CAAlB;AACA,MAAMK,SAAS,GAAG,mBAAOJ,UAAP,CAAlB;AACA,MAAIC,kBAAkB,IAAIC,iBAA1B,EAA6C,OAAO,wCAAP;AAC7C,MAAIE,SAAS,GAAGD,SAAhB,EAA2B,OAAO,gEAAP;AAC3B,SAAO,KAAP;AACD,CARM;;;;AAUA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG,EAAI;AAC7B,MAAMC,MAAM,GAAG,EAAf;AACArC,EAAAA,MAAM,CAACC,IAAP,CAAYmC,GAAZ,EAAiBlC,OAAjB,CAAyB,UAACC,GAAD,EAAS;AAChC,QAAIiC,GAAG,CAACjC,GAAD,CAAP,EAAc;AACZkC,MAAAA,MAAM,CAAClC,GAAD,CAAN,GAAciC,GAAG,CAACjC,GAAD,CAAjB;AACD;;AACD,QAAIiC,GAAG,CAACjC,GAAD,CAAH,KAAae,SAAjB,EAA4B;AAC1BmB,MAAAA,MAAM,CAAClC,GAAD,CAAN,aAAiBA,GAAjB;AACD;AACF,GAPD;;AAQA,MAAIH,MAAM,CAACC,IAAP,CAAYoC,MAAZ,EAAoBtB,MAAxB,EAAgC;AAC9B,WAAOsB,MAAP;AACD;;AACD,SAAO,IAAP;AACD,CAdM",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\modules",
      "sourcesContent": [
        "import moment from 'moment';\r\nimport { getMIlliSeconds, getDay } from '../utils';\r\n\r\n/**\r\n *\r\n * @description magicTrimmer removes leadng and trailing spaces from a string\r\n *\r\n * @param {payload} payload is the object that contains the data you want to trim\r\n *\r\n */\r\n\r\nexport const magicTrimmer = payload => {\r\n  const data = {};\r\n  if (payload) {\r\n    Object.keys(payload).forEach((key) => {\r\n      const value = payload[key];\r\n      Object.assign(data, { [key]: value.trim() });\r\n    });\r\n    Object.assign(payload, data);\r\n  }\r\n  return payload;\r\n};\r\n\r\n/**\r\n   *\r\n   * @description inValidName is function which validates a name\r\n   *\r\n   * @param {name} name is the eniity you want to validate\r\n   *\r\n   * @param {value} value is the data yur want to validate\r\n   *\r\n   * @returns {boolean} return true or false\r\n   */\r\nexport const inValidName = (name, value) => {\r\n  if (!value) return `${name} is required`;\r\n  if (!/^[a-z]+$/i.test(value)) return `${name} is not valid`;\r\n  return false;\r\n};\r\n\r\n/**\r\n   * @description inValidEmail is a function that validates an email\r\n   *\r\n   * @param {email} email is the data you want to verify if its a valid email\r\n   *\r\n   * @returns {string} string is type of data thr function returns\r\n   */\r\nexport const inValidEmail = email => {\r\n  if (!email) return 'email is required';\r\n  email = email.toLowerCase();\r\n  if (!/^[A-Za-z0-9.-_]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/.test(email)) return 'email is not valid';\r\n  return false;\r\n};\r\n\r\n/**\r\n   *\r\n   * @description inValidPassword is a function that validates a password\r\n   *\r\n   * @param {string} password is the data you want to validate whether it is alphanumeric\r\n   *\r\n   * @returns {string} string is the type of data the function returns\r\n   */\r\nexport const inValidPassword = password => {\r\n  if (!password) return 'password is required';\r\n  if (password.length < 8) return 'password should be at least eight characters';\r\n  if (!/\\d/.test(password) || !/[a-z]/.test(password) || !/[A-Z]/.test(password) || !/^[a-zA-Z0-9]+$/.test(password)) {\r\n    return 'password should contain at least one Uppercase letter, one lowercase letter, and at least one digit with now space';\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n   *\r\n   * @description inValidDate is a function that validates a date\r\n   *\r\n   * @param {string} date is the data you want to validate\r\n   *\r\n   * @returns {string} string is the type of data the function returns\r\n   */\r\n\r\nexport const inValidDate = (date) => {\r\n  if (!date) return undefined;\r\n  const decision = moment(date, 'MM/DD/YYYY', true).isValid();\r\n  if (!decision) return 'date should be of the form MM/DD/YYYY';\r\n  return false;\r\n};\r\n/**\r\n * @description inValidAddress is a function that returns address\r\n * \r\n * @param {string} address is the parameter\r\n * \r\n * @returns {string} the type of data the function returns\r\n * \r\n */\r\nexport const inValidAddress = address => {\r\n  if (!address) return undefined;\r\n  if (!/^[\\w\\s-.,]+$/i.test(address)) return `${address} is not valid`;\r\n  return false; \r\n};\r\n/**\r\n* @description inValidGender is a function that returns address\r\n* \r\n* @param {string} gender is the parameter\r\n* \r\n* @returns {string} the type of data the function returns\r\n* \r\n*/\r\nexport const inValidGender = gender => {\r\n  if (!gender) return undefined;\r\n  gender = gender.toLowerCase();\r\n  if (gender !== ('male' || 'female')) return `${gender} is not valid`;\r\n  return false; \r\n};\r\n/**\r\n* @description inValidPhoneNumber is a function that returns address\r\n* \r\n* @param {string} number is the parameter\r\n* \r\n* @returns {string} the type of data the function returns\r\n* \r\n*/\r\nexport const inValidPhoneNumber = number => {\r\n  if (!number) return undefined;\r\n  if (!/^[\\d]{8,11}$/.test(number)) return `${number} is not valid`;\r\n  return false; \r\n};\r\n/**\r\n* @description inValidPartyName is a function that returns address\r\n* \r\n* @param {string} name is the parameter\r\n* \r\n* @returns {string} the type of data the function returns\r\n* \r\n*/\r\nexport const inValidPartyName = name => {\r\n  if (!name) return undefined;\r\n  if (!/^[a-z\\s?]{4,}$/.test(name)) return `${name} is not valid`;\r\n  return false; \r\n};\r\n\r\nexport const inValidDateComparison = (travelDate, returnDate) => {\r\n  const travelDateMilliSec = getMIlliSeconds(travelDate);\r\n  const todayDateMilliSec = getMIlliSeconds();\r\n  const travelDay = getDay(travelDate);\r\n  const returnDay = getDay(returnDate);\r\n  if (travelDateMilliSec <= todayDateMilliSec) return 'Your travel date must be a future date';\r\n  if (returnDay < travelDay) return 'You cannot enter a return date that is before your travel date';\r\n  return false;\r\n};\r\n\r\nexport const validate = obj => {\r\n  const result = {};\r\n  Object.keys(obj).forEach((key) => {\r\n    if (obj[key]) {\r\n      result[key] = obj[key];\r\n    }\r\n    if (obj[key] === undefined) {\r\n      result[key] = `${key} is required`;\r\n    }\r\n  });\r\n  if (Object.keys(result).length) {\r\n    return result;\r\n  }\r\n  return null;\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578733821556
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\services\\\\emails.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\services\\emails.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\services\\emails.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\services\\emails.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\services",
        "sourceFileName": "emails.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _mail = _interopRequireDefault(require(\"@sendgrid/mail\"));\n\nrequire(\"@babel/polyfill\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\n_dotenv[\"default\"].config();\n\n_mail[\"default\"].setApiKey(process.env.SENDGRID_API_KEY);\n/**\r\n * @name sendEmail\r\n * @async\r\n * @description function for sending emails to users\r\n * @param {String} receiver email of the receipient\r\n * @param {String} subject subject of email to be sent\r\n * @param {String} content content text to be sent to user\r\n * @return {objects} return true for successful email sending or error on failure\r\n */\n\n\nvar sendEmail =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(receiver, subject, content) {\n    var data;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              to: receiver,\n              from: 'vote@register.com',\n              subject: subject,\n              html: content\n            };\n            _context.prev = 1;\n            return _context.abrupt(\"return\", _mail[\"default\"].send(data));\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 5]]);\n  }));\n\n  return function sendEmail(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = sendEmail;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYWlscy5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJzZ01haWwiLCJzZXRBcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiU0VOREdSSURfQVBJX0tFWSIsInNlbmRFbWFpbCIsInJlY2VpdmVyIiwic3ViamVjdCIsImNvbnRlbnQiLCJkYXRhIiwidG8iLCJmcm9tIiwiaHRtbCIsInNlbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQUEsbUJBQU9DLE1BQVA7O0FBRUFDLGlCQUFPQyxTQUFQLENBQWlCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsZ0JBQTdCO0FBQ0E7Ozs7Ozs7Ozs7O0FBU0EsSUFBTUMsU0FBUztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQUcsaUJBQU9DLFFBQVAsRUFBaUJDLE9BQWpCLEVBQTBCQyxPQUExQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVkMsWUFBQUEsSUFEVSxHQUNIO0FBQ1hDLGNBQUFBLEVBQUUsRUFBRUosUUFETztBQUVYSyxjQUFBQSxJQUFJLEVBQUUsbUJBRks7QUFHWEosY0FBQUEsT0FBTyxFQUFQQSxPQUhXO0FBSVhLLGNBQUFBLElBQUksRUFBRUo7QUFKSyxhQURHO0FBQUE7QUFBQSw2Q0FRUFIsaUJBQU9hLElBQVAsQ0FBWUosSUFBWixDQVJPOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQVRKLFNBQVM7QUFBQTtBQUFBO0FBQUEsR0FBZjs7ZUFhZUEsUyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2dNYWlsIGZyb20gJ0BzZW5kZ3JpZC9tYWlsJztcclxuaW1wb3J0ICdAYmFiZWwvcG9seWZpbGwnO1xyXG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XHJcblxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5zZ01haWwuc2V0QXBpS2V5KHByb2Nlc3MuZW52LlNFTkRHUklEX0FQSV9LRVkpO1xyXG4vKipcclxuICogQG5hbWUgc2VuZEVtYWlsXHJcbiAqIEBhc3luY1xyXG4gKiBAZGVzY3JpcHRpb24gZnVuY3Rpb24gZm9yIHNlbmRpbmcgZW1haWxzIHRvIHVzZXJzXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSByZWNlaXZlciBlbWFpbCBvZiB0aGUgcmVjZWlwaWVudFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gc3ViamVjdCBzdWJqZWN0IG9mIGVtYWlsIHRvIGJlIHNlbnRcclxuICogQHBhcmFtIHtTdHJpbmd9IGNvbnRlbnQgY29udGVudCB0ZXh0IHRvIGJlIHNlbnQgdG8gdXNlclxyXG4gKiBAcmV0dXJuIHtvYmplY3RzfSByZXR1cm4gdHJ1ZSBmb3Igc3VjY2Vzc2Z1bCBlbWFpbCBzZW5kaW5nIG9yIGVycm9yIG9uIGZhaWx1cmVcclxuICovXHJcbmNvbnN0IHNlbmRFbWFpbCA9IGFzeW5jIChyZWNlaXZlciwgc3ViamVjdCwgY29udGVudCkgPT4ge1xyXG4gIGNvbnN0IGRhdGEgPSB7XHJcbiAgICB0bzogcmVjZWl2ZXIsXHJcbiAgICBmcm9tOiAndm90ZUByZWdpc3Rlci5jb20nLFxyXG4gICAgc3ViamVjdCxcclxuICAgIGh0bWw6IGNvbnRlbnQsXHJcbiAgfTtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIHNnTWFpbC5zZW5kKGRhdGEpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICByZXR1cm4gZXJyb3I7XHJcbiAgfVxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBzZW5kRW1haWw7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "emails.js"
      ],
      "names": [
        "dotenv",
        "config",
        "sgMail",
        "setApiKey",
        "process",
        "env",
        "SENDGRID_API_KEY",
        "sendEmail",
        "receiver",
        "subject",
        "content",
        "data",
        "to",
        "from",
        "html",
        "send"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEAC,iBAAOC,SAAP,CAAiBC,OAAO,CAACC,GAAR,CAAYC,gBAA7B;AACA;;;;;;;;;;;AASA,IAAMC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,QAAP,EAAiBC,OAAjB,EAA0BC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,IADU,GACH;AACXC,cAAAA,EAAE,EAAEJ,QADO;AAEXK,cAAAA,IAAI,EAAE,mBAFK;AAGXJ,cAAAA,OAAO,EAAPA,OAHW;AAIXK,cAAAA,IAAI,EAAEJ;AAJK,aADG;AAAA;AAAA,6CAQPR,iBAAOa,IAAP,CAAYJ,IAAZ,CARO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATJ,SAAS;AAAA;AAAA;AAAA,GAAf;;eAaeA,S",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\services",
      "sourcesContent": [
        "import sgMail from '@sendgrid/mail';\r\nimport '@babel/polyfill';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nsgMail.setApiKey(process.env.SENDGRID_API_KEY);\r\n/**\r\n * @name sendEmail\r\n * @async\r\n * @description function for sending emails to users\r\n * @param {String} receiver email of the receipient\r\n * @param {String} subject subject of email to be sent\r\n * @param {String} content content text to be sent to user\r\n * @return {objects} return true for successful email sending or error on failure\r\n */\r\nconst sendEmail = async (receiver, subject, content) => {\r\n  const data = {\r\n    to: receiver,\r\n    from: 'vote@register.com',\r\n    subject,\r\n    html: content,\r\n  };\r\n  try {\r\n    return sgMail.send(data);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\nexport default sendEmail;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577870750884
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\utils\\\\hashPassword.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\hashPassword.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\hashPassword.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\hashPassword.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
        "sourceFileName": "hashPassword.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unhashPassword = exports.hashPassword = void 0;\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\n/**\r\n * Function to hash user password\r\n * @param {string} password\r\n * @returns {string} returns encryted password\r\n */\nvar hashPassword = function hashPassword(password) {\n  return _bcryptjs[\"default\"].hashSync(password, 10);\n};\n/**\r\n * Function to decrypt a hash password compares it\r\n * @param {string} password it accepts password\r\n * @param {string} hashed it accepts user's hashed password\r\n * @returns {boolean} unhash returns true if comparism is matched\r\n */\n\n\nexports.hashPassword = hashPassword;\n\nvar unhashPassword = function unhashPassword(password, hashed) {\n  return _bcryptjs[\"default\"].compareSync(password, hashed);\n};\n\nexports.unhashPassword = unhashPassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhc2hQYXNzd29yZC5qcyJdLCJuYW1lcyI6WyJoYXNoUGFzc3dvcmQiLCJwYXNzd29yZCIsImJjcnlwdCIsImhhc2hTeW5jIiwidW5oYXNoUGFzc3dvcmQiLCJoYXNoZWQiLCJjb21wYXJlU3luYyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7O0FBTUEsSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsUUFBRDtBQUFBLFNBQWNDLHFCQUFPQyxRQUFQLENBQWdCRixRQUFoQixFQUEwQixFQUExQixDQUFkO0FBQUEsQ0FBckI7QUFDQTs7Ozs7Ozs7OztBQU1BLElBQU1HLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQ0gsUUFBRCxFQUFXSSxNQUFYO0FBQUEsU0FBc0JILHFCQUFPSSxXQUFQLENBQW1CTCxRQUFuQixFQUE2QkksTUFBN0IsQ0FBdEI7QUFBQSxDQUF2QiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJztcclxuLyoqXHJcbiAqIEZ1bmN0aW9uIHRvIGhhc2ggdXNlciBwYXNzd29yZFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFzc3dvcmRcclxuICogQHJldHVybnMge3N0cmluZ30gcmV0dXJucyBlbmNyeXRlZCBwYXNzd29yZFxyXG4gKi9cclxuXHJcbmNvbnN0IGhhc2hQYXNzd29yZCA9IChwYXNzd29yZCkgPT4gYmNyeXB0Lmhhc2hTeW5jKHBhc3N3b3JkLCAxMCk7XHJcbi8qKlxyXG4gKiBGdW5jdGlvbiB0byBkZWNyeXB0IGEgaGFzaCBwYXNzd29yZCBjb21wYXJlcyBpdFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFzc3dvcmQgaXQgYWNjZXB0cyBwYXNzd29yZFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gaGFzaGVkIGl0IGFjY2VwdHMgdXNlcidzIGhhc2hlZCBwYXNzd29yZFxyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdW5oYXNoIHJldHVybnMgdHJ1ZSBpZiBjb21wYXJpc20gaXMgbWF0Y2hlZFxyXG4gKi9cclxuY29uc3QgdW5oYXNoUGFzc3dvcmQgPSAocGFzc3dvcmQsIGhhc2hlZCkgPT4gYmNyeXB0LmNvbXBhcmVTeW5jKHBhc3N3b3JkLCBoYXNoZWQpO1xyXG5cclxuZXhwb3J0IHsgaGFzaFBhc3N3b3JkLCB1bmhhc2hQYXNzd29yZCB9O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "hashPassword.js"
      ],
      "names": [
        "hashPassword",
        "password",
        "bcrypt",
        "hashSync",
        "unhashPassword",
        "hashed",
        "compareSync"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;AAMA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD;AAAA,SAAcC,qBAAOC,QAAP,CAAgBF,QAAhB,EAA0B,EAA1B,CAAd;AAAA,CAArB;AACA;;;;;;;;;;AAMA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACH,QAAD,EAAWI,MAAX;AAAA,SAAsBH,qBAAOI,WAAP,CAAmBL,QAAnB,EAA6BI,MAA7B,CAAtB;AAAA,CAAvB",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
      "sourcesContent": [
        "import bcrypt from 'bcryptjs';\r\n/**\r\n * Function to hash user password\r\n * @param {string} password\r\n * @returns {string} returns encryted password\r\n */\r\n\r\nconst hashPassword = (password) => bcrypt.hashSync(password, 10);\r\n/**\r\n * Function to decrypt a hash password compares it\r\n * @param {string} password it accepts password\r\n * @param {string} hashed it accepts user's hashed password\r\n * @returns {boolean} unhash returns true if comparism is matched\r\n */\r\nconst unhashPassword = (password, hashed) => bcrypt.compareSync(password, hashed);\r\n\r\nexport { hashPassword, unhashPassword };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577804295929
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\utils\\\\getUserInfo.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\getUserInfo.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\getUserInfo.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils\\getUserInfo.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
        "sourceFileName": "getUserInfo.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _tokenProcessor = require(\"../modules/tokenProcessor\");\n\n/* eslint-disable camelcase */\n// Returns selected information for logged in user.\nvar _default = function _default(user) {\n  var email = user.email,\n      name = user.name,\n      role = user.role,\n      uuid = user.uuid,\n      is_verified = user.is_verified;\n  return {\n    token: is_verified ? (0, _tokenProcessor.createToken)({\n      name: name,\n      uuid: uuid,\n      email: email,\n      role: role\n    }) : ''\n  };\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFVzZXJJbmZvLmpzIl0sIm5hbWVzIjpbInVzZXIiLCJlbWFpbCIsIm5hbWUiLCJyb2xlIiwidXVpZCIsImlzX3ZlcmlmaWVkIiwidG9rZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFGQTtBQUNBO2VBR2Usa0JBQUNBLElBQUQsRUFBVTtBQUFBLE1BRXJCQyxLQUZxQixHQUduQkQsSUFIbUIsQ0FFckJDLEtBRnFCO0FBQUEsTUFFZEMsSUFGYyxHQUduQkYsSUFIbUIsQ0FFZEUsSUFGYztBQUFBLE1BRVJDLElBRlEsR0FHbkJILElBSG1CLENBRVJHLElBRlE7QUFBQSxNQUVGQyxJQUZFLEdBR25CSixJQUhtQixDQUVGSSxJQUZFO0FBQUEsTUFFSUMsV0FGSixHQUduQkwsSUFIbUIsQ0FFSUssV0FGSjtBQUl2QixTQUFPO0FBQ0xDLElBQUFBLEtBQUssRUFBRUQsV0FBVyxHQUFHLGlDQUFZO0FBQy9CSCxNQUFBQSxJQUFJLEVBQUpBLElBRCtCO0FBRS9CRSxNQUFBQSxJQUFJLEVBQUpBLElBRitCO0FBRy9CSCxNQUFBQSxLQUFLLEVBQUxBLEtBSCtCO0FBSS9CRSxNQUFBQSxJQUFJLEVBQUpBO0FBSitCLEtBQVosQ0FBSCxHQUtiO0FBTkEsR0FBUDtBQVFELEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXHV0aWxzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXHJcbi8vIFJldHVybnMgc2VsZWN0ZWQgaW5mb3JtYXRpb24gZm9yIGxvZ2dlZCBpbiB1c2VyLlxyXG5pbXBvcnQgeyBjcmVhdGVUb2tlbiB9IGZyb20gJy4uL21vZHVsZXMvdG9rZW5Qcm9jZXNzb3InO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgKHVzZXIpID0+IHtcclxuICBjb25zdCB7XHJcbiAgICBlbWFpbCwgbmFtZSwgcm9sZSwgdXVpZCwgaXNfdmVyaWZpZWRcclxuICB9ID0gdXNlcjtcclxuICByZXR1cm4ge1xyXG4gICAgdG9rZW46IGlzX3ZlcmlmaWVkID8gY3JlYXRlVG9rZW4oe1xyXG4gICAgICBuYW1lLFxyXG4gICAgICB1dWlkLFxyXG4gICAgICBlbWFpbCxcclxuICAgICAgcm9sZVxyXG4gICAgfSkgOiAnJ1xyXG4gIH07XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "getUserInfo.js"
      ],
      "names": [
        "user",
        "email",
        "name",
        "role",
        "uuid",
        "is_verified",
        "token"
      ],
      "mappings": ";;;;;;;AAEA;;AAFA;AACA;eAGe,kBAACA,IAAD,EAAU;AAAA,MAErBC,KAFqB,GAGnBD,IAHmB,CAErBC,KAFqB;AAAA,MAEdC,IAFc,GAGnBF,IAHmB,CAEdE,IAFc;AAAA,MAERC,IAFQ,GAGnBH,IAHmB,CAERG,IAFQ;AAAA,MAEFC,IAFE,GAGnBJ,IAHmB,CAEFI,IAFE;AAAA,MAEIC,WAFJ,GAGnBL,IAHmB,CAEIK,WAFJ;AAIvB,SAAO;AACLC,IAAAA,KAAK,EAAED,WAAW,GAAG,iCAAY;AAC/BH,MAAAA,IAAI,EAAJA,IAD+B;AAE/BE,MAAAA,IAAI,EAAJA,IAF+B;AAG/BH,MAAAA,KAAK,EAALA,KAH+B;AAI/BE,MAAAA,IAAI,EAAJA;AAJ+B,KAAZ,CAAH,GAKb;AANA,GAAP;AAQD,C",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\utils",
      "sourcesContent": [
        "/* eslint-disable camelcase */\r\n// Returns selected information for logged in user.\r\nimport { createToken } from '../modules/tokenProcessor';\r\n\r\nexport default (user) => {\r\n  const {\r\n    email, name, role, uuid, is_verified\r\n  } = user;\r\n  return {\r\n    token: is_verified ? createToken({\r\n      name,\r\n      uuid,\r\n      email,\r\n      role\r\n    }) : ''\r\n  };\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577786622076
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\controllers\\\\AdminController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\AdminController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\AdminController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\AdminController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
        "sourceFileName": "AdminController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sendResponse = require(\"../utils/sendResponse\");\n\nvar _validator = require(\"../modules/validator\");\n\nvar _CandidateRepository = _interopRequireDefault(require(\"../repositories/CandidateRepository\"));\n\nvar _UserRepository = _interopRequireDefault(require(\"../repositories/UserRepository\"));\n\nvar _PartyRepository = _interopRequireDefault(require(\"../repositories/PartyRepository\"));\n\nvar _UserPartyRepository = _interopRequireDefault(require(\"../repositories/UserPartyRepository\"));\n\n/* eslint-disable camelcase */\n\n/* eslint-disable class-methods-use-this */\n// import PartyRepository from '../repositories/PartyRepository';\n// import UserPartyRepository from '../repositories/UserPartyRepository';\n\n/**\r\n * Ezekiel 21:27\r\n * @module AdminController\r\n * @description Controls admin based activities\r\n */\nvar AdminController =\n/*#__PURE__*/\nfunction () {\n  function AdminController() {\n    (0, _classCallCheck2[\"default\"])(this, AdminController);\n  }\n\n  (0, _createClass2[\"default\"])(AdminController, [{\n    key: \"assignRole\",\n\n    /**\r\n     * @description Assign roles to users\r\n     *\r\n     * @param {*} req - Request Object\r\n     *\r\n     * @param {*} res - Response Object\r\n     *\r\n     * @returns {object} - returns a response object\r\n     *\r\n     * @memberof AdminController\r\n     */\n    value: function () {\n      var _assignRole = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res) {\n        var _req$body, email, role, roles, updatedUser;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _req$body = req.body, email = _req$body.email, role = _req$body.role;\n                _context.prev = 1;\n\n                if ((0, _validator.inValidEmail)(email)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 5;\n                return _UserRepository[\"default\"].getRoles();\n\n              case 5:\n                roles = _context.sent;\n\n                if (roles.includes(role)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, \"\".concat(role, \" role does not exist\")));\n\n              case 8:\n                _context.next = 10;\n                return _UserRepository[\"default\"].setRole(email, role);\n\n              case 10:\n                updatedUser = _context.sent;\n\n                if (updatedUser) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 404, \"User with email \".concat(email, \" not found\")));\n\n              case 13:\n                return _context.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 200, \"New role assigned to \".concat(email)));\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](1);\n                throw new Error(_context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 16]]);\n      }));\n\n      function assignRole(_x, _x2) {\n        return _assignRole.apply(this, arguments);\n      }\n\n      return assignRole;\n    }()\n    /**\r\n     * @description gets a list of all users\r\n     *\r\n     * @param {object} req - request object\r\n     *\r\n     * @param {object} res - response object\r\n     *\r\n     * @returns {object} returns a response object\r\n     *\r\n     * @memberof AdminController\r\n     */\n\n  }, {\n    key: \"getUsers\",\n    value: function () {\n      var _getUsers = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(req, res) {\n        var users, usersInfo;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _UserRepository[\"default\"].getAll();\n\n              case 2:\n                users = _context2.sent;\n\n                if (users) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 404, 'No user found'));\n\n              case 5:\n                usersInfo = users.map(function (user) {\n                  var userInfo = {\n                    name: user.name,\n                    email: user.email,\n                    is_verified: user.is_verified,\n                    role: user.role\n                  };\n                  return userInfo;\n                });\n                return _context2.abrupt(\"return\", (0, _sendResponse.sendSuccessResponse)(res, 200, usersInfo));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getUsers(_x3, _x4) {\n        return _getUsers.apply(this, arguments);\n      }\n\n      return getUsers;\n    }()\n    /**\r\n     * @description gets a user by uuid\r\n     *\r\n     * @param {object} req request object\r\n     *\r\n     * @param {object} res response object\r\n     *\r\n     * @returns {object} returns a response containing the user object\r\n     *\r\n     * @memberof AdminController\r\n     */\n\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(req, res) {\n        var email, user, userInfo;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                email = req.params.email;\n                _context3.next = 3;\n                return _UserRepository[\"default\"].getOne({\n                  email: email\n                });\n\n              case 3:\n                user = _context3.sent;\n\n                if (user) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 404, 'User not found'));\n\n              case 6:\n                userInfo = {\n                  name: user.name,\n                  email: user.email,\n                  is_verified: user.is_verified,\n                  role: user.role\n                };\n                return _context3.abrupt(\"return\", (0, _sendResponse.sendSuccessResponse)(res, 200, userInfo));\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getUser(_x5, _x6) {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n    /**\r\n     * @description assigns permissions to role\r\n     *\r\n     * @param {object} req request object\r\n     *\r\n     * @param {object} res response object\r\n     *\r\n     * @returns {object} returns a response containing the user object\r\n     *\r\n     * @memberof AdminController\r\n     */\n\n  }, {\n    key: \"assignPermission\",\n    value: function () {\n      var _assignPermission = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(req, res) {\n        var _req$body2, role, permission, roles, permissions;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _req$body2 = req.body, role = _req$body2.role, permission = _req$body2.permission;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return _UserRepository[\"default\"].getRoles();\n\n              case 4:\n                roles = _context4.sent;\n                _context4.next = 7;\n                return _UserRepository[\"default\"].getPermissions();\n\n              case 7:\n                permissions = _context4.sent;\n\n                if (permissions.includes(permission)) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, \"\".concat(permission, \" permission does not exist\")));\n\n              case 10:\n                if (roles.includes(role)) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, \"\".concat(role, \" role does not exist\")));\n\n              case 12:\n                _context4.next = 14;\n                return _UserRepository[\"default\"].setPermission(role, permission);\n\n              case 14:\n                return _context4.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 200, \"\".concat(permission, \" permission assigned to \").concat(role, \" successfully\")));\n\n              case 17:\n                _context4.prev = 17;\n                _context4.t0 = _context4[\"catch\"](1);\n                return _context4.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 500, 'Unable to assign permission'));\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 17]]);\n      }));\n\n      function assignPermission(_x7, _x8) {\n        return _assignPermission.apply(this, arguments);\n      }\n\n      return assignPermission;\n    }()\n    /**\r\n     * @description assigns permissions to role\r\n     *\r\n     * @param {object} req request object\r\n     *\r\n     * @param {object} res response object\r\n     *\r\n     * @param {object} next passes control to the  next middleware\r\n     *\r\n     * @returns {object} returns a response containing the user object\r\n     * \r\n     * @memberof AdminController\r\n     */\n\n  }, {\n    key: \"approveVoterParty\",\n    value: function () {\n      var _approveVoterParty = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5(req, res, next) {\n        var uuid, partyUuid, status, _ref, adminRequester, _ref2, partyAdmin;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                uuid = req.userData.uuid;\n                partyUuid = req.params.party_uuid;\n                status = req.body.status;\n                _context5.prev = 3;\n                _context5.next = 6;\n                return _UserRepository[\"default\"].getOne({\n                  uuid: uuid\n                });\n\n              case 6:\n                _ref = _context5.sent;\n                adminRequester = _ref.role;\n                _context5.next = 10;\n                return _PartyRepository[\"default\"].getOne({\n                  uuid: partyUuid\n                });\n\n              case 10:\n                _ref2 = _context5.sent;\n                partyAdmin = _ref2.admin_uuid;\n\n                if (partyAdmin) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 404, \"Party with ID \".concat(partyUuid, \" does not exist\")));\n\n              case 14:\n                if (!(adminRequester !== 'Party Administrator' && partyAdmin !== uuid)) {\n                  _context5.next = 16;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 401, 'Only party administrator can approve party membership'));\n\n              case 16:\n                _context5.next = 18;\n                return _UserPartyRepository[\"default\"].update({\n                  status: status\n                }, partyUuid);\n\n              case 18:\n                return _context5.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 200, \"You have succesfully \".concat(status, \" a voter request to join party\")));\n\n              case 21:\n                _context5.prev = 21;\n                _context5.t0 = _context5[\"catch\"](3);\n                next(_context5.t0);\n\n              case 24:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[3, 21]]);\n      }));\n\n      function approveVoterParty(_x9, _x10, _x11) {\n        return _approveVoterParty.apply(this, arguments);\n      }\n\n      return approveVoterParty;\n    }()\n    /**\r\n     * @description assigns permissions to role\r\n     *\r\n     * @param {object} req request object\r\n     *\r\n     * @param {object} res response object\r\n     *\r\n     * @param {object} next passes control to the  next middleware\r\n     *\r\n     * @returns {object} returns a response containing the user object\r\n     * \r\n     * @memberof AdminController\r\n     */\n\n  }, {\n    key: \"approvePartyAdmin\",\n    value: function () {\n      var _approvePartyAdmin = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6(req, res, next) {\n        var admin_uuid, party_name, uuid, _ref3, electAdmin, _ref4, partyAdmin, party;\n\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                // eslint-disable-next-line camelcase\n                admin_uuid = req.params.admin_uuid;\n                party_name = req.body.partyName;\n                uuid = req.userData.uuid;\n                _context6.prev = 3;\n                _context6.next = 6;\n                return _UserRepository[\"default\"].getOne({\n                  uuid: uuid\n                });\n\n              case 6:\n                _ref3 = _context6.sent;\n                electAdmin = _ref3.role;\n\n                if (!(electAdmin !== 'Election Administrator')) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 401, 'Only Election Adminstrator can approve admin for parties'));\n\n              case 10:\n                _context6.next = 12;\n                return _UserRepository[\"default\"].getOne({\n                  uuid: admin_uuid\n                });\n\n              case 12:\n                _ref4 = _context6.sent;\n                partyAdmin = _ref4.role;\n\n                if (!(partyAdmin !== 'Party Administrator')) {\n                  _context6.next = 16;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 401, 'Only Party Adminstrator can be admin for parties'));\n\n              case 16:\n                _context6.next = 18;\n                return _PartyRepository[\"default\"].getOne({\n                  party_name: party_name\n                });\n\n              case 18:\n                party = _context6.sent;\n\n                if (party) {\n                  _context6.next = 21;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 404, \"\".concat(party_name, \" does not exist\")));\n\n              case 21:\n                _context6.next = 23;\n                return _PartyRepository[\"default\"].update({\n                  admin_uuid: admin_uuid\n                }, party_name);\n\n              case 23:\n                return _context6.abrupt(\"return\", (0, _sendResponse.sendSuccessResponse)(res, 200, \"Party admin has been assigned to \".concat(party_name)));\n\n              case 26:\n                _context6.prev = 26;\n                _context6.t0 = _context6[\"catch\"](3);\n                return _context6.abrupt(\"return\", next(_context6.t0));\n\n              case 29:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[3, 26]]);\n      }));\n\n      function approvePartyAdmin(_x12, _x13, _x14) {\n        return _approvePartyAdmin.apply(this, arguments);\n      }\n\n      return approvePartyAdmin;\n    }()\n    /**\r\n     * @description assigns permissions to role\r\n     *\r\n     * @param {object} req request object\r\n     *\r\n     * @param {object} res response object\r\n     *\r\n     * @param {object} next passes control to the  next middleware\r\n     *\r\n     * @returns {object} returns a response containing the user object\r\n     * \r\n     * @memberof AdminController\r\n     */\n\n  }, {\n    key: \"approveCandidacy\",\n    value: function () {\n      var _approveCandidacy = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(req, res, next) {\n        var uuid, candidacyUuid, _ref5, partyAdminRole, userId, _PartyRepository$getO, partyUuid, test, _ref6, party_uuid;\n\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                uuid = req.userData.uuid;\n                candidacyUuid = req.params.candidacy_uuid; // const { status } = req.body;\n\n                _context7.prev = 2;\n                _context7.next = 5;\n                return _UserRepository[\"default\"].getOne({\n                  uuid: uuid\n                });\n\n              case 5:\n                _ref5 = _context7.sent;\n                partyAdminRole = _ref5.role;\n                userId = _ref5.uuid;\n                if (!partyAdminRole) (0, _sendResponse.sendErrorResponse)(res, 401, 'You are not authorize to approve a party');\n                _PartyRepository$getO = _PartyRepository[\"default\"].getOne({\n                  admin_uuid: userId\n                }), partyUuid = _PartyRepository$getO.uuid;\n                _context7.next = 12;\n                return _PartyRepository[\"default\"].findAll(partyUuid);\n\n              case 12:\n                test = _context7.sent;\n                console.log('TEST', test);\n                _context7.next = 16;\n                return _CandidateRepository[\"default\"].getOne({\n                  candidacyUuid: candidacyUuid\n                });\n\n              case 16:\n                _ref6 = _context7.sent;\n                party_uuid = _ref6.party_uuid;\n\n                if (!(party_uuid !== partyUuid)) {\n                  _context7.next = 20;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, 'You are not authorize to approve a party'));\n\n              case 20:\n                if (!(partyAdminRole !== 'Party Administrator' && uuid !== partyUuid)) {\n                  _context7.next = 22;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 401, 'Only a political party can approve candidacy'));\n\n              case 22:\n                _context7.next = 27;\n                break;\n\n              case 24:\n                _context7.prev = 24;\n                _context7.t0 = _context7[\"catch\"](2);\n                next(_context7.t0);\n\n              case 27:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[2, 24]]);\n      }));\n\n      function approveCandidacy(_x15, _x16, _x17) {\n        return _approveCandidacy.apply(this, arguments);\n      }\n\n      return approveCandidacy;\n    }()\n    /**\r\n     * @description assigns permissions to role\r\n     *\r\n     * @param {object} req request object\r\n     *\r\n     * @param {object} res response object\r\n     *\r\n     * @param {object} next passes control to the  next middleware\r\n     *\r\n     * @returns {object} returns a response containing the user object\r\n     * \r\n     * @memberof AdminController\r\n     */\n\n  }, {\n    key: \"approveParty\",\n    value: function () {\n      var _approveParty = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8(req, res, next) {\n        var party_uuid, uuid, status, _ref7, electAdmin, party;\n\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                party_uuid = req.params.party_uuid;\n                uuid = req.userData.uuid;\n                status = req.body.status;\n                _context8.prev = 3;\n                _context8.next = 6;\n                return _UserRepository[\"default\"].getOne({\n                  uuid: uuid\n                });\n\n              case 6:\n                _ref7 = _context8.sent;\n                electAdmin = _ref7.role;\n                if (!electAdmin) (0, _sendResponse.sendErrorResponse)(res, 401, 'You are not authorize to approve a party');\n                _context8.next = 11;\n                return _PartyRepository[\"default\"].getOne({\n                  party_uuid: party_uuid\n                });\n\n              case 11:\n                party = _context8.sent;\n                if (!party) (0, _sendResponse.sendErrorResponse)(res, 404, 'party can not be found');\n                _context8.next = 15;\n                return _PartyRepository[\"default\"].update({\n                  status: status\n                }, party_uuid);\n\n              case 15:\n                return _context8.abrupt(\"return\", (0, _sendResponse.sendSuccessResponse)(res, 200, \"Party has been \".concat(status)));\n\n              case 18:\n                _context8.prev = 18;\n                _context8.t0 = _context8[\"catch\"](3);\n                next(_context8.t0);\n\n              case 21:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[3, 18]]);\n      }));\n\n      function approveParty(_x18, _x19, _x20) {\n        return _approveParty.apply(this, arguments);\n      }\n\n      return approveParty;\n    }()\n  }]);\n  return AdminController;\n}();\n\nvar _default = new AdminController();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkbWluQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJBZG1pbkNvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJib2R5IiwiZW1haWwiLCJyb2xlIiwiVXNlclJlcG9zaXRvcnkiLCJnZXRSb2xlcyIsInJvbGVzIiwiaW5jbHVkZXMiLCJzZXRSb2xlIiwidXBkYXRlZFVzZXIiLCJFcnJvciIsImdldEFsbCIsInVzZXJzIiwidXNlcnNJbmZvIiwibWFwIiwidXNlciIsInVzZXJJbmZvIiwibmFtZSIsImlzX3ZlcmlmaWVkIiwicGFyYW1zIiwiZ2V0T25lIiwicGVybWlzc2lvbiIsImdldFBlcm1pc3Npb25zIiwicGVybWlzc2lvbnMiLCJzZXRQZXJtaXNzaW9uIiwibmV4dCIsInV1aWQiLCJ1c2VyRGF0YSIsInBhcnR5VXVpZCIsInBhcnR5X3V1aWQiLCJzdGF0dXMiLCJhZG1pblJlcXVlc3RlciIsIlBhcnR5UmVwb3NpdG9yeSIsInBhcnR5QWRtaW4iLCJhZG1pbl91dWlkIiwiVXNlclBhcnR5UmVwb3NpdG9yeSIsInVwZGF0ZSIsInBhcnR5X25hbWUiLCJwYXJ0eU5hbWUiLCJlbGVjdEFkbWluIiwicGFydHkiLCJjYW5kaWRhY3lVdWlkIiwiY2FuZGlkYWN5X3V1aWQiLCJwYXJ0eUFkbWluUm9sZSIsInVzZXJJZCIsImZpbmRBbGwiLCJ0ZXN0IiwiY29uc29sZSIsImxvZyIsIkNhbmRpZGF0ZVJlcG9zaXRvcnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBWEE7O0FBQ0E7QUFDQTtBQUNBOztBQVVBOzs7OztJQUtNQSxlOzs7Ozs7Ozs7O0FBQ0o7Ozs7Ozs7Ozs7Ozs7O29EQVdpQkMsRyxFQUFLQyxHOzs7Ozs7OzRCQUNJRCxHQUFHLENBQUNFLEksRUFBcEJDLEssYUFBQUEsSyxFQUFPQyxJLGFBQUFBLEk7OztvQkFFUiw2QkFBYUQsS0FBYixDOzs7Ozs7dUJBQ2lCRSwyQkFBZUMsUUFBZixFOzs7QUFBZEMsZ0JBQUFBLEs7O29CQUNEQSxLQUFLLENBQUNDLFFBQU4sQ0FBZUosSUFBZixDOzs7OztpREFBNkIscUNBQWtCSCxHQUFsQixFQUF1QixHQUF2QixZQUErQkcsSUFBL0IsMEI7Ozs7dUJBQ1JDLDJCQUFlSSxPQUFmLENBQXVCTixLQUF2QixFQUE4QkMsSUFBOUIsQzs7O0FBQXBCTSxnQkFBQUEsVzs7b0JBQ0RBLFc7Ozs7O2lEQUFvQixxQ0FBa0JULEdBQWxCLEVBQXVCLEdBQXZCLDRCQUErQ0UsS0FBL0MsZ0I7OztpREFDbEIsbUNBQWdCRixHQUFoQixFQUFxQixHQUFyQixpQ0FBa0RFLEtBQWxELEU7Ozs7Ozs7OztzQkFHSCxJQUFJUSxLQUFKLGE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJVjs7Ozs7Ozs7Ozs7Ozs7Ozs7cURBV2VYLEcsRUFBS0MsRzs7Ozs7Ozt1QkFDRUksMkJBQWVPLE1BQWYsRTs7O0FBQWRDLGdCQUFBQSxLOztvQkFDREEsSzs7Ozs7a0RBQWMscUNBQWtCWixHQUFsQixFQUF1QixHQUF2QixFQUE0QixlQUE1QixDOzs7QUFDYmEsZ0JBQUFBLFMsR0FBWUQsS0FBSyxDQUFDRSxHQUFOLENBQVUsVUFBQUMsSUFBSSxFQUFJO0FBQ2xDLHNCQUFNQyxRQUFRLEdBQUc7QUFDZkMsb0JBQUFBLElBQUksRUFBRUYsSUFBSSxDQUFDRSxJQURJO0FBRWZmLG9CQUFBQSxLQUFLLEVBQUVhLElBQUksQ0FBQ2IsS0FGRztBQUdmZ0Isb0JBQUFBLFdBQVcsRUFBRUgsSUFBSSxDQUFDRyxXQUhIO0FBSWZmLG9CQUFBQSxJQUFJLEVBQUVZLElBQUksQ0FBQ1o7QUFKSSxtQkFBakI7QUFNQSx5QkFBT2EsUUFBUDtBQUNELGlCQVJpQixDO2tEQVNYLHVDQUFvQmhCLEdBQXBCLEVBQXlCLEdBQXpCLEVBQThCYSxTQUE5QixDOzs7Ozs7Ozs7Ozs7Ozs7O0FBR1Q7Ozs7Ozs7Ozs7Ozs7Ozs7O3FEQVdjZCxHLEVBQUtDLEc7Ozs7OztBQUNURSxnQkFBQUEsSyxHQUFVSCxHQUFHLENBQUNvQixNLENBQWRqQixLOzt1QkFDV0UsMkJBQWVnQixNQUFmLENBQXNCO0FBQUVsQixrQkFBQUEsS0FBSyxFQUFMQTtBQUFGLGlCQUF0QixDOzs7QUFBYmEsZ0JBQUFBLEk7O29CQUNEQSxJOzs7OztrREFBYSxxQ0FBa0JmLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLGdCQUE1QixDOzs7QUFDWmdCLGdCQUFBQSxRLEdBQVc7QUFDZkMsa0JBQUFBLElBQUksRUFBRUYsSUFBSSxDQUFDRSxJQURJO0FBRWZmLGtCQUFBQSxLQUFLLEVBQUVhLElBQUksQ0FBQ2IsS0FGRztBQUdmZ0Isa0JBQUFBLFdBQVcsRUFBRUgsSUFBSSxDQUFDRyxXQUhIO0FBSWZmLGtCQUFBQSxJQUFJLEVBQUVZLElBQUksQ0FBQ1o7QUFKSSxpQjtrREFNVix1Q0FBb0JILEdBQXBCLEVBQXlCLEdBQXpCLEVBQThCZ0IsUUFBOUIsQzs7Ozs7Ozs7Ozs7Ozs7OztBQUdUOzs7Ozs7Ozs7Ozs7Ozs7OztxREFXdUJqQixHLEVBQUtDLEc7Ozs7Ozs7NkJBQ0dELEdBQUcsQ0FBQ0UsSSxFQUF6QkUsSSxjQUFBQSxJLEVBQU1rQixVLGNBQUFBLFU7Ozt1QkFFUWpCLDJCQUFlQyxRQUFmLEU7OztBQUFkQyxnQkFBQUEsSzs7dUJBQ29CRiwyQkFBZWtCLGNBQWYsRTs7O0FBQXBCQyxnQkFBQUEsVzs7b0JBQ0RBLFdBQVcsQ0FBQ2hCLFFBQVosQ0FBcUJjLFVBQXJCLEM7Ozs7O2tEQUF5QyxxQ0FBa0JyQixHQUFsQixFQUF1QixHQUF2QixZQUErQnFCLFVBQS9CLGdDOzs7b0JBQ3pDZixLQUFLLENBQUNDLFFBQU4sQ0FBZUosSUFBZixDOzs7OztrREFBNkIscUNBQWtCSCxHQUFsQixFQUF1QixHQUF2QixZQUErQkcsSUFBL0IsMEI7Ozs7dUJBQzVCQywyQkFBZW9CLGFBQWYsQ0FBNkJyQixJQUE3QixFQUFtQ2tCLFVBQW5DLEM7OztrREFDQyxtQ0FBZ0JyQixHQUFoQixFQUFxQixHQUFyQixZQUE2QnFCLFVBQTdCLHFDQUFrRWxCLElBQWxFLG1COzs7OztrREFFQSxxQ0FBa0JILEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLDZCQUE1QixDOzs7Ozs7Ozs7Ozs7Ozs7O0FBSVg7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cURBYXdCRCxHLEVBQUtDLEcsRUFBS3lCLEk7Ozs7Ozs7QUFDeEJDLGdCQUFBQSxJLEdBQVMzQixHQUFHLENBQUM0QixRLENBQWJELEk7QUFDWUUsZ0JBQUFBLFMsR0FBYzdCLEdBQUcsQ0FBQ29CLE0sQ0FBOUJVLFU7QUFDQUMsZ0JBQUFBLE0sR0FBVy9CLEdBQUcsQ0FBQ0UsSSxDQUFmNkIsTTs7O3VCQUVpQzFCLDJCQUFlZ0IsTUFBZixDQUFzQjtBQUFFTSxrQkFBQUEsSUFBSSxFQUFKQTtBQUFGLGlCQUF0QixDOzs7O0FBQXpCSyxnQkFBQUEsYyxRQUFONUIsSTs7dUJBQ2lDNkIsNEJBQWdCWixNQUFoQixDQUF1QjtBQUFFTSxrQkFBQUEsSUFBSSxFQUFFRTtBQUFSLGlCQUF2QixDOzs7O0FBQXJCSyxnQkFBQUEsVSxTQUFaQyxVOztvQkFDSEQsVTs7Ozs7a0RBQW1CLHFDQUFrQmpDLEdBQWxCLEVBQXVCLEdBQXZCLDBCQUE2QzRCLFNBQTdDLHFCOzs7c0JBQ3BCRyxjQUFjLEtBQUsscUJBQW5CLElBQTRDRSxVQUFVLEtBQUtQLEk7Ozs7O2tEQUFhLHFDQUFrQjFCLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLHVEQUE1QixDOzs7O3VCQUN0RW1DLGdDQUFvQkMsTUFBcEIsQ0FBMkI7QUFDL0JOLGtCQUFBQSxNQUFNLEVBQU5BO0FBRCtCLGlCQUEzQixFQUVIRixTQUZHLEM7OztrREFHQyxtQ0FBZ0I1QixHQUFoQixFQUFxQixHQUFyQixpQ0FBa0Q4QixNQUFsRCxvQzs7Ozs7QUFFUEwsZ0JBQUFBLElBQUksY0FBSjs7Ozs7Ozs7Ozs7Ozs7OztBQUlKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FEQWF3QjFCLEcsRUFBS0MsRyxFQUFLeUIsSTs7Ozs7OztBQUNoQztBQUNRUyxnQkFBQUEsVSxHQUFlbkMsR0FBRyxDQUFDb0IsTSxDQUFuQmUsVTtBQUNXRyxnQkFBQUEsVSxHQUFldEMsR0FBRyxDQUFDRSxJLENBQTlCcUMsUztBQUNBWixnQkFBQUEsSSxHQUFTM0IsR0FBRyxDQUFDNEIsUSxDQUFiRCxJOzs7dUJBRTZCdEIsMkJBQWVnQixNQUFmLENBQXNCO0FBQUVNLGtCQUFBQSxJQUFJLEVBQUpBO0FBQUYsaUJBQXRCLEM7Ozs7QUFBckJhLGdCQUFBQSxVLFNBQU5wQyxJOztzQkFDSm9DLFVBQVUsS0FBSyx3Qjs7Ozs7a0RBQWlDLHFDQUFrQnZDLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLDBEQUE1QixDOzs7O3VCQUNqQkksMkJBQWVnQixNQUFmLENBQXNCO0FBQUVNLGtCQUFBQSxJQUFJLEVBQUVRO0FBQVIsaUJBQXRCLEM7Ozs7QUFBckJELGdCQUFBQSxVLFNBQU45QixJOztzQkFDSjhCLFVBQVUsS0FBSyxxQjs7Ozs7a0RBQThCLHFDQUFrQmpDLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLGtEQUE1QixDOzs7O3VCQUM3QmdDLDRCQUFnQlosTUFBaEIsQ0FBdUI7QUFBRWlCLGtCQUFBQSxVQUFVLEVBQVZBO0FBQUYsaUJBQXZCLEM7OztBQUFkRyxnQkFBQUEsSzs7b0JBQ0RBLEs7Ozs7O2tEQUFjLHFDQUFrQnhDLEdBQWxCLEVBQXVCLEdBQXZCLFlBQStCcUMsVUFBL0IscUI7Ozs7dUJBQ2JMLDRCQUFnQkksTUFBaEIsQ0FBdUI7QUFDM0JGLGtCQUFBQSxVQUFVLEVBQVZBO0FBRDJCLGlCQUF2QixFQUVIRyxVQUZHLEM7OztrREFHQyx1Q0FBb0JyQyxHQUFwQixFQUF5QixHQUF6Qiw2Q0FBa0VxQyxVQUFsRSxFOzs7OztrREFFQVosSUFBSSxjOzs7Ozs7Ozs7Ozs7Ozs7O0FBSWY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cURBYXVCMUIsRyxFQUFLQyxHLEVBQUt5QixJOzs7Ozs7O0FBQ3ZCQyxnQkFBQUEsSSxHQUFTM0IsR0FBRyxDQUFDNEIsUSxDQUFiRCxJO0FBQ2dCZSxnQkFBQUEsYSxHQUFrQjFDLEdBQUcsQ0FBQ29CLE0sQ0FBdEN1QixjLEVBQ1I7Ozs7dUJBRXVEdEMsMkJBQWVnQixNQUFmLENBQXNCO0FBQUVNLGtCQUFBQSxJQUFJLEVBQUpBO0FBQUYsaUJBQXRCLEM7Ozs7QUFBdkNpQixnQkFBQUEsYyxTQUFOeEMsSTtBQUE0QnlDLGdCQUFBQSxNLFNBQU5sQixJO0FBQzlCLG9CQUFJLENBQUNpQixjQUFMLEVBQXFCLHFDQUFrQjNDLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLDBDQUE1Qjt3Q0FDT2dDLDRCQUFnQlosTUFBaEIsQ0FBdUI7QUFBRWMsa0JBQUFBLFVBQVUsRUFBRVU7QUFBZCxpQkFBdkIsQyxFQUFkaEIsUyx5QkFBTkYsSTs7dUJBQ1dNLDRCQUFnQmEsT0FBaEIsQ0FBd0JqQixTQUF4QixDOzs7QUFBYmtCLGdCQUFBQSxJO0FBQ05DLGdCQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxNQUFaLEVBQW9CRixJQUFwQjs7dUJBRTZCRyxnQ0FBb0I3QixNQUFwQixDQUEyQjtBQUFFcUIsa0JBQUFBLGFBQWEsRUFBYkE7QUFBRixpQkFBM0IsQzs7OztBQUFyQlosZ0JBQUFBLFUsU0FBQUEsVTs7c0JBQ0pBLFVBQVUsS0FBS0QsUzs7Ozs7a0RBQWtCLHFDQUFrQjVCLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLDBDQUE1QixDOzs7c0JBRWpDMkMsY0FBYyxLQUFLLHFCQUFuQixJQUE0Q2pCLElBQUksS0FBS0UsUzs7Ozs7a0RBQWtCLHFDQUFrQjVCLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLDhDQUE1QixDOzs7Ozs7Ozs7QUFFM0V5QixnQkFBQUEsSUFBSSxjQUFKOzs7Ozs7Ozs7Ozs7Ozs7O0FBSUo7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cURBYW1CMUIsRyxFQUFLQyxHLEVBQUt5QixJOzs7Ozs7O0FBQ25CSSxnQkFBQUEsVSxHQUFlOUIsR0FBRyxDQUFDb0IsTSxDQUFuQlUsVTtBQUNBSCxnQkFBQUEsSSxHQUFTM0IsR0FBRyxDQUFDNEIsUSxDQUFiRCxJO0FBQ0FJLGdCQUFBQSxNLEdBQVcvQixHQUFHLENBQUNFLEksQ0FBZjZCLE07Ozt1QkFFNkIxQiwyQkFBZWdCLE1BQWYsQ0FBc0I7QUFBRU0sa0JBQUFBLElBQUksRUFBSkE7QUFBRixpQkFBdEIsQzs7OztBQUFyQmEsZ0JBQUFBLFUsU0FBTnBDLEk7QUFDUixvQkFBSSxDQUFDb0MsVUFBTCxFQUFpQixxQ0FBa0J2QyxHQUFsQixFQUF1QixHQUF2QixFQUE0QiwwQ0FBNUI7O3VCQUNHZ0MsNEJBQWdCWixNQUFoQixDQUF1QjtBQUFFUyxrQkFBQUEsVUFBVSxFQUFWQTtBQUFGLGlCQUF2QixDOzs7QUFBZFcsZ0JBQUFBLEs7QUFDTixvQkFBSSxDQUFDQSxLQUFMLEVBQVkscUNBQWtCeEMsR0FBbEIsRUFBdUIsR0FBdkIsRUFBNEIsd0JBQTVCOzt1QkFDTmdDLDRCQUFnQkksTUFBaEIsQ0FBdUI7QUFBRU4sa0JBQUFBLE1BQU0sRUFBTkE7QUFBRixpQkFBdkIsRUFBbUNELFVBQW5DLEM7OztrREFDQyx1Q0FBb0I3QixHQUFwQixFQUF5QixHQUF6QiwyQkFBZ0Q4QixNQUFoRCxFOzs7OztBQUVQTCxnQkFBQUEsSUFBSSxjQUFKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUtTLElBQUkzQixlQUFKLEUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXHJcbi8qIGVzbGludC1kaXNhYmxlIGNsYXNzLW1ldGhvZHMtdXNlLXRoaXMgKi9cclxuLy8gaW1wb3J0IFBhcnR5UmVwb3NpdG9yeSBmcm9tICcuLi9yZXBvc2l0b3JpZXMvUGFydHlSZXBvc2l0b3J5JztcclxuLy8gaW1wb3J0IFVzZXJQYXJ0eVJlcG9zaXRvcnkgZnJvbSAnLi4vcmVwb3NpdG9yaWVzL1VzZXJQYXJ0eVJlcG9zaXRvcnknO1xyXG5cclxuaW1wb3J0IHsgc2VuZFN1Y2Nlc3NSZXNwb25zZSwgc2VuZEVycm9yUmVzcG9uc2UsIHN1Y2Nlc3NSZXNwb25zZSB9IGZyb20gJy4uL3V0aWxzL3NlbmRSZXNwb25zZSc7XHJcbmltcG9ydCB7IGluVmFsaWRFbWFpbCB9IGZyb20gJy4uL21vZHVsZXMvdmFsaWRhdG9yJztcclxuXHJcbmltcG9ydCBDYW5kaWRhdGVSZXBvc2l0b3J5IGZyb20gJy4uL3JlcG9zaXRvcmllcy9DYW5kaWRhdGVSZXBvc2l0b3J5JztcclxuaW1wb3J0IFVzZXJSZXBvc2l0b3J5IGZyb20gJy4uL3JlcG9zaXRvcmllcy9Vc2VyUmVwb3NpdG9yeSc7XHJcbmltcG9ydCBQYXJ0eVJlcG9zaXRvcnkgZnJvbSAnLi4vcmVwb3NpdG9yaWVzL1BhcnR5UmVwb3NpdG9yeSc7XHJcbmltcG9ydCBVc2VyUGFydHlSZXBvc2l0b3J5IGZyb20gJy4uL3JlcG9zaXRvcmllcy9Vc2VyUGFydHlSZXBvc2l0b3J5JztcclxuXHJcbi8qKlxyXG4gKiBFemVraWVsIDIxOjI3XHJcbiAqIEBtb2R1bGUgQWRtaW5Db250cm9sbGVyXHJcbiAqIEBkZXNjcmlwdGlvbiBDb250cm9scyBhZG1pbiBiYXNlZCBhY3Rpdml0aWVzXHJcbiAqL1xyXG5jbGFzcyBBZG1pbkNvbnRyb2xsZXIge1xyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiBBc3NpZ24gcm9sZXMgdG8gdXNlcnNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7Kn0gcmVxIC0gUmVxdWVzdCBPYmplY3RcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7Kn0gcmVzIC0gUmVzcG9uc2UgT2JqZWN0XHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSAtIHJldHVybnMgYSByZXNwb25zZSBvYmplY3RcclxuICAgKlxyXG4gICAqIEBtZW1iZXJvZiBBZG1pbkNvbnRyb2xsZXJcclxuICAgKi9cclxuICBhc3luYyBhc3NpZ25Sb2xlKHJlcSwgcmVzKSB7XHJcbiAgICBjb25zdCB7IGVtYWlsLCByb2xlIH0gPSByZXEuYm9keTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGlmICghaW5WYWxpZEVtYWlsKGVtYWlsKSkge1xyXG4gICAgICAgIGNvbnN0IHJvbGVzID0gYXdhaXQgVXNlclJlcG9zaXRvcnkuZ2V0Um9sZXMoKTtcclxuICAgICAgICBpZiAoIXJvbGVzLmluY2x1ZGVzKHJvbGUpKSByZXR1cm4gc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDAsIGAke3JvbGV9IHJvbGUgZG9lcyBub3QgZXhpc3RgKTtcclxuICAgICAgICBjb25zdCB1cGRhdGVkVXNlciA9IGF3YWl0IFVzZXJSZXBvc2l0b3J5LnNldFJvbGUoZW1haWwsIHJvbGUpO1xyXG4gICAgICAgIGlmICghdXBkYXRlZFVzZXIpIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQwNCwgYFVzZXIgd2l0aCBlbWFpbCAke2VtYWlsfSBub3QgZm91bmRgKTtcclxuICAgICAgICByZXR1cm4gc3VjY2Vzc1Jlc3BvbnNlKHJlcywgMjAwLCBgTmV3IHJvbGUgYXNzaWduZWQgdG8gJHtlbWFpbH1gKTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiBnZXRzIGEgbGlzdCBvZiBhbGwgdXNlcnNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXEgLSByZXF1ZXN0IG9iamVjdFxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyAtIHJlc3BvbnNlIG9iamVjdFxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH0gcmV0dXJucyBhIHJlc3BvbnNlIG9iamVjdFxyXG4gICAqXHJcbiAgICogQG1lbWJlcm9mIEFkbWluQ29udHJvbGxlclxyXG4gICAqL1xyXG4gIGFzeW5jIGdldFVzZXJzKHJlcSwgcmVzKSB7XHJcbiAgICBjb25zdCB1c2VycyA9IGF3YWl0IFVzZXJSZXBvc2l0b3J5LmdldEFsbCgpO1xyXG4gICAgaWYgKCF1c2VycykgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDA0LCAnTm8gdXNlciBmb3VuZCcpO1xyXG4gICAgY29uc3QgdXNlcnNJbmZvID0gdXNlcnMubWFwKHVzZXIgPT4ge1xyXG4gICAgICBjb25zdCB1c2VySW5mbyA9IHtcclxuICAgICAgICBuYW1lOiB1c2VyLm5hbWUsXHJcbiAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsXHJcbiAgICAgICAgaXNfdmVyaWZpZWQ6IHVzZXIuaXNfdmVyaWZpZWQsXHJcbiAgICAgICAgcm9sZTogdXNlci5yb2xlXHJcbiAgICAgIH07XHJcbiAgICAgIHJldHVybiB1c2VySW5mbztcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHNlbmRTdWNjZXNzUmVzcG9uc2UocmVzLCAyMDAsIHVzZXJzSW5mbyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24gZ2V0cyBhIHVzZXIgYnkgdXVpZFxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcSByZXF1ZXN0IG9iamVjdFxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyByZXNwb25zZSBvYmplY3RcclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IHJldHVybnMgYSByZXNwb25zZSBjb250YWluaW5nIHRoZSB1c2VyIG9iamVjdFxyXG4gICAqXHJcbiAgICogQG1lbWJlcm9mIEFkbWluQ29udHJvbGxlclxyXG4gICAqL1xyXG4gIGFzeW5jIGdldFVzZXIocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IHsgZW1haWwgfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlclJlcG9zaXRvcnkuZ2V0T25lKHsgZW1haWwgfSk7XHJcbiAgICBpZiAoIXVzZXIpIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQwNCwgJ1VzZXIgbm90IGZvdW5kJyk7XHJcbiAgICBjb25zdCB1c2VySW5mbyA9IHtcclxuICAgICAgbmFtZTogdXNlci5uYW1lLFxyXG4gICAgICBlbWFpbDogdXNlci5lbWFpbCxcclxuICAgICAgaXNfdmVyaWZpZWQ6IHVzZXIuaXNfdmVyaWZpZWQsXHJcbiAgICAgIHJvbGU6IHVzZXIucm9sZVxyXG4gICAgfTtcclxuICAgIHJldHVybiBzZW5kU3VjY2Vzc1Jlc3BvbnNlKHJlcywgMjAwLCB1c2VySW5mbyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24gYXNzaWducyBwZXJtaXNzaW9ucyB0byByb2xlXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxIHJlcXVlc3Qgb2JqZWN0XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzIHJlc3BvbnNlIG9iamVjdFxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH0gcmV0dXJucyBhIHJlc3BvbnNlIGNvbnRhaW5pbmcgdGhlIHVzZXIgb2JqZWN0XHJcbiAgICpcclxuICAgKiBAbWVtYmVyb2YgQWRtaW5Db250cm9sbGVyXHJcbiAgICovXHJcbiAgYXN5bmMgYXNzaWduUGVybWlzc2lvbihyZXEsIHJlcykge1xyXG4gICAgY29uc3QgeyByb2xlLCBwZXJtaXNzaW9uIH0gPSByZXEuYm9keTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJvbGVzID0gYXdhaXQgVXNlclJlcG9zaXRvcnkuZ2V0Um9sZXMoKTtcclxuICAgICAgY29uc3QgcGVybWlzc2lvbnMgPSBhd2FpdCBVc2VyUmVwb3NpdG9yeS5nZXRQZXJtaXNzaW9ucygpO1xyXG4gICAgICBpZiAoIXBlcm1pc3Npb25zLmluY2x1ZGVzKHBlcm1pc3Npb24pKSByZXR1cm4gc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDAsIGAke3Blcm1pc3Npb259IHBlcm1pc3Npb24gZG9lcyBub3QgZXhpc3RgKTtcclxuICAgICAgaWYgKCFyb2xlcy5pbmNsdWRlcyhyb2xlKSkgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDAwLCBgJHtyb2xlfSByb2xlIGRvZXMgbm90IGV4aXN0YCk7XHJcbiAgICAgIGF3YWl0IFVzZXJSZXBvc2l0b3J5LnNldFBlcm1pc3Npb24ocm9sZSwgcGVybWlzc2lvbik7XHJcbiAgICAgIHJldHVybiBzdWNjZXNzUmVzcG9uc2UocmVzLCAyMDAsIGAke3Blcm1pc3Npb259IHBlcm1pc3Npb24gYXNzaWduZWQgdG8gJHtyb2xlfSBzdWNjZXNzZnVsbHlgKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDUwMCwgJ1VuYWJsZSB0byBhc3NpZ24gcGVybWlzc2lvbicpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uIGFzc2lnbnMgcGVybWlzc2lvbnMgdG8gcm9sZVxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcSByZXF1ZXN0IG9iamVjdFxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyByZXNwb25zZSBvYmplY3RcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBuZXh0IHBhc3NlcyBjb250cm9sIHRvIHRoZSAgbmV4dCBtaWRkbGV3YXJlXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSByZXR1cm5zIGEgcmVzcG9uc2UgY29udGFpbmluZyB0aGUgdXNlciBvYmplY3RcclxuICAgKiBcclxuICAgKiBAbWVtYmVyb2YgQWRtaW5Db250cm9sbGVyXHJcbiAgICovXHJcbiAgYXN5bmMgYXBwcm92ZVZvdGVyUGFydHkocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IHsgdXVpZCB9ID0gcmVxLnVzZXJEYXRhO1xyXG4gICAgY29uc3QgeyBwYXJ0eV91dWlkOiBwYXJ0eVV1aWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBjb25zdCB7IHN0YXR1cyB9ID0gcmVxLmJvZHk7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB7IHJvbGU6IGFkbWluUmVxdWVzdGVyIH0gPSBhd2FpdCBVc2VyUmVwb3NpdG9yeS5nZXRPbmUoeyB1dWlkIH0pO1xyXG4gICAgICBjb25zdCB7IGFkbWluX3V1aWQ6IHBhcnR5QWRtaW4gfSA9IGF3YWl0IFBhcnR5UmVwb3NpdG9yeS5nZXRPbmUoeyB1dWlkOiBwYXJ0eVV1aWQgfSk7XHJcbiAgICAgIGlmICghcGFydHlBZG1pbikgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDA0LCBgUGFydHkgd2l0aCBJRCAke3BhcnR5VXVpZH0gZG9lcyBub3QgZXhpc3RgKTsgXHJcbiAgICAgIGlmIChhZG1pblJlcXVlc3RlciAhPT0gJ1BhcnR5IEFkbWluaXN0cmF0b3InICYmIHBhcnR5QWRtaW4gIT09IHV1aWQpIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQwMSwgJ09ubHkgcGFydHkgYWRtaW5pc3RyYXRvciBjYW4gYXBwcm92ZSBwYXJ0eSBtZW1iZXJzaGlwJyk7XHJcbiAgICAgIGF3YWl0IFVzZXJQYXJ0eVJlcG9zaXRvcnkudXBkYXRlKHtcclxuICAgICAgICBzdGF0dXMsXHJcbiAgICAgIH0sIHBhcnR5VXVpZCk7XHJcbiAgICAgIHJldHVybiBzdWNjZXNzUmVzcG9uc2UocmVzLCAyMDAsIGBZb3UgaGF2ZSBzdWNjZXNmdWxseSAke3N0YXR1c30gYSB2b3RlciByZXF1ZXN0IHRvIGpvaW4gcGFydHlgKTsgXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBuZXh0KGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiBhc3NpZ25zIHBlcm1pc3Npb25zIHRvIHJvbGVcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXEgcmVxdWVzdCBvYmplY3RcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXMgcmVzcG9uc2Ugb2JqZWN0XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0gbmV4dCBwYXNzZXMgY29udHJvbCB0byB0aGUgIG5leHQgbWlkZGxld2FyZVxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH0gcmV0dXJucyBhIHJlc3BvbnNlIGNvbnRhaW5pbmcgdGhlIHVzZXIgb2JqZWN0XHJcbiAgICogXHJcbiAgICogQG1lbWJlcm9mIEFkbWluQ29udHJvbGxlclxyXG4gICAqL1xyXG4gIGFzeW5jIGFwcHJvdmVQYXJ0eUFkbWluKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2FtZWxjYXNlXHJcbiAgICBjb25zdCB7IGFkbWluX3V1aWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBjb25zdCB7IHBhcnR5TmFtZTogcGFydHlfbmFtZSB9ID0gcmVxLmJvZHk7XHJcbiAgICBjb25zdCB7IHV1aWQgfSA9IHJlcS51c2VyRGF0YTsgIFxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgeyByb2xlOiBlbGVjdEFkbWluIH0gPSBhd2FpdCBVc2VyUmVwb3NpdG9yeS5nZXRPbmUoeyB1dWlkIH0pO1xyXG4gICAgICBpZiAoZWxlY3RBZG1pbiAhPT0gJ0VsZWN0aW9uIEFkbWluaXN0cmF0b3InKSByZXR1cm4gc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDEsICdPbmx5IEVsZWN0aW9uIEFkbWluc3RyYXRvciBjYW4gYXBwcm92ZSBhZG1pbiBmb3IgcGFydGllcycpOyBcclxuICAgICAgY29uc3QgeyByb2xlOiBwYXJ0eUFkbWluIH0gPSBhd2FpdCBVc2VyUmVwb3NpdG9yeS5nZXRPbmUoeyB1dWlkOiBhZG1pbl91dWlkIH0pO1xyXG4gICAgICBpZiAocGFydHlBZG1pbiAhPT0gJ1BhcnR5IEFkbWluaXN0cmF0b3InKSByZXR1cm4gc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDEsICdPbmx5IFBhcnR5IEFkbWluc3RyYXRvciBjYW4gYmUgYWRtaW4gZm9yIHBhcnRpZXMnKTsgXHJcbiAgICAgIGNvbnN0IHBhcnR5ID0gYXdhaXQgUGFydHlSZXBvc2l0b3J5LmdldE9uZSh7IHBhcnR5X25hbWUgfSk7XHJcbiAgICAgIGlmICghcGFydHkpIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQwNCwgYCR7cGFydHlfbmFtZX0gZG9lcyBub3QgZXhpc3RgKTtcclxuICAgICAgYXdhaXQgUGFydHlSZXBvc2l0b3J5LnVwZGF0ZSh7XHJcbiAgICAgICAgYWRtaW5fdXVpZCxcclxuICAgICAgfSwgcGFydHlfbmFtZSk7XHJcbiAgICAgIHJldHVybiBzZW5kU3VjY2Vzc1Jlc3BvbnNlKHJlcywgMjAwLCBgUGFydHkgYWRtaW4gaGFzIGJlZW4gYXNzaWduZWQgdG8gJHtwYXJ0eV9uYW1lfWApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIG5leHQoZXJyb3IpO1xyXG4gICAgfSBcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiBhc3NpZ25zIHBlcm1pc3Npb25zIHRvIHJvbGVcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXEgcmVxdWVzdCBvYmplY3RcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXMgcmVzcG9uc2Ugb2JqZWN0XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0gbmV4dCBwYXNzZXMgY29udHJvbCB0byB0aGUgIG5leHQgbWlkZGxld2FyZVxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH0gcmV0dXJucyBhIHJlc3BvbnNlIGNvbnRhaW5pbmcgdGhlIHVzZXIgb2JqZWN0XHJcbiAgICogXHJcbiAgICogQG1lbWJlcm9mIEFkbWluQ29udHJvbGxlclxyXG4gICAqL1xyXG4gIGFzeW5jIGFwcHJvdmVDYW5kaWRhY3kocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IHsgdXVpZCB9ID0gcmVxLnVzZXJEYXRhO1xyXG4gICAgY29uc3QgeyBjYW5kaWRhY3lfdXVpZDogY2FuZGlkYWN5VXVpZCB9ID0gcmVxLnBhcmFtcztcclxuICAgIC8vIGNvbnN0IHsgc3RhdHVzIH0gPSByZXEuYm9keTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHsgcm9sZTogcGFydHlBZG1pblJvbGUsIHV1aWQ6IHVzZXJJZCB9ID0gYXdhaXQgVXNlclJlcG9zaXRvcnkuZ2V0T25lKHsgdXVpZCB9KTtcclxuICAgICAgaWYgKCFwYXJ0eUFkbWluUm9sZSkgc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDEsICdZb3UgYXJlIG5vdCBhdXRob3JpemUgdG8gYXBwcm92ZSBhIHBhcnR5Jyk7XHJcbiAgICAgIGNvbnN0IHsgdXVpZDogcGFydHlVdWlkIH0gPSBQYXJ0eVJlcG9zaXRvcnkuZ2V0T25lKHsgYWRtaW5fdXVpZDogdXNlcklkIH0pO1xyXG4gICAgICBjb25zdCB0ZXN0ID0gYXdhaXQgUGFydHlSZXBvc2l0b3J5LmZpbmRBbGwocGFydHlVdWlkKTtcclxuICAgICAgY29uc29sZS5sb2coJ1RFU1QnLCB0ZXN0KTtcclxuXHJcbiAgICAgIGNvbnN0IHsgcGFydHlfdXVpZCB9ID0gYXdhaXQgQ2FuZGlkYXRlUmVwb3NpdG9yeS5nZXRPbmUoeyBjYW5kaWRhY3lVdWlkIH0pO1xyXG4gICAgICBpZiAocGFydHlfdXVpZCAhPT0gcGFydHlVdWlkKSByZXR1cm4gc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDAsICdZb3UgYXJlIG5vdCBhdXRob3JpemUgdG8gYXBwcm92ZSBhIHBhcnR5Jyk7XHJcblxyXG4gICAgICBpZiAocGFydHlBZG1pblJvbGUgIT09ICdQYXJ0eSBBZG1pbmlzdHJhdG9yJyAmJiB1dWlkICE9PSBwYXJ0eVV1aWQpIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQwMSwgJ09ubHkgYSBwb2xpdGljYWwgcGFydHkgY2FuIGFwcHJvdmUgY2FuZGlkYWN5Jyk7ICAgICBcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIG5leHQoZXJyb3IpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uIGFzc2lnbnMgcGVybWlzc2lvbnMgdG8gcm9sZVxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcSByZXF1ZXN0IG9iamVjdFxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyByZXNwb25zZSBvYmplY3RcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBuZXh0IHBhc3NlcyBjb250cm9sIHRvIHRoZSAgbmV4dCBtaWRkbGV3YXJlXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSByZXR1cm5zIGEgcmVzcG9uc2UgY29udGFpbmluZyB0aGUgdXNlciBvYmplY3RcclxuICAgKiBcclxuICAgKiBAbWVtYmVyb2YgQWRtaW5Db250cm9sbGVyXHJcbiAgICovXHJcbiAgYXN5bmMgYXBwcm92ZVBhcnR5KHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICBjb25zdCB7IHBhcnR5X3V1aWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBjb25zdCB7IHV1aWQgfSA9IHJlcS51c2VyRGF0YTtcclxuICAgIGNvbnN0IHsgc3RhdHVzIH0gPSByZXEuYm9keTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHsgcm9sZTogZWxlY3RBZG1pbiB9ID0gYXdhaXQgVXNlclJlcG9zaXRvcnkuZ2V0T25lKHsgdXVpZCB9KTtcclxuICAgICAgaWYgKCFlbGVjdEFkbWluKSBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQwMSwgJ1lvdSBhcmUgbm90IGF1dGhvcml6ZSB0byBhcHByb3ZlIGEgcGFydHknKTtcclxuICAgICAgY29uc3QgcGFydHkgPSBhd2FpdCBQYXJ0eVJlcG9zaXRvcnkuZ2V0T25lKHsgcGFydHlfdXVpZCB9KTtcclxuICAgICAgaWYgKCFwYXJ0eSkgc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDQsICdwYXJ0eSBjYW4gbm90IGJlIGZvdW5kJyk7XHJcbiAgICAgIGF3YWl0IFBhcnR5UmVwb3NpdG9yeS51cGRhdGUoeyBzdGF0dXMgfSwgcGFydHlfdXVpZCk7XHJcbiAgICAgIHJldHVybiBzZW5kU3VjY2Vzc1Jlc3BvbnNlKHJlcywgMjAwLCBgUGFydHkgaGFzIGJlZW4gJHtzdGF0dXN9YCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBuZXh0KGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBBZG1pbkNvbnRyb2xsZXIoKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "AdminController.js"
      ],
      "names": [
        "AdminController",
        "req",
        "res",
        "body",
        "email",
        "role",
        "UserRepository",
        "getRoles",
        "roles",
        "includes",
        "setRole",
        "updatedUser",
        "Error",
        "getAll",
        "users",
        "usersInfo",
        "map",
        "user",
        "userInfo",
        "name",
        "is_verified",
        "params",
        "getOne",
        "permission",
        "getPermissions",
        "permissions",
        "setPermission",
        "next",
        "uuid",
        "userData",
        "partyUuid",
        "party_uuid",
        "status",
        "adminRequester",
        "PartyRepository",
        "partyAdmin",
        "admin_uuid",
        "UserPartyRepository",
        "update",
        "party_name",
        "partyName",
        "electAdmin",
        "party",
        "candidacyUuid",
        "candidacy_uuid",
        "partyAdminRole",
        "userId",
        "findAll",
        "test",
        "console",
        "log",
        "CandidateRepository"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAKA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAXA;;AACA;AACA;AACA;;AAUA;;;;;IAKMA,e;;;;;;;;;;AACJ;;;;;;;;;;;;;;oDAWiBC,G,EAAKC,G;;;;;;;4BACID,GAAG,CAACE,I,EAApBC,K,aAAAA,K,EAAOC,I,aAAAA,I;;;oBAER,6BAAaD,KAAb,C;;;;;;uBACiBE,2BAAeC,QAAf,E;;;AAAdC,gBAAAA,K;;oBACDA,KAAK,CAACC,QAAN,CAAeJ,IAAf,C;;;;;iDAA6B,qCAAkBH,GAAlB,EAAuB,GAAvB,YAA+BG,IAA/B,0B;;;;uBACRC,2BAAeI,OAAf,CAAuBN,KAAvB,EAA8BC,IAA9B,C;;;AAApBM,gBAAAA,W;;oBACDA,W;;;;;iDAAoB,qCAAkBT,GAAlB,EAAuB,GAAvB,4BAA+CE,KAA/C,gB;;;iDAClB,mCAAgBF,GAAhB,EAAqB,GAArB,iCAAkDE,KAAlD,E;;;;;;;;;sBAGH,IAAIQ,KAAJ,a;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;qDAWeX,G,EAAKC,G;;;;;;;uBACEI,2BAAeO,MAAf,E;;;AAAdC,gBAAAA,K;;oBACDA,K;;;;;kDAAc,qCAAkBZ,GAAlB,EAAuB,GAAvB,EAA4B,eAA5B,C;;;AACba,gBAAAA,S,GAAYD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AAClC,sBAAMC,QAAQ,GAAG;AACfC,oBAAAA,IAAI,EAAEF,IAAI,CAACE,IADI;AAEff,oBAAAA,KAAK,EAAEa,IAAI,CAACb,KAFG;AAGfgB,oBAAAA,WAAW,EAAEH,IAAI,CAACG,WAHH;AAIff,oBAAAA,IAAI,EAAEY,IAAI,CAACZ;AAJI,mBAAjB;AAMA,yBAAOa,QAAP;AACD,iBARiB,C;kDASX,uCAAoBhB,GAApB,EAAyB,GAAzB,EAA8Ba,SAA9B,C;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;;;;;qDAWcd,G,EAAKC,G;;;;;;AACTE,gBAAAA,K,GAAUH,GAAG,CAACoB,M,CAAdjB,K;;uBACWE,2BAAegB,MAAf,CAAsB;AAAElB,kBAAAA,KAAK,EAALA;AAAF,iBAAtB,C;;;AAAba,gBAAAA,I;;oBACDA,I;;;;;kDAAa,qCAAkBf,GAAlB,EAAuB,GAAvB,EAA4B,gBAA5B,C;;;AACZgB,gBAAAA,Q,GAAW;AACfC,kBAAAA,IAAI,EAAEF,IAAI,CAACE,IADI;AAEff,kBAAAA,KAAK,EAAEa,IAAI,CAACb,KAFG;AAGfgB,kBAAAA,WAAW,EAAEH,IAAI,CAACG,WAHH;AAIff,kBAAAA,IAAI,EAAEY,IAAI,CAACZ;AAJI,iB;kDAMV,uCAAoBH,GAApB,EAAyB,GAAzB,EAA8BgB,QAA9B,C;;;;;;;;;;;;;;;;AAGT;;;;;;;;;;;;;;;;;qDAWuBjB,G,EAAKC,G;;;;;;;6BACGD,GAAG,CAACE,I,EAAzBE,I,cAAAA,I,EAAMkB,U,cAAAA,U;;;uBAEQjB,2BAAeC,QAAf,E;;;AAAdC,gBAAAA,K;;uBACoBF,2BAAekB,cAAf,E;;;AAApBC,gBAAAA,W;;oBACDA,WAAW,CAAChB,QAAZ,CAAqBc,UAArB,C;;;;;kDAAyC,qCAAkBrB,GAAlB,EAAuB,GAAvB,YAA+BqB,UAA/B,gC;;;oBACzCf,KAAK,CAACC,QAAN,CAAeJ,IAAf,C;;;;;kDAA6B,qCAAkBH,GAAlB,EAAuB,GAAvB,YAA+BG,IAA/B,0B;;;;uBAC5BC,2BAAeoB,aAAf,CAA6BrB,IAA7B,EAAmCkB,UAAnC,C;;;kDACC,mCAAgBrB,GAAhB,EAAqB,GAArB,YAA6BqB,UAA7B,qCAAkElB,IAAlE,mB;;;;;kDAEA,qCAAkBH,GAAlB,EAAuB,GAAvB,EAA4B,6BAA5B,C;;;;;;;;;;;;;;;;AAIX;;;;;;;;;;;;;;;;;;;qDAawBD,G,EAAKC,G,EAAKyB,I;;;;;;;AACxBC,gBAAAA,I,GAAS3B,GAAG,CAAC4B,Q,CAAbD,I;AACYE,gBAAAA,S,GAAc7B,GAAG,CAACoB,M,CAA9BU,U;AACAC,gBAAAA,M,GAAW/B,GAAG,CAACE,I,CAAf6B,M;;;uBAEiC1B,2BAAegB,MAAf,CAAsB;AAAEM,kBAAAA,IAAI,EAAJA;AAAF,iBAAtB,C;;;;AAAzBK,gBAAAA,c,QAAN5B,I;;uBACiC6B,4BAAgBZ,MAAhB,CAAuB;AAAEM,kBAAAA,IAAI,EAAEE;AAAR,iBAAvB,C;;;;AAArBK,gBAAAA,U,SAAZC,U;;oBACHD,U;;;;;kDAAmB,qCAAkBjC,GAAlB,EAAuB,GAAvB,0BAA6C4B,SAA7C,qB;;;sBACpBG,cAAc,KAAK,qBAAnB,IAA4CE,UAAU,KAAKP,I;;;;;kDAAa,qCAAkB1B,GAAlB,EAAuB,GAAvB,EAA4B,uDAA5B,C;;;;uBACtEmC,gCAAoBC,MAApB,CAA2B;AAC/BN,kBAAAA,MAAM,EAANA;AAD+B,iBAA3B,EAEHF,SAFG,C;;;kDAGC,mCAAgB5B,GAAhB,EAAqB,GAArB,iCAAkD8B,MAAlD,oC;;;;;AAEPL,gBAAAA,IAAI,cAAJ;;;;;;;;;;;;;;;;AAIJ;;;;;;;;;;;;;;;;;;;qDAawB1B,G,EAAKC,G,EAAKyB,I;;;;;;;AAChC;AACQS,gBAAAA,U,GAAenC,GAAG,CAACoB,M,CAAnBe,U;AACWG,gBAAAA,U,GAAetC,GAAG,CAACE,I,CAA9BqC,S;AACAZ,gBAAAA,I,GAAS3B,GAAG,CAAC4B,Q,CAAbD,I;;;uBAE6BtB,2BAAegB,MAAf,CAAsB;AAAEM,kBAAAA,IAAI,EAAJA;AAAF,iBAAtB,C;;;;AAArBa,gBAAAA,U,SAANpC,I;;sBACJoC,UAAU,KAAK,wB;;;;;kDAAiC,qCAAkBvC,GAAlB,EAAuB,GAAvB,EAA4B,0DAA5B,C;;;;uBACjBI,2BAAegB,MAAf,CAAsB;AAAEM,kBAAAA,IAAI,EAAEQ;AAAR,iBAAtB,C;;;;AAArBD,gBAAAA,U,SAAN9B,I;;sBACJ8B,UAAU,KAAK,qB;;;;;kDAA8B,qCAAkBjC,GAAlB,EAAuB,GAAvB,EAA4B,kDAA5B,C;;;;uBAC7BgC,4BAAgBZ,MAAhB,CAAuB;AAAEiB,kBAAAA,UAAU,EAAVA;AAAF,iBAAvB,C;;;AAAdG,gBAAAA,K;;oBACDA,K;;;;;kDAAc,qCAAkBxC,GAAlB,EAAuB,GAAvB,YAA+BqC,UAA/B,qB;;;;uBACbL,4BAAgBI,MAAhB,CAAuB;AAC3BF,kBAAAA,UAAU,EAAVA;AAD2B,iBAAvB,EAEHG,UAFG,C;;;kDAGC,uCAAoBrC,GAApB,EAAyB,GAAzB,6CAAkEqC,UAAlE,E;;;;;kDAEAZ,IAAI,c;;;;;;;;;;;;;;;;AAIf;;;;;;;;;;;;;;;;;;;qDAauB1B,G,EAAKC,G,EAAKyB,I;;;;;;;AACvBC,gBAAAA,I,GAAS3B,GAAG,CAAC4B,Q,CAAbD,I;AACgBe,gBAAAA,a,GAAkB1C,GAAG,CAACoB,M,CAAtCuB,c,EACR;;;;uBAEuDtC,2BAAegB,MAAf,CAAsB;AAAEM,kBAAAA,IAAI,EAAJA;AAAF,iBAAtB,C;;;;AAAvCiB,gBAAAA,c,SAANxC,I;AAA4ByC,gBAAAA,M,SAANlB,I;AAC9B,oBAAI,CAACiB,cAAL,EAAqB,qCAAkB3C,GAAlB,EAAuB,GAAvB,EAA4B,0CAA5B;wCACOgC,4BAAgBZ,MAAhB,CAAuB;AAAEc,kBAAAA,UAAU,EAAEU;AAAd,iBAAvB,C,EAAdhB,S,yBAANF,I;;uBACWM,4BAAgBa,OAAhB,CAAwBjB,SAAxB,C;;;AAAbkB,gBAAAA,I;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;uBAE6BG,gCAAoB7B,MAApB,CAA2B;AAAEqB,kBAAAA,aAAa,EAAbA;AAAF,iBAA3B,C;;;;AAArBZ,gBAAAA,U,SAAAA,U;;sBACJA,UAAU,KAAKD,S;;;;;kDAAkB,qCAAkB5B,GAAlB,EAAuB,GAAvB,EAA4B,0CAA5B,C;;;sBAEjC2C,cAAc,KAAK,qBAAnB,IAA4CjB,IAAI,KAAKE,S;;;;;kDAAkB,qCAAkB5B,GAAlB,EAAuB,GAAvB,EAA4B,8CAA5B,C;;;;;;;;;AAE3EyB,gBAAAA,IAAI,cAAJ;;;;;;;;;;;;;;;;AAIJ;;;;;;;;;;;;;;;;;;;qDAamB1B,G,EAAKC,G,EAAKyB,I;;;;;;;AACnBI,gBAAAA,U,GAAe9B,GAAG,CAACoB,M,CAAnBU,U;AACAH,gBAAAA,I,GAAS3B,GAAG,CAAC4B,Q,CAAbD,I;AACAI,gBAAAA,M,GAAW/B,GAAG,CAACE,I,CAAf6B,M;;;uBAE6B1B,2BAAegB,MAAf,CAAsB;AAAEM,kBAAAA,IAAI,EAAJA;AAAF,iBAAtB,C;;;;AAArBa,gBAAAA,U,SAANpC,I;AACR,oBAAI,CAACoC,UAAL,EAAiB,qCAAkBvC,GAAlB,EAAuB,GAAvB,EAA4B,0CAA5B;;uBACGgC,4BAAgBZ,MAAhB,CAAuB;AAAES,kBAAAA,UAAU,EAAVA;AAAF,iBAAvB,C;;;AAAdW,gBAAAA,K;AACN,oBAAI,CAACA,KAAL,EAAY,qCAAkBxC,GAAlB,EAAuB,GAAvB,EAA4B,wBAA5B;;uBACNgC,4BAAgBI,MAAhB,CAAuB;AAAEN,kBAAAA,MAAM,EAANA;AAAF,iBAAvB,EAAmCD,UAAnC,C;;;kDACC,uCAAoB7B,GAApB,EAAyB,GAAzB,2BAAgD8B,MAAhD,E;;;;;AAEPL,gBAAAA,IAAI,cAAJ;;;;;;;;;;;;;;;;;;;;eAKS,IAAI3B,eAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
      "sourcesContent": [
        "/* eslint-disable camelcase */\r\n/* eslint-disable class-methods-use-this */\r\n// import PartyRepository from '../repositories/PartyRepository';\r\n// import UserPartyRepository from '../repositories/UserPartyRepository';\r\n\r\nimport { sendSuccessResponse, sendErrorResponse, successResponse } from '../utils/sendResponse';\r\nimport { inValidEmail } from '../modules/validator';\r\n\r\nimport CandidateRepository from '../repositories/CandidateRepository';\r\nimport UserRepository from '../repositories/UserRepository';\r\nimport PartyRepository from '../repositories/PartyRepository';\r\nimport UserPartyRepository from '../repositories/UserPartyRepository';\r\n\r\n/**\r\n * Ezekiel 21:27\r\n * @module AdminController\r\n * @description Controls admin based activities\r\n */\r\nclass AdminController {\r\n  /**\r\n   * @description Assign roles to users\r\n   *\r\n   * @param {*} req - Request Object\r\n   *\r\n   * @param {*} res - Response Object\r\n   *\r\n   * @returns {object} - returns a response object\r\n   *\r\n   * @memberof AdminController\r\n   */\r\n  async assignRole(req, res) {\r\n    const { email, role } = req.body;\r\n    try {\r\n      if (!inValidEmail(email)) {\r\n        const roles = await UserRepository.getRoles();\r\n        if (!roles.includes(role)) return sendErrorResponse(res, 400, `${role} role does not exist`);\r\n        const updatedUser = await UserRepository.setRole(email, role);\r\n        if (!updatedUser) return sendErrorResponse(res, 404, `User with email ${email} not found`);\r\n        return successResponse(res, 200, `New role assigned to ${email}`);\r\n      }\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description gets a list of all users\r\n   *\r\n   * @param {object} req - request object\r\n   *\r\n   * @param {object} res - response object\r\n   *\r\n   * @returns {object} returns a response object\r\n   *\r\n   * @memberof AdminController\r\n   */\r\n  async getUsers(req, res) {\r\n    const users = await UserRepository.getAll();\r\n    if (!users) return sendErrorResponse(res, 404, 'No user found');\r\n    const usersInfo = users.map(user => {\r\n      const userInfo = {\r\n        name: user.name,\r\n        email: user.email,\r\n        is_verified: user.is_verified,\r\n        role: user.role\r\n      };\r\n      return userInfo;\r\n    });\r\n    return sendSuccessResponse(res, 200, usersInfo);\r\n  }\r\n\r\n  /**\r\n   * @description gets a user by uuid\r\n   *\r\n   * @param {object} req request object\r\n   *\r\n   * @param {object} res response object\r\n   *\r\n   * @returns {object} returns a response containing the user object\r\n   *\r\n   * @memberof AdminController\r\n   */\r\n  async getUser(req, res) {\r\n    const { email } = req.params;\r\n    const user = await UserRepository.getOne({ email });\r\n    if (!user) return sendErrorResponse(res, 404, 'User not found');\r\n    const userInfo = {\r\n      name: user.name,\r\n      email: user.email,\r\n      is_verified: user.is_verified,\r\n      role: user.role\r\n    };\r\n    return sendSuccessResponse(res, 200, userInfo);\r\n  }\r\n\r\n  /**\r\n   * @description assigns permissions to role\r\n   *\r\n   * @param {object} req request object\r\n   *\r\n   * @param {object} res response object\r\n   *\r\n   * @returns {object} returns a response containing the user object\r\n   *\r\n   * @memberof AdminController\r\n   */\r\n  async assignPermission(req, res) {\r\n    const { role, permission } = req.body;\r\n    try {\r\n      const roles = await UserRepository.getRoles();\r\n      const permissions = await UserRepository.getPermissions();\r\n      if (!permissions.includes(permission)) return sendErrorResponse(res, 400, `${permission} permission does not exist`);\r\n      if (!roles.includes(role)) return sendErrorResponse(res, 400, `${role} role does not exist`);\r\n      await UserRepository.setPermission(role, permission);\r\n      return successResponse(res, 200, `${permission} permission assigned to ${role} successfully`);\r\n    } catch (error) {\r\n      return sendErrorResponse(res, 500, 'Unable to assign permission');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description assigns permissions to role\r\n   *\r\n   * @param {object} req request object\r\n   *\r\n   * @param {object} res response object\r\n   *\r\n   * @param {object} next passes control to the  next middleware\r\n   *\r\n   * @returns {object} returns a response containing the user object\r\n   * \r\n   * @memberof AdminController\r\n   */\r\n  async approveVoterParty(req, res, next) {\r\n    const { uuid } = req.userData;\r\n    const { party_uuid: partyUuid } = req.params;\r\n    const { status } = req.body;\r\n    try {\r\n      const { role: adminRequester } = await UserRepository.getOne({ uuid });\r\n      const { admin_uuid: partyAdmin } = await PartyRepository.getOne({ uuid: partyUuid });\r\n      if (!partyAdmin) return sendErrorResponse(res, 404, `Party with ID ${partyUuid} does not exist`); \r\n      if (adminRequester !== 'Party Administrator' && partyAdmin !== uuid) return sendErrorResponse(res, 401, 'Only party administrator can approve party membership');\r\n      await UserPartyRepository.update({\r\n        status,\r\n      }, partyUuid);\r\n      return successResponse(res, 200, `You have succesfully ${status} a voter request to join party`); \r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description assigns permissions to role\r\n   *\r\n   * @param {object} req request object\r\n   *\r\n   * @param {object} res response object\r\n   *\r\n   * @param {object} next passes control to the  next middleware\r\n   *\r\n   * @returns {object} returns a response containing the user object\r\n   * \r\n   * @memberof AdminController\r\n   */\r\n  async approvePartyAdmin(req, res, next) {\r\n    // eslint-disable-next-line camelcase\r\n    const { admin_uuid } = req.params;\r\n    const { partyName: party_name } = req.body;\r\n    const { uuid } = req.userData;  \r\n    try {\r\n      const { role: electAdmin } = await UserRepository.getOne({ uuid });\r\n      if (electAdmin !== 'Election Administrator') return sendErrorResponse(res, 401, 'Only Election Adminstrator can approve admin for parties'); \r\n      const { role: partyAdmin } = await UserRepository.getOne({ uuid: admin_uuid });\r\n      if (partyAdmin !== 'Party Administrator') return sendErrorResponse(res, 401, 'Only Party Adminstrator can be admin for parties'); \r\n      const party = await PartyRepository.getOne({ party_name });\r\n      if (!party) return sendErrorResponse(res, 404, `${party_name} does not exist`);\r\n      await PartyRepository.update({\r\n        admin_uuid,\r\n      }, party_name);\r\n      return sendSuccessResponse(res, 200, `Party admin has been assigned to ${party_name}`);\r\n    } catch (error) {\r\n      return next(error);\r\n    } \r\n  }\r\n\r\n  /**\r\n   * @description assigns permissions to role\r\n   *\r\n   * @param {object} req request object\r\n   *\r\n   * @param {object} res response object\r\n   *\r\n   * @param {object} next passes control to the  next middleware\r\n   *\r\n   * @returns {object} returns a response containing the user object\r\n   * \r\n   * @memberof AdminController\r\n   */\r\n  async approveCandidacy(req, res, next) {\r\n    const { uuid } = req.userData;\r\n    const { candidacy_uuid: candidacyUuid } = req.params;\r\n    // const { status } = req.body;\r\n    try {\r\n      const { role: partyAdminRole, uuid: userId } = await UserRepository.getOne({ uuid });\r\n      if (!partyAdminRole) sendErrorResponse(res, 401, 'You are not authorize to approve a party');\r\n      const { uuid: partyUuid } = PartyRepository.getOne({ admin_uuid: userId });\r\n      const test = await PartyRepository.findAll(partyUuid);\r\n      console.log('TEST', test);\r\n\r\n      const { party_uuid } = await CandidateRepository.getOne({ candidacyUuid });\r\n      if (party_uuid !== partyUuid) return sendErrorResponse(res, 400, 'You are not authorize to approve a party');\r\n\r\n      if (partyAdminRole !== 'Party Administrator' && uuid !== partyUuid) return sendErrorResponse(res, 401, 'Only a political party can approve candidacy');     \r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description assigns permissions to role\r\n   *\r\n   * @param {object} req request object\r\n   *\r\n   * @param {object} res response object\r\n   *\r\n   * @param {object} next passes control to the  next middleware\r\n   *\r\n   * @returns {object} returns a response containing the user object\r\n   * \r\n   * @memberof AdminController\r\n   */\r\n  async approveParty(req, res, next) {\r\n    const { party_uuid } = req.params;\r\n    const { uuid } = req.userData;\r\n    const { status } = req.body;\r\n    try {\r\n      const { role: electAdmin } = await UserRepository.getOne({ uuid });\r\n      if (!electAdmin) sendErrorResponse(res, 401, 'You are not authorize to approve a party');\r\n      const party = await PartyRepository.getOne({ party_uuid });\r\n      if (!party) sendErrorResponse(res, 404, 'party can not be found');\r\n      await PartyRepository.update({ status }, party_uuid);\r\n      return sendSuccessResponse(res, 200, `Party has been ${status}`);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AdminController();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579120415112
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\\\\CandidateRepository.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\CandidateRepository.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\CandidateRepository.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\CandidateRepository.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
        "sourceFileName": "CandidateRepository.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable require-jsdoc */\n\n/**\r\n * @fileoverview Contains the User Party Repository class, an interface for querying User table\r\n *\r\n * @author TheJust\r\n *\r\n * @requires models/candidate.js\r\n */\nvar candidate = _models[\"default\"].candidate,\n    party = _models[\"default\"].party;\n/**\r\n * @class\r\n */\n\nvar CandidateRepository =\n/*#__PURE__*/\nfunction () {\n  /**\r\n    * @description constructor handles the user model\r\n    *\r\n    * candidate model constructor\r\n    *\r\n    * @constructor\r\n    *\r\n    */\n  function CandidateRepository() {\n    (0, _classCallCheck2[\"default\"])(this, CandidateRepository);\n    this.db = candidate;\n  }\n  /**\r\n   * @description  Creates a candidate\r\n   * \r\n   * @param field describes the object keys and values to be created\r\n   * \r\n   * @returns the created field data\r\n   */\n\n\n  (0, _createClass2[\"default\"])(CandidateRepository, [{\n    key: \"create\",\n    value: function () {\n      var _create = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee() {\n        var field,\n            _args = arguments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                field = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n                _context.prev = 1;\n                _context.next = 4;\n                return this.db.create(field);\n\n              case 4:\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                throw new Error(_context.t0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 6]]);\n      }));\n\n      function create() {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n    /**\r\n     * \r\n     * @param {string} changes\r\n     * \r\n     * @param \r\n     */\n\n  }, {\n    key: \"findAll\",\n    value: function () {\n      var _findAll = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(modelvalue) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                return _context2.abrupt(\"return\", this.db.findAll({\n                  include: [{\n                    model: party,\n                    where: {\n                      uuid: _sequelize[\"default\"].col(\"\".concat(this.db, \".\").concat(modelvalue))\n                    }\n                  }]\n                }));\n\n              case 4:\n                _context2.prev = 4;\n                _context2.t0 = _context2[\"catch\"](0);\n                throw new _context2.t0(_context2.t0);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 4]]);\n      }));\n\n      function findAll(_x) {\n        return _findAll.apply(this, arguments);\n      }\n\n      return findAll;\n    }()\n  }]);\n  return CandidateRepository;\n}();\n\nvar _default = new CandidateRepository();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhbmRpZGF0ZVJlcG9zaXRvcnkuanMiXSwibmFtZXMiOlsiY2FuZGlkYXRlIiwibW9kZWwiLCJwYXJ0eSIsIkNhbmRpZGF0ZVJlcG9zaXRvcnkiLCJkYiIsImZpZWxkIiwiY3JlYXRlIiwiRXJyb3IiLCJtb2RlbHZhbHVlIiwiZmluZEFsbCIsImluY2x1ZGUiLCJ3aGVyZSIsInV1aWQiLCJTZXF1ZWxpemUiLCJjb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBV0E7O0FBQ0E7O0FBWkE7O0FBQ0E7O0FBR0E7Ozs7Ozs7SUFVUUEsUyxHQUFxQkMsa0IsQ0FBckJELFM7SUFBV0UsSyxHQUFVRCxrQixDQUFWQyxLO0FBRW5COzs7O0lBSU1DLG1COzs7QUFDSjs7Ozs7Ozs7QUFRQSxpQ0FBYztBQUFBO0FBQ1osU0FBS0MsRUFBTCxHQUFVSixTQUFWO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT2FLLGdCQUFBQSxLLDJEQUFRLEU7Ozt1QkFFWCxLQUFLRCxFQUFMLENBQVFFLE1BQVIsQ0FBZUQsS0FBZixDOzs7Ozs7Ozs7c0JBRUEsSUFBSUUsS0FBSixhOzs7Ozs7Ozs7Ozs7Ozs7O0FBSVY7Ozs7Ozs7Ozs7OztxREFNY0MsVTs7Ozs7O2tEQUVILEtBQUtKLEVBQUwsQ0FBUUssT0FBUixDQUFnQjtBQUNyQkMsa0JBQUFBLE9BQU8sRUFBRSxDQUFDO0FBQ1JULG9CQUFBQSxLQUFLLEVBQUVDLEtBREM7QUFFUlMsb0JBQUFBLEtBQUssRUFBRTtBQUFFQyxzQkFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsR0FBVixXQUFpQixLQUFLVixFQUF0QixjQUE0QkksVUFBNUI7QUFBUjtBQUZDLG1CQUFEO0FBRFksaUJBQWhCLEM7Ozs7O3NCQU9ELDhCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUtHLElBQUlMLG1CQUFKLEUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXHJlcG9zaXRvcmllcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHZhbGlkLWpzZG9jICovXHJcbi8qIGVzbGludC1kaXNhYmxlIHJlcXVpcmUtanNkb2MgKi9cclxuXHJcblxyXG4vKipcclxuICogQGZpbGVvdmVydmlldyBDb250YWlucyB0aGUgVXNlciBQYXJ0eSBSZXBvc2l0b3J5IGNsYXNzLCBhbiBpbnRlcmZhY2UgZm9yIHF1ZXJ5aW5nIFVzZXIgdGFibGVcclxuICpcclxuICogQGF1dGhvciBUaGVKdXN0XHJcbiAqXHJcbiAqIEByZXF1aXJlcyBtb2RlbHMvY2FuZGlkYXRlLmpzXHJcbiAqL1xyXG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCBtb2RlbCBmcm9tICcuLi9tb2RlbHMnO1xyXG5cclxuY29uc3QgeyBjYW5kaWRhdGUsIHBhcnR5IH0gPSBtb2RlbDtcclxuXHJcbi8qKlxyXG4gKiBAY2xhc3NcclxuICovXHJcblxyXG5jbGFzcyBDYW5kaWRhdGVSZXBvc2l0b3J5IHtcclxuICAvKipcclxuICAgICogQGRlc2NyaXB0aW9uIGNvbnN0cnVjdG9yIGhhbmRsZXMgdGhlIHVzZXIgbW9kZWxcclxuICAgICpcclxuICAgICogY2FuZGlkYXRlIG1vZGVsIGNvbnN0cnVjdG9yXHJcbiAgICAqXHJcbiAgICAqIEBjb25zdHJ1Y3RvclxyXG4gICAgKlxyXG4gICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuZGIgPSBjYW5kaWRhdGU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiAgQ3JlYXRlcyBhIGNhbmRpZGF0ZVxyXG4gICAqIFxyXG4gICAqIEBwYXJhbSBmaWVsZCBkZXNjcmliZXMgdGhlIG9iamVjdCBrZXlzIGFuZCB2YWx1ZXMgdG8gYmUgY3JlYXRlZFxyXG4gICAqIFxyXG4gICAqIEByZXR1cm5zIHRoZSBjcmVhdGVkIGZpZWxkIGRhdGFcclxuICAgKi9cclxuICBhc3luYyBjcmVhdGUoZmllbGQgPSB7fSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgdGhpcy5kYi5jcmVhdGUoZmllbGQpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjaGFuZ2VzXHJcbiAgICogXHJcbiAgICogQHBhcmFtIFxyXG4gICAqL1xyXG4gIGFzeW5jIGZpbmRBbGwobW9kZWx2YWx1ZSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIHRoaXMuZGIuZmluZEFsbCh7XHJcbiAgICAgICAgaW5jbHVkZTogW3tcclxuICAgICAgICAgIG1vZGVsOiBwYXJ0eSxcclxuICAgICAgICAgIHdoZXJlOiB7IHV1aWQ6IFNlcXVlbGl6ZS5jb2woYCR7dGhpcy5kYn0uJHttb2RlbHZhbHVlfWApIH1cclxuICAgICAgICB9XVxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IG5ldyBlcnJvcihlcnJvcik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQ2FuZGlkYXRlUmVwb3NpdG9yeSgpO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "CandidateRepository.js"
      ],
      "names": [
        "candidate",
        "model",
        "party",
        "CandidateRepository",
        "db",
        "field",
        "create",
        "Error",
        "modelvalue",
        "findAll",
        "include",
        "where",
        "uuid",
        "Sequelize",
        "col"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAWA;;AACA;;AAZA;;AACA;;AAGA;;;;;;;IAUQA,S,GAAqBC,kB,CAArBD,S;IAAWE,K,GAAUD,kB,CAAVC,K;AAEnB;;;;IAIMC,mB;;;AACJ;;;;;;;;AAQA,iCAAc;AAAA;AACZ,SAAKC,EAAL,GAAUJ,SAAV;AACD;AAED;;;;;;;;;;;;;;;;;;;;;AAOaK,gBAAAA,K,2DAAQ,E;;;uBAEX,KAAKD,EAAL,CAAQE,MAAR,CAAeD,KAAf,C;;;;;;;;;sBAEA,IAAIE,KAAJ,a;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;qDAMcC,U;;;;;;kDAEH,KAAKJ,EAAL,CAAQK,OAAR,CAAgB;AACrBC,kBAAAA,OAAO,EAAE,CAAC;AACRT,oBAAAA,KAAK,EAAEC,KADC;AAERS,oBAAAA,KAAK,EAAE;AAAEC,sBAAAA,IAAI,EAAEC,sBAAUC,GAAV,WAAiB,KAAKV,EAAtB,cAA4BI,UAA5B;AAAR;AAFC,mBAAD;AADY,iBAAhB,C;;;;;sBAOD,8B;;;;;;;;;;;;;;;;;;;;eAKG,IAAIL,mBAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "sourcesContent": [
        "/* eslint-disable valid-jsdoc */\r\n/* eslint-disable require-jsdoc */\r\n\r\n\r\n/**\r\n * @fileoverview Contains the User Party Repository class, an interface for querying User table\r\n *\r\n * @author TheJust\r\n *\r\n * @requires models/candidate.js\r\n */\r\nimport Sequelize from 'sequelize';\r\nimport model from '../models';\r\n\r\nconst { candidate, party } = model;\r\n\r\n/**\r\n * @class\r\n */\r\n\r\nclass CandidateRepository {\r\n  /**\r\n    * @description constructor handles the user model\r\n    *\r\n    * candidate model constructor\r\n    *\r\n    * @constructor\r\n    *\r\n    */\r\n  constructor() {\r\n    this.db = candidate;\r\n  }\r\n  \r\n  /**\r\n   * @description  Creates a candidate\r\n   * \r\n   * @param field describes the object keys and values to be created\r\n   * \r\n   * @returns the created field data\r\n   */\r\n  async create(field = {}) {\r\n    try {\r\n      await this.db.create(field);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} changes\r\n   * \r\n   * @param \r\n   */\r\n  async findAll(modelvalue) {\r\n    try {\r\n      return this.db.findAll({\r\n        include: [{\r\n          model: party,\r\n          where: { uuid: Sequelize.col(`${this.db}.${modelvalue}`) }\r\n        }]\r\n      });\r\n    } catch (error) {\r\n      throw new error(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new CandidateRepository();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579098259932
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\\\\PartyRepository.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\PartyRepository.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\PartyRepository.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\PartyRepository.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
        "sourceFileName": "PartyRepository.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable require-jsdoc */\n\n/**\r\n * @fileoverview Contains the User Party Repository class, an interface for querying User table\r\n *\r\n * @author TheJust\r\n *\r\n * @requires models/Party.js\r\n */\n// import CandidateRepository from './CandidateRepository';\nvar party = _models[\"default\"].party,\n    candidate = _models[\"default\"].candidate;\n/**\r\n * @class\r\n */\n\nvar PartyRepository =\n/*#__PURE__*/\nfunction () {\n  /**\r\n    * @description constructor handles the user model\r\n    *\r\n    * Party model constructor\r\n    *\r\n    * @constructor\r\n    *\r\n    */\n  function PartyRepository() {\n    (0, _classCallCheck2[\"default\"])(this, PartyRepository);\n    this.db = party;\n  }\n  /**\r\n   * @description Returns party details based on the provided parameters\r\n   *\r\n   * @param {Object} condition checks required party parameter\r\n   *\r\n   * @param {Object} include adds party \r\n   *\r\n   * @return {Object} returns party details \r\n   */\n\n\n  (0, _createClass2[\"default\"])(PartyRepository, [{\n    key: \"getOne\",\n    value: function () {\n      var _getOne = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee() {\n        var condition,\n            include,\n            _args = arguments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                condition = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n                include = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n                _context.prev = 2;\n                _context.next = 5;\n                return this.db.findOne({\n                  where: condition,\n                  include: include\n                });\n\n              case 5:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                throw new Error(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 8]]);\n      }));\n\n      function getOne() {\n        return _getOne.apply(this, arguments);\n      }\n\n      return getOne;\n    }()\n    /**\r\n     * @description  Creates a party\r\n     * \r\n     * @param field describes the object keys and values to be created\r\n     * \r\n     * @returns the created field data\r\n     */\n\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2() {\n        var field,\n            _args2 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                field = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this.db.create(field);\n\n              case 4:\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](1);\n                throw new Error(_context2.t0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 6]]);\n      }));\n\n      function create() {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n    /**\r\n     *\r\n     * @param {string} changes\r\n     *\r\n     * @param {object} partyName to update for user\r\n     *\r\n     * @returns {object} updated user\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3() {\n        var changes,\n            partyName,\n            _args3 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                changes = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n                partyName = _args3.length > 1 ? _args3[1] : undefined;\n                _context3.prev = 2;\n                _context3.next = 5;\n                return this.getOne({\n                  party_name: partyName\n                });\n\n              case 5:\n                _context3.next = 7;\n                return this.db.update(changes, {\n                  where: {\n                    party_name: partyName\n                  }\n                });\n\n              case 7:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](2);\n                throw new Error(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 10]]);\n      }));\n\n      function update() {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n    /**\r\n     * \r\n     * @param {string} changes\r\n     * \r\n     * @param \r\n     */\n\n  }, {\n    key: \"findAll\",\n    value: function () {\n      var _findAll = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(modelvalue) {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                return _context4.abrupt(\"return\", this.db.findAll({\n                  include: [{\n                    model: candidate,\n                    where: {\n                      uuid: _sequelize[\"default\"].col(\"\".concat(this.db, \".\").concat(modelvalue))\n                    }\n                  }]\n                }));\n\n              case 4:\n                _context4.prev = 4;\n                _context4.t0 = _context4[\"catch\"](0);\n                throw new _context4.t0(_context4.t0);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 4]]);\n      }));\n\n      function findAll(_x) {\n        return _findAll.apply(this, arguments);\n      }\n\n      return findAll;\n    }()\n  }]);\n  return PartyRepository;\n}();\n\nvar _default = new PartyRepository();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhcnR5UmVwb3NpdG9yeS5qcyJdLCJuYW1lcyI6WyJwYXJ0eSIsIm1vZGVsIiwiY2FuZGlkYXRlIiwiUGFydHlSZXBvc2l0b3J5IiwiZGIiLCJjb25kaXRpb24iLCJpbmNsdWRlIiwiZmluZE9uZSIsIndoZXJlIiwiRXJyb3IiLCJmaWVsZCIsImNyZWF0ZSIsImNoYW5nZXMiLCJwYXJ0eU5hbWUiLCJnZXRPbmUiLCJwYXJ0eV9uYW1lIiwidXBkYXRlIiwibW9kZWx2YWx1ZSIsImZpbmRBbGwiLCJ1dWlkIiwiU2VxdWVsaXplIiwiY29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQVVBOztBQUNBOztBQVhBOztBQUNBOztBQUVBOzs7Ozs7O0FBU0E7SUFFUUEsSyxHQUFxQkMsa0IsQ0FBckJELEs7SUFBT0UsUyxHQUFjRCxrQixDQUFkQyxTO0FBRWY7Ozs7SUFJTUMsZTs7O0FBQ0o7Ozs7Ozs7O0FBUUEsNkJBQWM7QUFBQTtBQUNaLFNBQUtDLEVBQUwsR0FBVUosS0FBVjtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNhSyxnQkFBQUEsUywyREFBWSxFO0FBQUlDLGdCQUFBQSxPLDJEQUFVLEU7Ozt1QkFFdEIsS0FBS0YsRUFBTCxDQUFRRyxPQUFSLENBQWdCO0FBQUVDLGtCQUFBQSxLQUFLLEVBQUVILFNBQVQ7QUFBb0JDLGtCQUFBQSxPQUFPLEVBQVBBO0FBQXBCLGlCQUFoQixDOzs7Ozs7OztzQkFFUCxJQUFJRyxLQUFKLGE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJVjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPYUMsZ0JBQUFBLEssOERBQVEsRTs7O3VCQUVYLEtBQUtOLEVBQUwsQ0FBUU8sTUFBUixDQUFlRCxLQUFmLEM7Ozs7Ozs7OztzQkFFQSxJQUFJRCxLQUFKLGM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJVjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVFhRyxnQkFBQUEsTyw4REFBVSxFO0FBQUlDLGdCQUFBQSxTOzs7dUJBRWpCLEtBQUtDLE1BQUwsQ0FBWTtBQUFFQyxrQkFBQUEsVUFBVSxFQUFFRjtBQUFkLGlCQUFaLEM7Ozs7dUJBQ08sS0FBS1QsRUFBTCxDQUFRWSxNQUFSLENBQWVKLE9BQWYsRUFBd0I7QUFBRUosa0JBQUFBLEtBQUssRUFBRTtBQUFFTyxvQkFBQUEsVUFBVSxFQUFFRjtBQUFkO0FBQVQsaUJBQXhCLEM7Ozs7Ozs7O3NCQUVQLElBQUlKLEtBQUosYzs7Ozs7Ozs7Ozs7Ozs7OztBQUlWOzs7Ozs7Ozs7Ozs7cURBTWNRLFU7Ozs7OztrREFFSCxLQUFLYixFQUFMLENBQVFjLE9BQVIsQ0FBZ0I7QUFDckJaLGtCQUFBQSxPQUFPLEVBQUUsQ0FBQztBQUNSTCxvQkFBQUEsS0FBSyxFQUFFQyxTQURDO0FBRVJNLG9CQUFBQSxLQUFLLEVBQUU7QUFBRVcsc0JBQUFBLElBQUksRUFBRUMsc0JBQVVDLEdBQVYsV0FBaUIsS0FBS2pCLEVBQXRCLGNBQTRCYSxVQUE1QjtBQUFSO0FBRkMsbUJBQUQ7QUFEWSxpQkFBaEIsQzs7Ozs7c0JBT0QsOEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBS0csSUFBSWQsZUFBSixFIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFxyZXBvc2l0b3JpZXMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSB2YWxpZC1qc2RvYyAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSByZXF1aXJlLWpzZG9jICovXHJcblxyXG4vKipcclxuICogQGZpbGVvdmVydmlldyBDb250YWlucyB0aGUgVXNlciBQYXJ0eSBSZXBvc2l0b3J5IGNsYXNzLCBhbiBpbnRlcmZhY2UgZm9yIHF1ZXJ5aW5nIFVzZXIgdGFibGVcclxuICpcclxuICogQGF1dGhvciBUaGVKdXN0XHJcbiAqXHJcbiAqIEByZXF1aXJlcyBtb2RlbHMvUGFydHkuanNcclxuICovXHJcbmltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IG1vZGVsIGZyb20gJy4uL21vZGVscyc7XHJcbi8vIGltcG9ydCBDYW5kaWRhdGVSZXBvc2l0b3J5IGZyb20gJy4vQ2FuZGlkYXRlUmVwb3NpdG9yeSc7XHJcblxyXG5jb25zdCB7IHBhcnR5LCBjYW5kaWRhdGUgfSA9IG1vZGVsO1xyXG5cclxuLyoqXHJcbiAqIEBjbGFzc1xyXG4gKi9cclxuXHJcbmNsYXNzIFBhcnR5UmVwb3NpdG9yeSB7XHJcbiAgLyoqXHJcbiAgICAqIEBkZXNjcmlwdGlvbiBjb25zdHJ1Y3RvciBoYW5kbGVzIHRoZSB1c2VyIG1vZGVsXHJcbiAgICAqXHJcbiAgICAqIFBhcnR5IG1vZGVsIGNvbnN0cnVjdG9yXHJcbiAgICAqXHJcbiAgICAqIEBjb25zdHJ1Y3RvclxyXG4gICAgKlxyXG4gICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuZGIgPSBwYXJ0eTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiBSZXR1cm5zIHBhcnR5IGRldGFpbHMgYmFzZWQgb24gdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjb25kaXRpb24gY2hlY2tzIHJlcXVpcmVkIHBhcnR5IHBhcmFtZXRlclxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IGluY2x1ZGUgYWRkcyBwYXJ0eSBcclxuICAgKlxyXG4gICAqIEByZXR1cm4ge09iamVjdH0gcmV0dXJucyBwYXJ0eSBkZXRhaWxzIFxyXG4gICAqL1xyXG4gIGFzeW5jIGdldE9uZShjb25kaXRpb24gPSB7fSwgaW5jbHVkZSA9ICcnKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5kYi5maW5kT25lKHsgd2hlcmU6IGNvbmRpdGlvbiwgaW5jbHVkZSB9KTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24gIENyZWF0ZXMgYSBwYXJ0eVxyXG4gICAqIFxyXG4gICAqIEBwYXJhbSBmaWVsZCBkZXNjcmliZXMgdGhlIG9iamVjdCBrZXlzIGFuZCB2YWx1ZXMgdG8gYmUgY3JlYXRlZFxyXG4gICAqIFxyXG4gICAqIEByZXR1cm5zIHRoZSBjcmVhdGVkIGZpZWxkIGRhdGFcclxuICAgKi9cclxuICBhc3luYyBjcmVhdGUoZmllbGQgPSB7fSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgdGhpcy5kYi5jcmVhdGUoZmllbGQpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNoYW5nZXNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwYXJ0eU5hbWUgdG8gdXBkYXRlIGZvciB1c2VyXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSB1cGRhdGVkIHVzZXJcclxuICAgKi9cclxuICBhc3luYyB1cGRhdGUoY2hhbmdlcyA9IHt9LCBwYXJ0eU5hbWUpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGF3YWl0IHRoaXMuZ2V0T25lKHsgcGFydHlfbmFtZTogcGFydHlOYW1lIH0pO1xyXG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5kYi51cGRhdGUoY2hhbmdlcywgeyB3aGVyZTogeyBwYXJ0eV9uYW1lOiBwYXJ0eU5hbWUgfSB9KTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNoYW5nZXNcclxuICAgKiBcclxuICAgKiBAcGFyYW0gXHJcbiAgICovXHJcbiAgYXN5bmMgZmluZEFsbChtb2RlbHZhbHVlKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICByZXR1cm4gdGhpcy5kYi5maW5kQWxsKHtcclxuICAgICAgICBpbmNsdWRlOiBbe1xyXG4gICAgICAgICAgbW9kZWw6IGNhbmRpZGF0ZSxcclxuICAgICAgICAgIHdoZXJlOiB7IHV1aWQ6IFNlcXVlbGl6ZS5jb2woYCR7dGhpcy5kYn0uJHttb2RlbHZhbHVlfWApIH1cclxuICAgICAgICB9XVxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRocm93IG5ldyBlcnJvcihlcnJvcik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgUGFydHlSZXBvc2l0b3J5KCk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "PartyRepository.js"
      ],
      "names": [
        "party",
        "model",
        "candidate",
        "PartyRepository",
        "db",
        "condition",
        "include",
        "findOne",
        "where",
        "Error",
        "field",
        "create",
        "changes",
        "partyName",
        "getOne",
        "party_name",
        "update",
        "modelvalue",
        "findAll",
        "uuid",
        "Sequelize",
        "col"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAUA;;AACA;;AAXA;;AACA;;AAEA;;;;;;;AASA;IAEQA,K,GAAqBC,kB,CAArBD,K;IAAOE,S,GAAcD,kB,CAAdC,S;AAEf;;;;IAIMC,e;;;AACJ;;;;;;;;AAQA,6BAAc;AAAA;AACZ,SAAKC,EAAL,GAAUJ,KAAV;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;AASaK,gBAAAA,S,2DAAY,E;AAAIC,gBAAAA,O,2DAAU,E;;;uBAEtB,KAAKF,EAAL,CAAQG,OAAR,CAAgB;AAAEC,kBAAAA,KAAK,EAAEH,SAAT;AAAoBC,kBAAAA,OAAO,EAAPA;AAApB,iBAAhB,C;;;;;;;;sBAEP,IAAIG,KAAJ,a;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;;;;AAOaC,gBAAAA,K,8DAAQ,E;;;uBAEX,KAAKN,EAAL,CAAQO,MAAR,CAAeD,KAAf,C;;;;;;;;;sBAEA,IAAID,KAAJ,c;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;;;;;;AAQaG,gBAAAA,O,8DAAU,E;AAAIC,gBAAAA,S;;;uBAEjB,KAAKC,MAAL,CAAY;AAAEC,kBAAAA,UAAU,EAAEF;AAAd,iBAAZ,C;;;;uBACO,KAAKT,EAAL,CAAQY,MAAR,CAAeJ,OAAf,EAAwB;AAAEJ,kBAAAA,KAAK,EAAE;AAAEO,oBAAAA,UAAU,EAAEF;AAAd;AAAT,iBAAxB,C;;;;;;;;sBAEP,IAAIJ,KAAJ,c;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;qDAMcQ,U;;;;;;kDAEH,KAAKb,EAAL,CAAQc,OAAR,CAAgB;AACrBZ,kBAAAA,OAAO,EAAE,CAAC;AACRL,oBAAAA,KAAK,EAAEC,SADC;AAERM,oBAAAA,KAAK,EAAE;AAAEW,sBAAAA,IAAI,EAAEC,sBAAUC,GAAV,WAAiB,KAAKjB,EAAtB,cAA4Ba,UAA5B;AAAR;AAFC,mBAAD;AADY,iBAAhB,C;;;;;sBAOD,8B;;;;;;;;;;;;;;;;;;;;eAKG,IAAId,eAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "sourcesContent": [
        "/* eslint-disable valid-jsdoc */\r\n/* eslint-disable require-jsdoc */\r\n\r\n/**\r\n * @fileoverview Contains the User Party Repository class, an interface for querying User table\r\n *\r\n * @author TheJust\r\n *\r\n * @requires models/Party.js\r\n */\r\nimport Sequelize from 'sequelize';\r\nimport model from '../models';\r\n// import CandidateRepository from './CandidateRepository';\r\n\r\nconst { party, candidate } = model;\r\n\r\n/**\r\n * @class\r\n */\r\n\r\nclass PartyRepository {\r\n  /**\r\n    * @description constructor handles the user model\r\n    *\r\n    * Party model constructor\r\n    *\r\n    * @constructor\r\n    *\r\n    */\r\n  constructor() {\r\n    this.db = party;\r\n  }\r\n\r\n  /**\r\n   * @description Returns party details based on the provided parameters\r\n   *\r\n   * @param {Object} condition checks required party parameter\r\n   *\r\n   * @param {Object} include adds party \r\n   *\r\n   * @return {Object} returns party details \r\n   */\r\n  async getOne(condition = {}, include = '') {\r\n    try {\r\n      return await this.db.findOne({ where: condition, include });\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * @description  Creates a party\r\n   * \r\n   * @param field describes the object keys and values to be created\r\n   * \r\n   * @returns the created field data\r\n   */\r\n  async create(field = {}) {\r\n    try {\r\n      await this.db.create(field);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} changes\r\n   *\r\n   * @param {object} partyName to update for user\r\n   *\r\n   * @returns {object} updated user\r\n   */\r\n  async update(changes = {}, partyName) {\r\n    try {\r\n      await this.getOne({ party_name: partyName });\r\n      return await this.db.update(changes, { where: { party_name: partyName } });\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} changes\r\n   * \r\n   * @param \r\n   */\r\n  async findAll(modelvalue) {\r\n    try {\r\n      return this.db.findAll({\r\n        include: [{\r\n          model: candidate,\r\n          where: { uuid: Sequelize.col(`${this.db}.${modelvalue}`) }\r\n        }]\r\n      });\r\n    } catch (error) {\r\n      throw new error(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new PartyRepository();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579114864848
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\repositories\\\\UserPartyRepository.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\UserPartyRepository.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\UserPartyRepository.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories\\UserPartyRepository.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
        "sourceFileName": "UserPartyRepository.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable require-jsdoc */\n\n/**\r\n * @fileoverview Contains the User Party Repository class, an interface for querying User table\r\n *\r\n * @author TheJust\r\n *\r\n * @requires models/Party.js\r\n */\n// import CandidateRepository from './CandidateRepository';\nvar userParty = _models[\"default\"].user_party;\n/**\r\n * @class\r\n */\n\nvar UserPartyRepository =\n/*#__PURE__*/\nfunction () {\n  /**\r\n    * @description constructor handles the user model\r\n    *\r\n    * Party model constructor\r\n    *\r\n    * @constructor\r\n    *\r\n    */\n  function UserPartyRepository() {\n    (0, _classCallCheck2[\"default\"])(this, UserPartyRepository);\n    this.db = userParty;\n  }\n  /**\r\n  * @description Creates a user party account with provided details\r\n  *\r\n  * @param {Object} content users details\r\n  *\r\n  * @return {Object} returns new user details\r\n  */\n\n\n  (0, _createClass2[\"default\"])(UserPartyRepository, [{\n    key: \"create\",\n    value: function () {\n      var _create = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee() {\n        var field,\n            _args = arguments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                field = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n                _context.prev = 1;\n                _context.next = 4;\n                return this.db.create(field);\n\n              case 4:\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                throw new Error(_context.t0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 6]]);\n      }));\n\n      function create() {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n    /**\r\n     *\r\n     * @param {string} changes\r\n     *\r\n     * @param {object} partyUuid to update for user\r\n     *\r\n     * @returns {object} updated user\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2() {\n        var changes,\n            partyUuid,\n            _args2 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                changes = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n                partyUuid = _args2.length > 1 ? _args2[1] : undefined;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return this.getOne({\n                  party_uuid: partyUuid\n                });\n\n              case 5:\n                _context2.next = 7;\n                return this.db.update(changes, {\n                  where: {\n                    party_uuid: partyUuid\n                  }\n                });\n\n              case 7:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                throw new Error(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 10]]);\n      }));\n\n      function update() {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }]);\n  return UserPartyRepository;\n}();\n\nvar _default = new UserPartyRepository();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJQYXJ0eVJlcG9zaXRvcnkuanMiXSwibmFtZXMiOlsidXNlclBhcnR5IiwibW9kZWwiLCJ1c2VyX3BhcnR5IiwiVXNlclBhcnR5UmVwb3NpdG9yeSIsImRiIiwiZmllbGQiLCJjcmVhdGUiLCJFcnJvciIsImNoYW5nZXMiLCJwYXJ0eVV1aWQiLCJnZXRPbmUiLCJwYXJ0eV91dWlkIiwidXBkYXRlIiwid2hlcmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVUE7O0FBVkE7O0FBQ0E7O0FBRUE7Ozs7Ozs7QUFRQTtJQUVvQkEsUyxHQUFjQyxrQixDQUExQkMsVTtBQUVSOzs7O0lBSU1DLG1COzs7QUFDSjs7Ozs7Ozs7QUFRQSxpQ0FBYztBQUFBO0FBQ1osU0FBS0MsRUFBTCxHQUFVSixTQUFWO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT2FLLGdCQUFBQSxLLDJEQUFRLEU7Ozt1QkFFWCxLQUFLRCxFQUFMLENBQVFFLE1BQVIsQ0FBZUQsS0FBZixDOzs7Ozs7Ozs7c0JBRUEsSUFBSUUsS0FBSixhOzs7Ozs7Ozs7Ozs7Ozs7O0FBSVY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRYUMsZ0JBQUFBLE8sOERBQVUsRTtBQUFJQyxnQkFBQUEsUzs7O3VCQUVqQixLQUFLQyxNQUFMLENBQVk7QUFBRUMsa0JBQUFBLFVBQVUsRUFBRUY7QUFBZCxpQkFBWixDOzs7O3VCQUNPLEtBQUtMLEVBQUwsQ0FBUVEsTUFBUixDQUFlSixPQUFmLEVBQXdCO0FBQUVLLGtCQUFBQSxLQUFLLEVBQUU7QUFBRUYsb0JBQUFBLFVBQVUsRUFBRUY7QUFBZDtBQUFULGlCQUF4QixDOzs7Ozs7OztzQkFFUCxJQUFJRixLQUFKLGM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBS0csSUFBSUosbUJBQUosRSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xccmVwb3NpdG9yaWVzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgdmFsaWQtanNkb2MgKi9cclxuLyogZXNsaW50LWRpc2FibGUgcmVxdWlyZS1qc2RvYyAqL1xyXG5cclxuLyoqXHJcbiAqIEBmaWxlb3ZlcnZpZXcgQ29udGFpbnMgdGhlIFVzZXIgUGFydHkgUmVwb3NpdG9yeSBjbGFzcywgYW4gaW50ZXJmYWNlIGZvciBxdWVyeWluZyBVc2VyIHRhYmxlXHJcbiAqXHJcbiAqIEBhdXRob3IgVGhlSnVzdFxyXG4gKlxyXG4gKiBAcmVxdWlyZXMgbW9kZWxzL1BhcnR5LmpzXHJcbiAqL1xyXG5pbXBvcnQgbW9kZWwgZnJvbSAnLi4vbW9kZWxzJztcclxuLy8gaW1wb3J0IENhbmRpZGF0ZVJlcG9zaXRvcnkgZnJvbSAnLi9DYW5kaWRhdGVSZXBvc2l0b3J5JztcclxuXHJcbmNvbnN0IHsgdXNlcl9wYXJ0eTogdXNlclBhcnR5IH0gPSBtb2RlbDtcclxuXHJcbi8qKlxyXG4gKiBAY2xhc3NcclxuICovXHJcblxyXG5jbGFzcyBVc2VyUGFydHlSZXBvc2l0b3J5IHtcclxuICAvKipcclxuICAgICogQGRlc2NyaXB0aW9uIGNvbnN0cnVjdG9yIGhhbmRsZXMgdGhlIHVzZXIgbW9kZWxcclxuICAgICpcclxuICAgICogUGFydHkgbW9kZWwgY29uc3RydWN0b3JcclxuICAgICpcclxuICAgICogQGNvbnN0cnVjdG9yXHJcbiAgICAqXHJcbiAgICAqL1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5kYiA9IHVzZXJQYXJ0eTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICogQGRlc2NyaXB0aW9uIENyZWF0ZXMgYSB1c2VyIHBhcnR5IGFjY291bnQgd2l0aCBwcm92aWRlZCBkZXRhaWxzXHJcbiAgKlxyXG4gICogQHBhcmFtIHtPYmplY3R9IGNvbnRlbnQgdXNlcnMgZGV0YWlsc1xyXG4gICpcclxuICAqIEByZXR1cm4ge09iamVjdH0gcmV0dXJucyBuZXcgdXNlciBkZXRhaWxzXHJcbiAgKi9cclxuICBhc3luYyBjcmVhdGUoZmllbGQgPSB7fSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgdGhpcy5kYi5jcmVhdGUoZmllbGQpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNoYW5nZXNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwYXJ0eVV1aWQgdG8gdXBkYXRlIGZvciB1c2VyXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSB1cGRhdGVkIHVzZXJcclxuICAgKi9cclxuICBhc3luYyB1cGRhdGUoY2hhbmdlcyA9IHt9LCBwYXJ0eVV1aWQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGF3YWl0IHRoaXMuZ2V0T25lKHsgcGFydHlfdXVpZDogcGFydHlVdWlkIH0pO1xyXG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5kYi51cGRhdGUoY2hhbmdlcywgeyB3aGVyZTogeyBwYXJ0eV91dWlkOiBwYXJ0eVV1aWQgfSB9KTtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IFVzZXJQYXJ0eVJlcG9zaXRvcnkoKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "UserPartyRepository.js"
      ],
      "names": [
        "userParty",
        "model",
        "user_party",
        "UserPartyRepository",
        "db",
        "field",
        "create",
        "Error",
        "changes",
        "partyUuid",
        "getOne",
        "party_uuid",
        "update",
        "where"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAUA;;AAVA;;AACA;;AAEA;;;;;;;AAQA;IAEoBA,S,GAAcC,kB,CAA1BC,U;AAER;;;;IAIMC,mB;;;AACJ;;;;;;;;AAQA,iCAAc;AAAA;AACZ,SAAKC,EAAL,GAAUJ,SAAV;AACD;AAED;;;;;;;;;;;;;;;;;;;;;AAOaK,gBAAAA,K,2DAAQ,E;;;uBAEX,KAAKD,EAAL,CAAQE,MAAR,CAAeD,KAAf,C;;;;;;;;;sBAEA,IAAIE,KAAJ,a;;;;;;;;;;;;;;;;AAIV;;;;;;;;;;;;;;;;;;;;;;AAQaC,gBAAAA,O,8DAAU,E;AAAIC,gBAAAA,S;;;uBAEjB,KAAKC,MAAL,CAAY;AAAEC,kBAAAA,UAAU,EAAEF;AAAd,iBAAZ,C;;;;uBACO,KAAKL,EAAL,CAAQQ,MAAR,CAAeJ,OAAf,EAAwB;AAAEK,kBAAAA,KAAK,EAAE;AAAEF,oBAAAA,UAAU,EAAEF;AAAd;AAAT,iBAAxB,C;;;;;;;;sBAEP,IAAIF,KAAJ,c;;;;;;;;;;;;;;;;;;;;eAKG,IAAIJ,mBAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\repositories",
      "sourcesContent": [
        "/* eslint-disable valid-jsdoc */\r\n/* eslint-disable require-jsdoc */\r\n\r\n/**\r\n * @fileoverview Contains the User Party Repository class, an interface for querying User table\r\n *\r\n * @author TheJust\r\n *\r\n * @requires models/Party.js\r\n */\r\nimport model from '../models';\r\n// import CandidateRepository from './CandidateRepository';\r\n\r\nconst { user_party: userParty } = model;\r\n\r\n/**\r\n * @class\r\n */\r\n\r\nclass UserPartyRepository {\r\n  /**\r\n    * @description constructor handles the user model\r\n    *\r\n    * Party model constructor\r\n    *\r\n    * @constructor\r\n    *\r\n    */\r\n  constructor() {\r\n    this.db = userParty;\r\n  }\r\n\r\n  /**\r\n  * @description Creates a user party account with provided details\r\n  *\r\n  * @param {Object} content users details\r\n  *\r\n  * @return {Object} returns new user details\r\n  */\r\n  async create(field = {}) {\r\n    try {\r\n      await this.db.create(field);\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} changes\r\n   *\r\n   * @param {object} partyUuid to update for user\r\n   *\r\n   * @returns {object} updated user\r\n   */\r\n  async update(changes = {}, partyUuid) {\r\n    try {\r\n      await this.getOne({ party_uuid: partyUuid });\r\n      return await this.db.update(changes, { where: { party_uuid: partyUuid } });\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new UserPartyRepository();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579115487281
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\middlewares\\\\UserAuth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\UserAuth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\UserAuth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\UserAuth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
        "sourceFileName": "UserAuth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _validator = require(\"../modules/validator\");\n\nvar _sendResponse = require(\"../utils/sendResponse\");\n\n/**\r\n   * @description userAuth is clas that handles user data validation\r\n   */\nvar userAuth =\n/*#__PURE__*/\nfunction () {\n  function userAuth() {\n    (0, _classCallCheck2[\"default\"])(this, userAuth);\n  }\n\n  (0, _createClass2[\"default\"])(userAuth, null, [{\n    key: \"signup\",\n\n    /**\r\n       *\r\n       * @param {req} req object\r\n       *\r\n       * @param {res} res object\r\n       *\r\n       * @param {next} next forwards request to the next middleware function\r\n       *\r\n       * @returns {obj} reurns an response object\r\n       */\n    value: function signup(req, res, next) {\n      var userData = (0, _validator.magicTrimmer)(req.body);\n      var first_name = userData.firstName,\n          last_name = userData.lastName,\n          email = userData.email,\n          password = userData.password;\n      var schema = {\n        first_name: (0, _validator.inValidName)('first_name', first_name),\n        last_name: (0, _validator.inValidName)('last_name', last_name),\n        email: (0, _validator.inValidEmail)(email),\n        password: (0, _validator.inValidPassword)(password)\n      };\n      var error = (0, _validator.validate)(schema);\n      if (error) return (0, _sendResponse.sendErrorResponse)(res, 422, error);\n      req.body = userData;\n      return next();\n    }\n    /**\r\n       *\r\n       * @param {req} req object\r\n       *\r\n       * @param {res} res object\r\n       *\r\n       * @param {next} next forwards request to the next middleware function\r\n       *\r\n       * @returns {obj} reurns an response object\r\n       */\n\n  }, {\n    key: \"signin\",\n    value: function signin(req, res, next) {\n      var userInfo = (0, _validator.magicTrimmer)(req.body);\n      var email = userInfo.email,\n          password = userInfo.password;\n      var schema = {\n        email: (0, _validator.inValidEmail)(email),\n        password: (0, _validator.inValidPassword)(password)\n      };\n      var error = (0, _validator.validate)(schema);\n      if (error) return (0, _sendResponse.sendErrorResponse)(res, 422, error);\n      return next();\n    }\n  }]);\n  return userAuth;\n}();\n\nexports[\"default\"] = userAuth;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJBdXRoLmpzIl0sIm5hbWVzIjpbInVzZXJBdXRoIiwicmVxIiwicmVzIiwibmV4dCIsInVzZXJEYXRhIiwiYm9keSIsImZpcnN0X25hbWUiLCJmaXJzdE5hbWUiLCJsYXN0X25hbWUiLCJsYXN0TmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJzY2hlbWEiLCJlcnJvciIsInVzZXJJbmZvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBR0E7O0FBRUE7OztJQUdxQkEsUTs7Ozs7Ozs7OztBQUNuQjs7Ozs7Ozs7OzsyQkFVY0MsRyxFQUFLQyxHLEVBQUtDLEksRUFBTTtBQUM1QixVQUFNQyxRQUFRLEdBQUcsNkJBQWFILEdBQUcsQ0FBQ0ksSUFBakIsQ0FBakI7QUFENEIsVUFJZkMsVUFKZSxHQUt4QkYsUUFMd0IsQ0FJMUJHLFNBSjBCO0FBQUEsVUFJT0MsU0FKUCxHQUt4QkosUUFMd0IsQ0FJSEssUUFKRztBQUFBLFVBSWtCQyxLQUpsQixHQUt4Qk4sUUFMd0IsQ0FJa0JNLEtBSmxCO0FBQUEsVUFJeUJDLFFBSnpCLEdBS3hCUCxRQUx3QixDQUl5Qk8sUUFKekI7QUFNNUIsVUFBTUMsTUFBTSxHQUFHO0FBQ2JOLFFBQUFBLFVBQVUsRUFBRSw0QkFBWSxZQUFaLEVBQTBCQSxVQUExQixDQURDO0FBRWJFLFFBQUFBLFNBQVMsRUFBRSw0QkFBWSxXQUFaLEVBQXlCQSxTQUF6QixDQUZFO0FBR2JFLFFBQUFBLEtBQUssRUFBRSw2QkFBYUEsS0FBYixDQUhNO0FBSWJDLFFBQUFBLFFBQVEsRUFBRSxnQ0FBZ0JBLFFBQWhCO0FBSkcsT0FBZjtBQU9BLFVBQU1FLEtBQUssR0FBRyx5QkFBU0QsTUFBVCxDQUFkO0FBQ0EsVUFBSUMsS0FBSixFQUFXLE9BQU8scUNBQWtCWCxHQUFsQixFQUF1QixHQUF2QixFQUE0QlcsS0FBNUIsQ0FBUDtBQUNYWixNQUFBQSxHQUFHLENBQUNJLElBQUosR0FBV0QsUUFBWDtBQUNBLGFBQU9ELElBQUksRUFBWDtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7Ozs7MkJBVWNGLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFDNUIsVUFBTVcsUUFBUSxHQUFHLDZCQUFhYixHQUFHLENBQUNJLElBQWpCLENBQWpCO0FBRDRCLFVBRXBCSyxLQUZvQixHQUVBSSxRQUZBLENBRXBCSixLQUZvQjtBQUFBLFVBRWJDLFFBRmEsR0FFQUcsUUFGQSxDQUViSCxRQUZhO0FBSTVCLFVBQU1DLE1BQU0sR0FBRztBQUNiRixRQUFBQSxLQUFLLEVBQUUsNkJBQWFBLEtBQWIsQ0FETTtBQUViQyxRQUFBQSxRQUFRLEVBQUUsZ0NBQWdCQSxRQUFoQjtBQUZHLE9BQWY7QUFJQSxVQUFNRSxLQUFLLEdBQUcseUJBQVNELE1BQVQsQ0FBZDtBQUNBLFVBQUlDLEtBQUosRUFBVyxPQUFPLHFDQUFrQlgsR0FBbEIsRUFBdUIsR0FBdkIsRUFBNEJXLEtBQTVCLENBQVA7QUFDWCxhQUFPVixJQUFJLEVBQVg7QUFDRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcbWlkZGxld2FyZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIHZhbGlkYXRlLCBpblZhbGlkTmFtZSwgaW5WYWxpZEVtYWlsLCBpblZhbGlkUGFzc3dvcmQsIG1hZ2ljVHJpbW1lcixcclxufSBmcm9tICcuLi9tb2R1bGVzL3ZhbGlkYXRvcic7XHJcbmltcG9ydCB7IHNlbmRFcnJvclJlc3BvbnNlIH0gZnJvbSAnLi4vdXRpbHMvc2VuZFJlc3BvbnNlJztcclxuICBcclxuLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uIHVzZXJBdXRoIGlzIGNsYXMgdGhhdCBoYW5kbGVzIHVzZXIgZGF0YSB2YWxpZGF0aW9uXHJcbiAgICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHVzZXJBdXRoIHtcclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3JlcX0gcmVxIG9iamVjdFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7cmVzfSByZXMgb2JqZWN0XHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtuZXh0fSBuZXh0IGZvcndhcmRzIHJlcXVlc3QgdG8gdGhlIG5leHQgbWlkZGxld2FyZSBmdW5jdGlvblxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIHtvYmp9IHJldXJucyBhbiByZXNwb25zZSBvYmplY3RcclxuICAgICAqL1xyXG4gIHN0YXRpYyBzaWdudXAocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IHVzZXJEYXRhID0gbWFnaWNUcmltbWVyKHJlcS5ib2R5KTtcclxuICAgIGNvbnN0IHtcclxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxyXG4gICAgICBmaXJzdE5hbWU6IGZpcnN0X25hbWUsIGxhc3ROYW1lOiBsYXN0X25hbWUsIGVtYWlsLCBwYXNzd29yZFxyXG4gICAgfSA9IHVzZXJEYXRhO1xyXG4gICAgY29uc3Qgc2NoZW1hID0ge1xyXG4gICAgICBmaXJzdF9uYW1lOiBpblZhbGlkTmFtZSgnZmlyc3RfbmFtZScsIGZpcnN0X25hbWUpLFxyXG4gICAgICBsYXN0X25hbWU6IGluVmFsaWROYW1lKCdsYXN0X25hbWUnLCBsYXN0X25hbWUpLFxyXG4gICAgICBlbWFpbDogaW5WYWxpZEVtYWlsKGVtYWlsKSxcclxuICAgICAgcGFzc3dvcmQ6IGluVmFsaWRQYXNzd29yZChwYXNzd29yZClcclxuICAgIH07XHJcbiAgXHJcbiAgICBjb25zdCBlcnJvciA9IHZhbGlkYXRlKHNjaGVtYSk7XHJcbiAgICBpZiAoZXJyb3IpIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQyMiwgZXJyb3IpO1xyXG4gICAgcmVxLmJvZHkgPSB1c2VyRGF0YTtcclxuICAgIHJldHVybiBuZXh0KCk7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7cmVxfSByZXEgb2JqZWN0XHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtyZXN9IHJlcyBvYmplY3RcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge25leHR9IG5leHQgZm9yd2FyZHMgcmVxdWVzdCB0byB0aGUgbmV4dCBtaWRkbGV3YXJlIGZ1bmN0aW9uXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMge29ian0gcmV1cm5zIGFuIHJlc3BvbnNlIG9iamVjdFxyXG4gICAgICovXHJcbiAgc3RhdGljIHNpZ25pbihyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgY29uc3QgdXNlckluZm8gPSBtYWdpY1RyaW1tZXIocmVxLmJvZHkpO1xyXG4gICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQgfSA9IHVzZXJJbmZvO1xyXG4gIFxyXG4gICAgY29uc3Qgc2NoZW1hID0ge1xyXG4gICAgICBlbWFpbDogaW5WYWxpZEVtYWlsKGVtYWlsKSxcclxuICAgICAgcGFzc3dvcmQ6IGluVmFsaWRQYXNzd29yZChwYXNzd29yZCksXHJcbiAgICB9O1xyXG4gICAgY29uc3QgZXJyb3IgPSB2YWxpZGF0ZShzY2hlbWEpO1xyXG4gICAgaWYgKGVycm9yKSByZXR1cm4gc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MjIsIGVycm9yKTtcclxuICAgIHJldHVybiBuZXh0KCk7XHJcbiAgfVxyXG59XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "UserAuth.js"
      ],
      "names": [
        "userAuth",
        "req",
        "res",
        "next",
        "userData",
        "body",
        "first_name",
        "firstName",
        "last_name",
        "lastName",
        "email",
        "password",
        "schema",
        "error",
        "userInfo"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AAGA;;AAEA;;;IAGqBA,Q;;;;;;;;;;AACnB;;;;;;;;;;2BAUcC,G,EAAKC,G,EAAKC,I,EAAM;AAC5B,UAAMC,QAAQ,GAAG,6BAAaH,GAAG,CAACI,IAAjB,CAAjB;AAD4B,UAIfC,UAJe,GAKxBF,QALwB,CAI1BG,SAJ0B;AAAA,UAIOC,SAJP,GAKxBJ,QALwB,CAIHK,QAJG;AAAA,UAIkBC,KAJlB,GAKxBN,QALwB,CAIkBM,KAJlB;AAAA,UAIyBC,QAJzB,GAKxBP,QALwB,CAIyBO,QAJzB;AAM5B,UAAMC,MAAM,GAAG;AACbN,QAAAA,UAAU,EAAE,4BAAY,YAAZ,EAA0BA,UAA1B,CADC;AAEbE,QAAAA,SAAS,EAAE,4BAAY,WAAZ,EAAyBA,SAAzB,CAFE;AAGbE,QAAAA,KAAK,EAAE,6BAAaA,KAAb,CAHM;AAIbC,QAAAA,QAAQ,EAAE,gCAAgBA,QAAhB;AAJG,OAAf;AAOA,UAAME,KAAK,GAAG,yBAASD,MAAT,CAAd;AACA,UAAIC,KAAJ,EAAW,OAAO,qCAAkBX,GAAlB,EAAuB,GAAvB,EAA4BW,KAA5B,CAAP;AACXZ,MAAAA,GAAG,CAACI,IAAJ,GAAWD,QAAX;AACA,aAAOD,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;;2BAUcF,G,EAAKC,G,EAAKC,I,EAAM;AAC5B,UAAMW,QAAQ,GAAG,6BAAab,GAAG,CAACI,IAAjB,CAAjB;AAD4B,UAEpBK,KAFoB,GAEAI,QAFA,CAEpBJ,KAFoB;AAAA,UAEbC,QAFa,GAEAG,QAFA,CAEbH,QAFa;AAI5B,UAAMC,MAAM,GAAG;AACbF,QAAAA,KAAK,EAAE,6BAAaA,KAAb,CADM;AAEbC,QAAAA,QAAQ,EAAE,gCAAgBA,QAAhB;AAFG,OAAf;AAIA,UAAME,KAAK,GAAG,yBAASD,MAAT,CAAd;AACA,UAAIC,KAAJ,EAAW,OAAO,qCAAkBX,GAAlB,EAAuB,GAAvB,EAA4BW,KAA5B,CAAP;AACX,aAAOV,IAAI,EAAX;AACD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
      "sourcesContent": [
        "import {\r\n  validate, inValidName, inValidEmail, inValidPassword, magicTrimmer,\r\n} from '../modules/validator';\r\nimport { sendErrorResponse } from '../utils/sendResponse';\r\n  \r\n/**\r\n   * @description userAuth is clas that handles user data validation\r\n   */\r\nexport default class userAuth {\r\n  /**\r\n     *\r\n     * @param {req} req object\r\n     *\r\n     * @param {res} res object\r\n     *\r\n     * @param {next} next forwards request to the next middleware function\r\n     *\r\n     * @returns {obj} reurns an response object\r\n     */\r\n  static signup(req, res, next) {\r\n    const userData = magicTrimmer(req.body);\r\n    const {\r\n      // eslint-disable-next-line camelcase\r\n      firstName: first_name, lastName: last_name, email, password\r\n    } = userData;\r\n    const schema = {\r\n      first_name: inValidName('first_name', first_name),\r\n      last_name: inValidName('last_name', last_name),\r\n      email: inValidEmail(email),\r\n      password: inValidPassword(password)\r\n    };\r\n  \r\n    const error = validate(schema);\r\n    if (error) return sendErrorResponse(res, 422, error);\r\n    req.body = userData;\r\n    return next();\r\n  }\r\n  \r\n  /**\r\n     *\r\n     * @param {req} req object\r\n     *\r\n     * @param {res} res object\r\n     *\r\n     * @param {next} next forwards request to the next middleware function\r\n     *\r\n     * @returns {obj} reurns an response object\r\n     */\r\n  static signin(req, res, next) {\r\n    const userInfo = magicTrimmer(req.body);\r\n    const { email, password } = userInfo;\r\n  \r\n    const schema = {\r\n      email: inValidEmail(email),\r\n      password: inValidPassword(password),\r\n    };\r\n    const error = validate(schema);\r\n    if (error) return sendErrorResponse(res, 422, error);\r\n    return next();\r\n  }\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577961402505
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\middlewares\\\\AuthenticateUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\AuthenticateUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\AuthenticateUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\AuthenticateUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
        "sourceFileName": "AuthenticateUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _sendResponse = require(\"../utils/sendResponse\");\n\nvar _tokenProcessor = require(\"../modules/tokenProcessor\");\n\nvar _index = require(\"../utils/index\");\n\nvar _UserRepository = _interopRequireDefault(require(\"../repositories/UserRepository\"));\n\nvar _default =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(req, res, next) {\n    var rawToken, err, isblocked, token, _verifyToken, email, user, error;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rawToken = req.headers.authorization || req.headers['x-access-token'] || req.body.token || req.query.slt;\n            err = 'Please provide a token';\n\n            if (rawToken) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 401, err));\n\n          case 4:\n            _context.next = 6;\n            return (0, _index.isBlackListed)(rawToken);\n\n          case 6:\n            isblocked = _context.sent;\n\n            if (!isblocked) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 403, 'Unauthorized'));\n\n          case 9:\n            _context.prev = 9;\n            token = rawToken.split(' ')[1];\n            _verifyToken = (0, _tokenProcessor.verifyToken)(token), email = _verifyToken.email;\n            _context.next = 14;\n            return _UserRepository[\"default\"].getOne({\n              email: email\n            });\n\n          case 14:\n            user = _context.sent;\n\n            if (user) {\n              _context.next = 17;\n              break;\n            }\n\n            return _context.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 403, 'Unauthorized'));\n\n          case 17:\n            req.userData = user;\n            next();\n            _context.next = 25;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](9);\n            error = _context.t0.message ? 'Authentication Failed' : _context.t0;\n            (0, _sendResponse.sendErrorResponse)(res, 401, error);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 21]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dGhlbnRpY2F0ZVVzZXIuanMiXSwibmFtZXMiOlsicmVxIiwicmVzIiwibmV4dCIsInJhd1Rva2VuIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJib2R5IiwidG9rZW4iLCJxdWVyeSIsInNsdCIsImVyciIsImlzYmxvY2tlZCIsInNwbGl0IiwiZW1haWwiLCJVc2VyUmVwb3NpdG9yeSIsImdldE9uZSIsInVzZXIiLCJ1c2VyRGF0YSIsImVycm9yIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OytCQUdlLGlCQUFPQSxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUEMsWUFBQUEsUUFETyxHQUNJSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsYUFBWixJQUNaTCxHQUFHLENBQUNJLE9BQUosQ0FBWSxnQkFBWixDQURZLElBRVpKLEdBQUcsQ0FBQ00sSUFBSixDQUFTQyxLQUZHLElBR1pQLEdBQUcsQ0FBQ1EsS0FBSixDQUFVQyxHQUpGO0FBTVBDLFlBQUFBLEdBTk8sR0FNRCx3QkFOQzs7QUFBQSxnQkFRUlAsUUFSUTtBQUFBO0FBQUE7QUFBQTs7QUFBQSw2Q0FRUyxxQ0FBa0JGLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCUyxHQUE1QixDQVJUOztBQUFBO0FBQUE7QUFBQSxtQkFVVywwQkFBY1AsUUFBZCxDQVZYOztBQUFBO0FBVVBRLFlBQUFBLFNBVk87O0FBQUEsaUJBV1RBLFNBWFM7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkNBWUoscUNBQWtCVixHQUFsQixFQUF1QixHQUF2QixFQUE0QixjQUE1QixDQVpJOztBQUFBO0FBQUE7QUFlTE0sWUFBQUEsS0FmSyxHQWVHSixRQUFRLENBQUNTLEtBQVQsQ0FBZSxHQUFmLEVBQW9CLENBQXBCLENBZkg7QUFBQSwyQkFnQk8saUNBQVlMLEtBQVosQ0FoQlAsRUFnQkhNLEtBaEJHLGdCQWdCSEEsS0FoQkc7QUFBQTtBQUFBLG1CQWlCUUMsMkJBQWVDLE1BQWYsQ0FBc0I7QUFBRUYsY0FBQUEsS0FBSyxFQUFMQTtBQUFGLGFBQXRCLENBakJSOztBQUFBO0FBaUJMRyxZQUFBQSxJQWpCSzs7QUFBQSxnQkFrQk5BLElBbEJNO0FBQUE7QUFBQTtBQUFBOztBQUFBLDZDQWtCTyxxQ0FBa0JmLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLGNBQTVCLENBbEJQOztBQUFBO0FBbUJYRCxZQUFBQSxHQUFHLENBQUNpQixRQUFKLEdBQWVELElBQWY7QUFDQWQsWUFBQUEsSUFBSTtBQXBCTztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXNCTGdCLFlBQUFBLEtBdEJLLEdBc0JHLFlBQUlDLE9BQUosR0FBYyx1QkFBZCxjQXRCSDtBQXVCWCxpREFBa0JsQixHQUFsQixFQUF1QixHQUF2QixFQUE0QmlCLEtBQTVCOztBQXZCVztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcdGhlanVzdFxcRGVza3RvcFxcUmVwb3NpdG9yeVxcdm90aW5nLXN5c3RlbVxcc3JjXFxtaWRkbGV3YXJlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRFcnJvclJlc3BvbnNlIH0gZnJvbSAnLi4vdXRpbHMvc2VuZFJlc3BvbnNlJztcclxuaW1wb3J0IHsgdmVyaWZ5VG9rZW4gfSBmcm9tICcuLi9tb2R1bGVzL3Rva2VuUHJvY2Vzc29yJztcclxuaW1wb3J0IHsgaXNCbGFja0xpc3RlZCB9IGZyb20gJy4uL3V0aWxzL2luZGV4JztcclxuaW1wb3J0IFVzZXJSZXBvc2l0b3J5IGZyb20gJy4uL3JlcG9zaXRvcmllcy9Vc2VyUmVwb3NpdG9yeSc7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgY29uc3QgcmF3VG9rZW4gPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uXHJcbiAgICB8fCByZXEuaGVhZGVyc1sneC1hY2Nlc3MtdG9rZW4nXVxyXG4gICAgfHwgcmVxLmJvZHkudG9rZW5cclxuICAgIHx8IHJlcS5xdWVyeS5zbHQ7XHJcblxyXG4gIGNvbnN0IGVyciA9ICdQbGVhc2UgcHJvdmlkZSBhIHRva2VuJztcclxuXHJcbiAgaWYgKCFyYXdUb2tlbikgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDAxLCBlcnIpO1xyXG5cclxuICBjb25zdCBpc2Jsb2NrZWQgPSBhd2FpdCBpc0JsYWNrTGlzdGVkKHJhd1Rva2VuKTtcclxuICBpZiAoaXNibG9ja2VkKSB7XHJcbiAgICByZXR1cm4gc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDMsICdVbmF1dGhvcml6ZWQnKTtcclxuICB9XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHRva2VuID0gcmF3VG9rZW4uc3BsaXQoJyAnKVsxXTtcclxuICAgIGNvbnN0IHsgZW1haWwgfSA9IHZlcmlmeVRva2VuKHRva2VuKTtcclxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyUmVwb3NpdG9yeS5nZXRPbmUoeyBlbWFpbCB9KTtcclxuICAgIGlmICghdXNlcikgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDAzLCAnVW5hdXRob3JpemVkJyk7XHJcbiAgICByZXEudXNlckRhdGEgPSB1c2VyO1xyXG4gICAgbmV4dCgpO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgY29uc3QgZXJyb3IgPSBlcnIubWVzc2FnZSA/ICdBdXRoZW50aWNhdGlvbiBGYWlsZWQnIDogZXJyO1xyXG4gICAgc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDEsIGVycm9yKTtcclxuICB9XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "AuthenticateUser.js"
      ],
      "names": [
        "req",
        "res",
        "next",
        "rawToken",
        "headers",
        "authorization",
        "body",
        "token",
        "query",
        "slt",
        "err",
        "isblocked",
        "split",
        "email",
        "UserRepository",
        "getOne",
        "user",
        "userData",
        "error",
        "message"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;+BAGe,iBAAOA,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,QADO,GACIH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,IACZL,GAAG,CAACI,OAAJ,CAAY,gBAAZ,CADY,IAEZJ,GAAG,CAACM,IAAJ,CAASC,KAFG,IAGZP,GAAG,CAACQ,KAAJ,CAAUC,GAJF;AAMPC,YAAAA,GANO,GAMD,wBANC;;AAAA,gBAQRP,QARQ;AAAA;AAAA;AAAA;;AAAA,6CAQS,qCAAkBF,GAAlB,EAAuB,GAAvB,EAA4BS,GAA5B,CART;;AAAA;AAAA;AAAA,mBAUW,0BAAcP,QAAd,CAVX;;AAAA;AAUPQ,YAAAA,SAVO;;AAAA,iBAWTA,SAXS;AAAA;AAAA;AAAA;;AAAA,6CAYJ,qCAAkBV,GAAlB,EAAuB,GAAvB,EAA4B,cAA5B,CAZI;;AAAA;AAAA;AAeLM,YAAAA,KAfK,GAeGJ,QAAQ,CAACS,KAAT,CAAe,GAAf,EAAoB,CAApB,CAfH;AAAA,2BAgBO,iCAAYL,KAAZ,CAhBP,EAgBHM,KAhBG,gBAgBHA,KAhBG;AAAA;AAAA,mBAiBQC,2BAAeC,MAAf,CAAsB;AAAEF,cAAAA,KAAK,EAALA;AAAF,aAAtB,CAjBR;;AAAA;AAiBLG,YAAAA,IAjBK;;AAAA,gBAkBNA,IAlBM;AAAA;AAAA;AAAA;;AAAA,6CAkBO,qCAAkBf,GAAlB,EAAuB,GAAvB,EAA4B,cAA5B,CAlBP;;AAAA;AAmBXD,YAAAA,GAAG,CAACiB,QAAJ,GAAeD,IAAf;AACAd,YAAAA,IAAI;AApBO;AAAA;;AAAA;AAAA;AAAA;AAsBLgB,YAAAA,KAtBK,GAsBG,YAAIC,OAAJ,GAAc,uBAAd,cAtBH;AAuBX,iDAAkBlB,GAAlB,EAAuB,GAAvB,EAA4BiB,KAA5B;;AAvBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
      "sourcesContent": [
        "import { sendErrorResponse } from '../utils/sendResponse';\r\nimport { verifyToken } from '../modules/tokenProcessor';\r\nimport { isBlackListed } from '../utils/index';\r\nimport UserRepository from '../repositories/UserRepository';\r\n\r\n\r\nexport default async (req, res, next) => {\r\n  const rawToken = req.headers.authorization\r\n    || req.headers['x-access-token']\r\n    || req.body.token\r\n    || req.query.slt;\r\n\r\n  const err = 'Please provide a token';\r\n\r\n  if (!rawToken) return sendErrorResponse(res, 401, err);\r\n\r\n  const isblocked = await isBlackListed(rawToken);\r\n  if (isblocked) {\r\n    return sendErrorResponse(res, 403, 'Unauthorized');\r\n  }\r\n  try {\r\n    const token = rawToken.split(' ')[1];\r\n    const { email } = verifyToken(token);\r\n    const user = await UserRepository.getOne({ email });\r\n    if (!user) return sendErrorResponse(res, 403, 'Unauthorized');\r\n    req.userData = user;\r\n    next();\r\n  } catch (err) {\r\n    const error = err.message ? 'Authentication Failed' : err;\r\n    sendErrorResponse(res, 401, error);\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578984875667
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\middlewares\\\\VerifyRoles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\VerifyRoles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\VerifyRoles.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\VerifyRoles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
        "sourceFileName": "VerifyRoles.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _tokenProcessor = require(\"../modules/tokenProcessor\");\n\nvar _sendResponse = require(\"../utils/sendResponse\");\n\n/* eslint-disable class-methods-use-this */\n\n/**\r\n * @module VerifyRoles\r\n */\nvar VerifyRoles =\n/*#__PURE__*/\nfunction () {\n  function VerifyRoles() {\n    (0, _classCallCheck2[\"default\"])(this, VerifyRoles);\n  }\n\n  (0, _createClass2[\"default\"])(VerifyRoles, [{\n    key: \"verifySupAdmin\",\n\n    /**\r\n     * @description verify and authorize Super Administrator roles\r\n     * \r\n     * @param {*} req\r\n     * \r\n     * @param {*} res\r\n     * \r\n     * @param {*} next\r\n     * \r\n     * @returns {*} pass control to the next middleware\r\n     */\n    value: function () {\n      var _verifySupAdmin = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var token, userDetail;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = req.headers.authorization.split(' ')[1] || req.headers.authorization;\n                _context.next = 3;\n                return (0, _tokenProcessor.verifyToken)(token);\n\n              case 3:\n                userDetail = _context.sent;\n                req.userData = userDetail;\n\n                if (!(req.userData.role !== 'Super Administrator')) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 401, 'Unauthorized access'));\n\n              case 7:\n                next();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function verifySupAdmin(_x, _x2, _x3) {\n        return _verifySupAdmin.apply(this, arguments);\n      }\n\n      return verifySupAdmin;\n    }()\n    /**\r\n     * @description verify and authorize Requester roles\r\n     * \r\n     * @param {*} req\r\n     * \r\n     * @param {*} res\r\n     * \r\n     * @param {*} next\r\n     * \r\n     * @returns {*} pass control to the next middleware\r\n     */\n\n  }, {\n    key: \"verifyRequester\",\n    value: function () {\n      var _verifyRequester = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var token, userDetail;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                token = req.headers.authorization.split(' ')[1] || req.headers.authorization;\n                _context2.next = 3;\n                return (0, _tokenProcessor.verifyToken)(token);\n\n              case 3:\n                userDetail = _context2.sent;\n                req.userData = userDetail;\n\n                if (!(req.userData.role === 'Super Administrator')) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 401, 'Unauthorized access'));\n\n              case 7:\n                next();\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function verifyRequester(_x4, _x5, _x6) {\n        return _verifyRequester.apply(this, arguments);\n      }\n\n      return verifyRequester;\n    }()\n  }]);\n  return VerifyRoles;\n}();\n\nvar _default = new VerifyRoles();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZlcmlmeVJvbGVzLmpzIl0sIm5hbWVzIjpbIlZlcmlmeVJvbGVzIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzcGxpdCIsInVzZXJEZXRhaWwiLCJ1c2VyRGF0YSIsInJvbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7O0FBQ0E7O0FBRkE7O0FBSUE7OztJQUdNQSxXOzs7Ozs7Ozs7O0FBQ0o7Ozs7Ozs7Ozs7Ozs7O29EQVdxQkMsRyxFQUFLQyxHLEVBQUtDLEk7Ozs7OztBQUN2QkMsZ0JBQUFBLEssR0FBUUgsR0FBRyxDQUFDSSxPQUFKLENBQVlDLGFBQVosQ0FBMEJDLEtBQTFCLENBQWdDLEdBQWhDLEVBQXFDLENBQXJDLEtBQTJDTixHQUFHLENBQUNJLE9BQUosQ0FBWUMsYTs7dUJBQzVDLGlDQUFZRixLQUFaLEM7OztBQUFuQkksZ0JBQUFBLFU7QUFDTlAsZ0JBQUFBLEdBQUcsQ0FBQ1EsUUFBSixHQUFlRCxVQUFmOztzQkFDSVAsR0FBRyxDQUFDUSxRQUFKLENBQWFDLElBQWIsS0FBc0IscUI7Ozs7O2lEQUNqQixxQ0FBa0JSLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLHFCQUE1QixDOzs7QUFFVEMsZ0JBQUFBLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHTjs7Ozs7Ozs7Ozs7Ozs7Ozs7cURBV3NCRixHLEVBQUtDLEcsRUFBS0MsSTs7Ozs7O0FBQ3hCQyxnQkFBQUEsSyxHQUFRSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsYUFBWixDQUEwQkMsS0FBMUIsQ0FBZ0MsR0FBaEMsRUFBcUMsQ0FBckMsS0FBMkNOLEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxhOzt1QkFDNUMsaUNBQVlGLEtBQVosQzs7O0FBQW5CSSxnQkFBQUEsVTtBQUNOUCxnQkFBQUEsR0FBRyxDQUFDUSxRQUFKLEdBQWVELFVBQWY7O3NCQUNJUCxHQUFHLENBQUNRLFFBQUosQ0FBYUMsSUFBYixLQUFzQixxQjs7Ozs7a0RBQ2pCLHFDQUFrQlIsR0FBbEIsRUFBdUIsR0FBdkIsRUFBNEIscUJBQTVCLEM7OztBQUVUQyxnQkFBQUEsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFJTyxJQUFJSCxXQUFKLEUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXG1pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgY2xhc3MtbWV0aG9kcy11c2UtdGhpcyAqL1xyXG5pbXBvcnQgeyB2ZXJpZnlUb2tlbiB9IGZyb20gJy4uL21vZHVsZXMvdG9rZW5Qcm9jZXNzb3InO1xyXG5pbXBvcnQgeyBzZW5kRXJyb3JSZXNwb25zZSB9IGZyb20gJy4uL3V0aWxzL3NlbmRSZXNwb25zZSc7XHJcblxyXG4vKipcclxuICogQG1vZHVsZSBWZXJpZnlSb2xlc1xyXG4gKi9cclxuY2xhc3MgVmVyaWZ5Um9sZXMge1xyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiB2ZXJpZnkgYW5kIGF1dGhvcml6ZSBTdXBlciBBZG1pbmlzdHJhdG9yIHJvbGVzXHJcbiAgICogXHJcbiAgICogQHBhcmFtIHsqfSByZXFcclxuICAgKiBcclxuICAgKiBAcGFyYW0geyp9IHJlc1xyXG4gICAqIFxyXG4gICAqIEBwYXJhbSB7Kn0gbmV4dFxyXG4gICAqIFxyXG4gICAqIEByZXR1cm5zIHsqfSBwYXNzIGNvbnRyb2wgdG8gdGhlIG5leHQgbWlkZGxld2FyZVxyXG4gICAqL1xyXG4gIGFzeW5jIHZlcmlmeVN1cEFkbWluKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3BsaXQoJyAnKVsxXSB8fCByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uO1xyXG4gICAgY29uc3QgdXNlckRldGFpbCA9IGF3YWl0IHZlcmlmeVRva2VuKHRva2VuKTtcclxuICAgIHJlcS51c2VyRGF0YSA9IHVzZXJEZXRhaWw7XHJcbiAgICBpZiAocmVxLnVzZXJEYXRhLnJvbGUgIT09ICdTdXBlciBBZG1pbmlzdHJhdG9yJykge1xyXG4gICAgICByZXR1cm4gc2VuZEVycm9yUmVzcG9uc2UocmVzLCA0MDEsICdVbmF1dGhvcml6ZWQgYWNjZXNzJyk7XHJcbiAgICB9XHJcbiAgICBuZXh0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24gdmVyaWZ5IGFuZCBhdXRob3JpemUgUmVxdWVzdGVyIHJvbGVzXHJcbiAgICogXHJcbiAgICogQHBhcmFtIHsqfSByZXFcclxuICAgKiBcclxuICAgKiBAcGFyYW0geyp9IHJlc1xyXG4gICAqIFxyXG4gICAqIEBwYXJhbSB7Kn0gbmV4dFxyXG4gICAqIFxyXG4gICAqIEByZXR1cm5zIHsqfSBwYXNzIGNvbnRyb2wgdG8gdGhlIG5leHQgbWlkZGxld2FyZVxyXG4gICAqL1xyXG4gIGFzeW5jIHZlcmlmeVJlcXVlc3RlcihyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uLnNwbGl0KCcgJylbMV0gfHwgcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbjtcclxuICAgIGNvbnN0IHVzZXJEZXRhaWwgPSBhd2FpdCB2ZXJpZnlUb2tlbih0b2tlbik7XHJcbiAgICByZXEudXNlckRhdGEgPSB1c2VyRGV0YWlsO1xyXG4gICAgaWYgKHJlcS51c2VyRGF0YS5yb2xlID09PSAnU3VwZXIgQWRtaW5pc3RyYXRvcicpIHtcclxuICAgICAgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDAxLCAnVW5hdXRob3JpemVkIGFjY2VzcycpO1xyXG4gICAgfVxyXG4gICAgbmV4dCgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IFZlcmlmeVJvbGVzKCk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "VerifyRoles.js"
      ],
      "names": [
        "VerifyRoles",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "authorization",
        "split",
        "userDetail",
        "userData",
        "role"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AACA;;AACA;;AAFA;;AAIA;;;IAGMA,W;;;;;;;;;;AACJ;;;;;;;;;;;;;;oDAWqBC,G,EAAKC,G,EAAKC,I;;;;;;AACvBC,gBAAAA,K,GAAQH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,KAA2CN,GAAG,CAACI,OAAJ,CAAYC,a;;uBAC5C,iCAAYF,KAAZ,C;;;AAAnBI,gBAAAA,U;AACNP,gBAAAA,GAAG,CAACQ,QAAJ,GAAeD,UAAf;;sBACIP,GAAG,CAACQ,QAAJ,CAAaC,IAAb,KAAsB,qB;;;;;iDACjB,qCAAkBR,GAAlB,EAAuB,GAAvB,EAA4B,qBAA5B,C;;;AAETC,gBAAAA,IAAI;;;;;;;;;;;;;;;;AAGN;;;;;;;;;;;;;;;;;qDAWsBF,G,EAAKC,G,EAAKC,I;;;;;;AACxBC,gBAAAA,K,GAAQH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,KAA2CN,GAAG,CAACI,OAAJ,CAAYC,a;;uBAC5C,iCAAYF,KAAZ,C;;;AAAnBI,gBAAAA,U;AACNP,gBAAAA,GAAG,CAACQ,QAAJ,GAAeD,UAAf;;sBACIP,GAAG,CAACQ,QAAJ,CAAaC,IAAb,KAAsB,qB;;;;;kDACjB,qCAAkBR,GAAlB,EAAuB,GAAvB,EAA4B,qBAA5B,C;;;AAETC,gBAAAA,IAAI;;;;;;;;;;;;;;;;;;;;eAIO,IAAIH,WAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
      "sourcesContent": [
        "/* eslint-disable class-methods-use-this */\r\nimport { verifyToken } from '../modules/tokenProcessor';\r\nimport { sendErrorResponse } from '../utils/sendResponse';\r\n\r\n/**\r\n * @module VerifyRoles\r\n */\r\nclass VerifyRoles {\r\n  /**\r\n   * @description verify and authorize Super Administrator roles\r\n   * \r\n   * @param {*} req\r\n   * \r\n   * @param {*} res\r\n   * \r\n   * @param {*} next\r\n   * \r\n   * @returns {*} pass control to the next middleware\r\n   */\r\n  async verifySupAdmin(req, res, next) {\r\n    const token = req.headers.authorization.split(' ')[1] || req.headers.authorization;\r\n    const userDetail = await verifyToken(token);\r\n    req.userData = userDetail;\r\n    if (req.userData.role !== 'Super Administrator') {\r\n      return sendErrorResponse(res, 401, 'Unauthorized access');\r\n    }\r\n    next();\r\n  }\r\n\r\n  /**\r\n   * @description verify and authorize Requester roles\r\n   * \r\n   * @param {*} req\r\n   * \r\n   * @param {*} res\r\n   * \r\n   * @param {*} next\r\n   * \r\n   * @returns {*} pass control to the next middleware\r\n   */\r\n  async verifyRequester(req, res, next) {\r\n    const token = req.headers.authorization.split(' ')[1] || req.headers.authorization;\r\n    const userDetail = await verifyToken(token);\r\n    req.userData = userDetail;\r\n    if (req.userData.role === 'Super Administrator') {\r\n      return sendErrorResponse(res, 401, 'Unauthorized access');\r\n    }\r\n    next();\r\n  }\r\n}\r\n\r\nexport default new VerifyRoles();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578556456775
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\routes\\\\registration.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\registration.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\registration.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\registration.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
        "sourceFileName": "registration.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _AuthenticateUser = _interopRequireDefault(require(\"../middlewares/AuthenticateUser\"));\n\nvar _VerifyRoles = _interopRequireDefault(require(\"../middlewares/VerifyRoles\"));\n\nvar _RequestValidator = _interopRequireDefault(require(\"../middlewares/RequestValidator\"));\n\nvar _RegistrationController = _interopRequireDefault(require(\"../controllers/RegistrationController\"));\n\nvar registrationRouter = (0, _express.Router)();\nregistrationRouter.put('/register_voter', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifyRequester, _RequestValidator[\"default\"].voterValidation, _RegistrationController[\"default\"].voterRegistration);\nregistrationRouter.post('/register_party', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifyRequester, _RequestValidator[\"default\"].partyValidation, _RegistrationController[\"default\"].partyRegistration);\nregistrationRouter.post('/register_candidate', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifyRequester, _RequestValidator[\"default\"].candidateValidation, _RegistrationController[\"default\"].candidateRegistration);\nregistrationRouter.post('/join_party', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifyRequester, _RequestValidator[\"default\"].voterJoinValidation, _RegistrationController[\"default\"].voterJoinParty);\nvar _default = registrationRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdHJhdGlvbi5qcyJdLCJuYW1lcyI6WyJyZWdpc3RyYXRpb25Sb3V0ZXIiLCJwdXQiLCJhdXRoZW50aWNhdGVVc2VyIiwidmVyaWZ5Um9sZXMiLCJ2ZXJpZnlSZXF1ZXN0ZXIiLCJyZXF1ZXN0VmFsaWRhdG9yIiwidm90ZXJWYWxpZGF0aW9uIiwicmVnaXN0cmF0aW9uIiwidm90ZXJSZWdpc3RyYXRpb24iLCJwb3N0IiwicGFydHlWYWxpZGF0aW9uIiwicGFydHlSZWdpc3RyYXRpb24iLCJjYW5kaWRhdGVWYWxpZGF0aW9uIiwiY2FuZGlkYXRlUmVnaXN0cmF0aW9uIiwidm90ZXJKb2luVmFsaWRhdGlvbiIsInZvdGVySm9pblBhcnR5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQSxJQUFNQSxrQkFBa0IsR0FBRyxzQkFBM0I7QUFFQUEsa0JBQWtCLENBQUNDLEdBQW5CLENBQXVCLGlCQUF2QixFQUEwQ0MsNEJBQTFDLEVBQTREQyx3QkFBWUMsZUFBeEUsRUFBeUZDLDZCQUFpQkMsZUFBMUcsRUFBMkhDLG1DQUFhQyxpQkFBeEk7QUFDQVIsa0JBQWtCLENBQUNTLElBQW5CLENBQXdCLGlCQUF4QixFQUEyQ1AsNEJBQTNDLEVBQTZEQyx3QkFBWUMsZUFBekUsRUFBMEZDLDZCQUFpQkssZUFBM0csRUFBNEhILG1DQUFhSSxpQkFBekk7QUFDQVgsa0JBQWtCLENBQUNTLElBQW5CLENBQXdCLHFCQUF4QixFQUErQ1AsNEJBQS9DLEVBQWlFQyx3QkFBWUMsZUFBN0UsRUFBOEZDLDZCQUFpQk8sbUJBQS9HLEVBQW9JTCxtQ0FBYU0scUJBQWpKO0FBQ0FiLGtCQUFrQixDQUFDUyxJQUFuQixDQUF3QixhQUF4QixFQUF1Q1AsNEJBQXZDLEVBQXlEQyx3QkFBWUMsZUFBckUsRUFBc0ZDLDZCQUFpQlMsbUJBQXZHLEVBQTRIUCxtQ0FBYVEsY0FBekk7ZUFFZWYsa0IiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgYXV0aGVudGljYXRlVXNlciBmcm9tICcuLi9taWRkbGV3YXJlcy9BdXRoZW50aWNhdGVVc2VyJztcclxuaW1wb3J0IHZlcmlmeVJvbGVzIGZyb20gJy4uL21pZGRsZXdhcmVzL1ZlcmlmeVJvbGVzJztcclxuaW1wb3J0IHJlcXVlc3RWYWxpZGF0b3IgZnJvbSAnLi4vbWlkZGxld2FyZXMvUmVxdWVzdFZhbGlkYXRvcic7XHJcbmltcG9ydCByZWdpc3RyYXRpb24gZnJvbSAnLi4vY29udHJvbGxlcnMvUmVnaXN0cmF0aW9uQ29udHJvbGxlcic7XHJcblxyXG5cclxuY29uc3QgcmVnaXN0cmF0aW9uUm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5yZWdpc3RyYXRpb25Sb3V0ZXIucHV0KCcvcmVnaXN0ZXJfdm90ZXInLCBhdXRoZW50aWNhdGVVc2VyLCB2ZXJpZnlSb2xlcy52ZXJpZnlSZXF1ZXN0ZXIsIHJlcXVlc3RWYWxpZGF0b3Iudm90ZXJWYWxpZGF0aW9uLCByZWdpc3RyYXRpb24udm90ZXJSZWdpc3RyYXRpb24pO1xyXG5yZWdpc3RyYXRpb25Sb3V0ZXIucG9zdCgnL3JlZ2lzdGVyX3BhcnR5JywgYXV0aGVudGljYXRlVXNlciwgdmVyaWZ5Um9sZXMudmVyaWZ5UmVxdWVzdGVyLCByZXF1ZXN0VmFsaWRhdG9yLnBhcnR5VmFsaWRhdGlvbiwgcmVnaXN0cmF0aW9uLnBhcnR5UmVnaXN0cmF0aW9uKTtcclxucmVnaXN0cmF0aW9uUm91dGVyLnBvc3QoJy9yZWdpc3Rlcl9jYW5kaWRhdGUnLCBhdXRoZW50aWNhdGVVc2VyLCB2ZXJpZnlSb2xlcy52ZXJpZnlSZXF1ZXN0ZXIsIHJlcXVlc3RWYWxpZGF0b3IuY2FuZGlkYXRlVmFsaWRhdGlvbiwgcmVnaXN0cmF0aW9uLmNhbmRpZGF0ZVJlZ2lzdHJhdGlvbik7XHJcbnJlZ2lzdHJhdGlvblJvdXRlci5wb3N0KCcvam9pbl9wYXJ0eScsIGF1dGhlbnRpY2F0ZVVzZXIsIHZlcmlmeVJvbGVzLnZlcmlmeVJlcXVlc3RlciwgcmVxdWVzdFZhbGlkYXRvci52b3RlckpvaW5WYWxpZGF0aW9uLCByZWdpc3RyYXRpb24udm90ZXJKb2luUGFydHkpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcmVnaXN0cmF0aW9uUm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "registration.js"
      ],
      "names": [
        "registrationRouter",
        "put",
        "authenticateUser",
        "verifyRoles",
        "verifyRequester",
        "requestValidator",
        "voterValidation",
        "registration",
        "voterRegistration",
        "post",
        "partyValidation",
        "partyRegistration",
        "candidateValidation",
        "candidateRegistration",
        "voterJoinValidation",
        "voterJoinParty"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA,IAAMA,kBAAkB,GAAG,sBAA3B;AAEAA,kBAAkB,CAACC,GAAnB,CAAuB,iBAAvB,EAA0CC,4BAA1C,EAA4DC,wBAAYC,eAAxE,EAAyFC,6BAAiBC,eAA1G,EAA2HC,mCAAaC,iBAAxI;AACAR,kBAAkB,CAACS,IAAnB,CAAwB,iBAAxB,EAA2CP,4BAA3C,EAA6DC,wBAAYC,eAAzE,EAA0FC,6BAAiBK,eAA3G,EAA4HH,mCAAaI,iBAAzI;AACAX,kBAAkB,CAACS,IAAnB,CAAwB,qBAAxB,EAA+CP,4BAA/C,EAAiEC,wBAAYC,eAA7E,EAA8FC,6BAAiBO,mBAA/G,EAAoIL,mCAAaM,qBAAjJ;AACAb,kBAAkB,CAACS,IAAnB,CAAwB,aAAxB,EAAuCP,4BAAvC,EAAyDC,wBAAYC,eAArE,EAAsFC,6BAAiBS,mBAAvG,EAA4HP,mCAAaQ,cAAzI;eAEef,kB",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nimport authenticateUser from '../middlewares/AuthenticateUser';\r\nimport verifyRoles from '../middlewares/VerifyRoles';\r\nimport requestValidator from '../middlewares/RequestValidator';\r\nimport registration from '../controllers/RegistrationController';\r\n\r\n\r\nconst registrationRouter = Router();\r\n\r\nregistrationRouter.put('/register_voter', authenticateUser, verifyRoles.verifyRequester, requestValidator.voterValidation, registration.voterRegistration);\r\nregistrationRouter.post('/register_party', authenticateUser, verifyRoles.verifyRequester, requestValidator.partyValidation, registration.partyRegistration);\r\nregistrationRouter.post('/register_candidate', authenticateUser, verifyRoles.verifyRequester, requestValidator.candidateValidation, registration.candidateRegistration);\r\nregistrationRouter.post('/join_party', authenticateUser, verifyRoles.verifyRequester, requestValidator.voterJoinValidation, registration.voterJoinParty);\r\n\r\nexport default registrationRouter;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579044316538
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\middlewares\\\\RequestValidator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\RequestValidator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\RequestValidator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares\\RequestValidator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
        "sourceFileName": "RequestValidator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _validator = require(\"../modules/validator\");\n\nvar _sendResponse = require(\"../utils/sendResponse\");\n\n/**\r\n   * @description userAuth is clas that handles user data validation\r\n   */\nvar requestValidator =\n/*#__PURE__*/\nfunction () {\n  function requestValidator() {\n    (0, _classCallCheck2[\"default\"])(this, requestValidator);\n  }\n\n  (0, _createClass2[\"default\"])(requestValidator, null, [{\n    key: \"voterValidation\",\n\n    /**\r\n       *\r\n       * @param {req} req object\r\n       *\r\n       * @param {res} res object\r\n       *\r\n       * @param {next} next forwards request to the next middleware function\r\n       *\r\n       * @returns {obj} reurns an response object\r\n       */\n    value: function voterValidation(req, res, next) {\n      var _req$body = req.body,\n          country = _req$body.country,\n          state = _req$body.state,\n          gender = _req$body.gender,\n          city = _req$body.city,\n          dateOfBirth = _req$body.dateOfBirth,\n          residentialAddress = _req$body.residentialAddress;\n      var schema = {\n        country: (0, _validator.inValidName)('Country', country),\n        state: (0, _validator.inValidName)('State', state),\n        gender: (0, _validator.inValidGender)(gender),\n        city: (0, _validator.inValidName)('city', city),\n        date_of_birth: (0, _validator.inValidDate)(dateOfBirth),\n        residential_address: (0, _validator.inValidAddress)(residentialAddress)\n      };\n      var error = (0, _validator.validate)(schema);\n      if (error) return (0, _sendResponse.sendErrorResponse)(res, 422, error);\n      return next();\n    }\n    /**\r\n       *\r\n       * @param {req} req object\r\n       *\r\n       * @param {res} res object\r\n       *\r\n       * @param {next} next forwards request to the next middleware function\r\n       *\r\n       * @returns {obj} reurns an response object\r\n       */\n\n  }, {\n    key: \"partyValidation\",\n    value: function partyValidation(req, res, next) {\n      var _req$body2 = req.body,\n          partyName = _req$body2.partyName,\n          phoneNumber = _req$body2.phoneNumber,\n          partyAddress = _req$body2.partyAddress;\n      var schema = {\n        partyName: (0, _validator.inValidPartyName)(partyName),\n        phoneNumber: (0, _validator.inValidPhoneNumber)(phoneNumber),\n        partyAddress: (0, _validator.inValidAddress)(partyAddress)\n      };\n      var error = (0, _validator.validate)(schema);\n      if (error) return (0, _sendResponse.sendErrorResponse)(res, 422, error);\n      return next();\n    }\n    /**\r\n       *\r\n       * @param {req} req object\r\n       *\r\n       * @param {res} res object\r\n       *\r\n       * @param {next} next forwards request to the next middleware function\r\n       *\r\n       * @returns {obj} returns an response object\r\n       */\n\n  }, {\n    key: \"candidateValidation\",\n    value: function candidateValidation(req, res, next) {\n      var _req$body3 = req.body,\n          officeContesting = _req$body3.officeContesting,\n          partyName = _req$body3.partyName;\n      var schema = {\n        officeContesting: (0, _validator.inValidName)('officeContesting', officeContesting),\n        partyName: (0, _validator.inValidPartyName)(partyName)\n      };\n      var error = (0, _validator.validate)(schema);\n      if (error) return (0, _sendResponse.sendErrorResponse)(res, 422, error);\n      return next();\n    }\n    /**\r\n     * @descrption handles a voter join a political party\r\n     * \r\n     * @param {req} req handles the request body\r\n     * \r\n     * @param {res} res object\r\n     *\r\n     * @param {next} next forwards request to the next middleware function\r\n     *\r\n     * @returns {obj} returns an response object\r\n     */\n\n  }, {\n    key: \"voterJoinValidation\",\n    value: function voterJoinValidation(req, res, next) {\n      var partyName = req.body.partyName;\n      var schema = {\n        partyName: (0, _validator.inValidPartyName)(partyName)\n      };\n      var error = (0, _validator.validate)(schema);\n      if (error) return (0, _sendResponse.sendErrorResponse)(res, 422, error);\n      return next();\n    }\n    /**\r\n     * @descrption handles a voter join a political party\r\n     * \r\n     * @param {req} req handles the request body\r\n     * \r\n     * @param {res} res object\r\n     *\r\n     * @param {next} next forwards request to the next middleware function\r\n     *\r\n     * @returns {obj} returns an response object\r\n     */\n\n  }, {\n    key: \"partyAdminValidation\",\n    value: function partyAdminValidation(req, res, next) {\n      var partyName = req.body.partyName;\n      var schema = {\n        partyName: (0, _validator.inValidPartyName)(partyName)\n      };\n      var error = (0, _validator.validate)(schema);\n      if (error) return (0, _sendResponse.sendErrorResponse)(res, 422, error);\n      return next();\n    }\n    /**\r\n     * @descrption handles a voter join a political party\r\n     * \r\n     * @param {req} req handles the request body\r\n     * \r\n     * @param {res} res object\r\n     *\r\n     * @param {next} next forwards request to the next middleware function\r\n     *\r\n     * @returns {obj} returns an response object\r\n     */\n\n  }, {\n    key: \"approveCandidacyValidation\",\n    value: function approveCandidacyValidation(req, res, next) {\n      var status = req.body.status;\n      var schema = {\n        status: (0, _validator.inValidName)(status)\n      };\n      var error = (0, _validator.validate)(schema);\n      if (error) return (0, _sendResponse.sendErrorResponse)(res, 422, error);\n      return next();\n    }\n  }]);\n  return requestValidator;\n}();\n\nexports[\"default\"] = requestValidator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcXVlc3RWYWxpZGF0b3IuanMiXSwibmFtZXMiOlsicmVxdWVzdFZhbGlkYXRvciIsInJlcSIsInJlcyIsIm5leHQiLCJib2R5IiwiY291bnRyeSIsInN0YXRlIiwiZ2VuZGVyIiwiY2l0eSIsImRhdGVPZkJpcnRoIiwicmVzaWRlbnRpYWxBZGRyZXNzIiwic2NoZW1hIiwiZGF0ZV9vZl9iaXJ0aCIsInJlc2lkZW50aWFsX2FkZHJlc3MiLCJlcnJvciIsInBhcnR5TmFtZSIsInBob25lTnVtYmVyIiwicGFydHlBZGRyZXNzIiwib2ZmaWNlQ29udGVzdGluZyIsInN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUlBOztBQUVBOzs7SUFHcUJBLGdCOzs7Ozs7Ozs7O0FBQ25COzs7Ozs7Ozs7O29DQVV1QkMsRyxFQUFLQyxHLEVBQUtDLEksRUFBTTtBQUFBLHNCQUdqQ0YsR0FBRyxDQUFDRyxJQUg2QjtBQUFBLFVBRW5DQyxPQUZtQyxhQUVuQ0EsT0FGbUM7QUFBQSxVQUUxQkMsS0FGMEIsYUFFMUJBLEtBRjBCO0FBQUEsVUFFbkJDLE1BRm1CLGFBRW5CQSxNQUZtQjtBQUFBLFVBRVhDLElBRlcsYUFFWEEsSUFGVztBQUFBLFVBRUxDLFdBRkssYUFFTEEsV0FGSztBQUFBLFVBRVFDLGtCQUZSLGFBRVFBLGtCQUZSO0FBS3JDLFVBQU1DLE1BQU0sR0FBRztBQUNiTixRQUFBQSxPQUFPLEVBQUUsNEJBQVksU0FBWixFQUF1QkEsT0FBdkIsQ0FESTtBQUViQyxRQUFBQSxLQUFLLEVBQUUsNEJBQVksT0FBWixFQUFxQkEsS0FBckIsQ0FGTTtBQUdiQyxRQUFBQSxNQUFNLEVBQUUsOEJBQWNBLE1BQWQsQ0FISztBQUliQyxRQUFBQSxJQUFJLEVBQUUsNEJBQVksTUFBWixFQUFvQkEsSUFBcEIsQ0FKTztBQUtiSSxRQUFBQSxhQUFhLEVBQUUsNEJBQVlILFdBQVosQ0FMRjtBQU1iSSxRQUFBQSxtQkFBbUIsRUFBRSwrQkFBZUgsa0JBQWY7QUFOUixPQUFmO0FBU0EsVUFBTUksS0FBSyxHQUFHLHlCQUFTSCxNQUFULENBQWQ7QUFDQSxVQUFJRyxLQUFKLEVBQVcsT0FBTyxxQ0FBa0JaLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCWSxLQUE1QixDQUFQO0FBQ1gsYUFBT1gsSUFBSSxFQUFYO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7OztvQ0FVdUJGLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFBQSx1QkFHakNGLEdBQUcsQ0FBQ0csSUFINkI7QUFBQSxVQUVuQ1csU0FGbUMsY0FFbkNBLFNBRm1DO0FBQUEsVUFFeEJDLFdBRndCLGNBRXhCQSxXQUZ3QjtBQUFBLFVBRVhDLFlBRlcsY0FFWEEsWUFGVztBQUlyQyxVQUFNTixNQUFNLEdBQUc7QUFDYkksUUFBQUEsU0FBUyxFQUFFLGlDQUFpQkEsU0FBakIsQ0FERTtBQUViQyxRQUFBQSxXQUFXLEVBQUUsbUNBQW1CQSxXQUFuQixDQUZBO0FBR2JDLFFBQUFBLFlBQVksRUFBRSwrQkFBZUEsWUFBZjtBQUhELE9BQWY7QUFNQSxVQUFNSCxLQUFLLEdBQUcseUJBQVNILE1BQVQsQ0FBZDtBQUNBLFVBQUlHLEtBQUosRUFBVyxPQUFPLHFDQUFrQlosR0FBbEIsRUFBdUIsR0FBdkIsRUFBNEJZLEtBQTVCLENBQVA7QUFDWCxhQUFPWCxJQUFJLEVBQVg7QUFDRDtBQUVEOzs7Ozs7Ozs7Ozs7O3dDQVUyQkYsRyxFQUFLQyxHLEVBQUtDLEksRUFBTTtBQUFBLHVCQUdyQ0YsR0FBRyxDQUFDRyxJQUhpQztBQUFBLFVBRXZDYyxnQkFGdUMsY0FFdkNBLGdCQUZ1QztBQUFBLFVBRXJCSCxTQUZxQixjQUVyQkEsU0FGcUI7QUFJekMsVUFBTUosTUFBTSxHQUFHO0FBQ2JPLFFBQUFBLGdCQUFnQixFQUFFLDRCQUFZLGtCQUFaLEVBQWdDQSxnQkFBaEMsQ0FETDtBQUViSCxRQUFBQSxTQUFTLEVBQUUsaUNBQWlCQSxTQUFqQjtBQUZFLE9BQWY7QUFLQSxVQUFNRCxLQUFLLEdBQUcseUJBQVNILE1BQVQsQ0FBZDtBQUNBLFVBQUlHLEtBQUosRUFBVyxPQUFPLHFDQUFrQlosR0FBbEIsRUFBdUIsR0FBdkIsRUFBNEJZLEtBQTVCLENBQVA7QUFDWCxhQUFPWCxJQUFJLEVBQVg7QUFDRDtBQUVEOzs7Ozs7Ozs7Ozs7Ozt3Q0FXMkJGLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFBQSxVQUV2Q1ksU0FGdUMsR0FHckNkLEdBQUcsQ0FBQ0csSUFIaUMsQ0FFdkNXLFNBRnVDO0FBSXpDLFVBQU1KLE1BQU0sR0FBRztBQUNiSSxRQUFBQSxTQUFTLEVBQUUsaUNBQWlCQSxTQUFqQjtBQURFLE9BQWY7QUFJQSxVQUFNRCxLQUFLLEdBQUcseUJBQVNILE1BQVQsQ0FBZDtBQUNBLFVBQUlHLEtBQUosRUFBVyxPQUFPLHFDQUFrQlosR0FBbEIsRUFBdUIsR0FBdkIsRUFBNEJZLEtBQTVCLENBQVA7QUFDWCxhQUFPWCxJQUFJLEVBQVg7QUFDRDtBQUVEOzs7Ozs7Ozs7Ozs7Ozt5Q0FXNEJGLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFBQSxVQUV4Q1ksU0FGd0MsR0FHdENkLEdBQUcsQ0FBQ0csSUFIa0MsQ0FFeENXLFNBRndDO0FBSTFDLFVBQU1KLE1BQU0sR0FBRztBQUNiSSxRQUFBQSxTQUFTLEVBQUUsaUNBQWlCQSxTQUFqQjtBQURFLE9BQWY7QUFJQSxVQUFNRCxLQUFLLEdBQUcseUJBQVNILE1BQVQsQ0FBZDtBQUNBLFVBQUlHLEtBQUosRUFBVyxPQUFPLHFDQUFrQlosR0FBbEIsRUFBdUIsR0FBdkIsRUFBNEJZLEtBQTVCLENBQVA7QUFDWCxhQUFPWCxJQUFJLEVBQVg7QUFDRDtBQUVEOzs7Ozs7Ozs7Ozs7OzsrQ0FXa0NGLEcsRUFBS0MsRyxFQUFLQyxJLEVBQU07QUFBQSxVQUU5Q2dCLE1BRjhDLEdBRzVDbEIsR0FBRyxDQUFDRyxJQUh3QyxDQUU5Q2UsTUFGOEM7QUFJaEQsVUFBTVIsTUFBTSxHQUFHO0FBQ2JRLFFBQUFBLE1BQU0sRUFBRSw0QkFBWUEsTUFBWjtBQURLLE9BQWY7QUFJQSxVQUFNTCxLQUFLLEdBQUcseUJBQVNILE1BQVQsQ0FBZDtBQUNBLFVBQUlHLEtBQUosRUFBVyxPQUFPLHFDQUFrQlosR0FBbEIsRUFBdUIsR0FBdkIsRUFBNEJZLEtBQTVCLENBQVA7QUFDWCxhQUFPWCxJQUFJLEVBQVg7QUFDRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHRoZWp1c3RcXERlc2t0b3BcXFJlcG9zaXRvcnlcXHZvdGluZy1zeXN0ZW1cXHNyY1xcbWlkZGxld2FyZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIHZhbGlkYXRlLCBpblZhbGlkRGF0ZSwgaW5WYWxpZE5hbWUsIGluVmFsaWRBZGRyZXNzLCBpblZhbGlkR2VuZGVyLFxyXG4gIGluVmFsaWRQaG9uZU51bWJlciwgaW5WYWxpZFBhcnR5TmFtZVxyXG59IGZyb20gJy4uL21vZHVsZXMvdmFsaWRhdG9yJztcclxuaW1wb3J0IHsgc2VuZEVycm9yUmVzcG9uc2UgfSBmcm9tICcuLi91dGlscy9zZW5kUmVzcG9uc2UnO1xyXG4gIFxyXG4vKipcclxuICAgKiBAZGVzY3JpcHRpb24gdXNlckF1dGggaXMgY2xhcyB0aGF0IGhhbmRsZXMgdXNlciBkYXRhIHZhbGlkYXRpb25cclxuICAgKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgcmVxdWVzdFZhbGlkYXRvciB7XHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtyZXF9IHJlcSBvYmplY3RcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3Jlc30gcmVzIG9iamVjdFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7bmV4dH0gbmV4dCBmb3J3YXJkcyByZXF1ZXN0IHRvIHRoZSBuZXh0IG1pZGRsZXdhcmUgZnVuY3Rpb25cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqfSByZXVybnMgYW4gcmVzcG9uc2Ugb2JqZWN0XHJcbiAgICAgKi9cclxuICBzdGF0aWMgdm90ZXJWYWxpZGF0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICBjb25zdCB7XHJcbiAgICAgIGNvdW50cnksIHN0YXRlLCBnZW5kZXIsIGNpdHksIGRhdGVPZkJpcnRoLCByZXNpZGVudGlhbEFkZHJlc3MgXHJcbiAgICB9ID0gcmVxLmJvZHk7XHJcbiAgXHJcbiAgICBjb25zdCBzY2hlbWEgPSB7XHJcbiAgICAgIGNvdW50cnk6IGluVmFsaWROYW1lKCdDb3VudHJ5JywgY291bnRyeSksXHJcbiAgICAgIHN0YXRlOiBpblZhbGlkTmFtZSgnU3RhdGUnLCBzdGF0ZSksXHJcbiAgICAgIGdlbmRlcjogaW5WYWxpZEdlbmRlcihnZW5kZXIpLFxyXG4gICAgICBjaXR5OiBpblZhbGlkTmFtZSgnY2l0eScsIGNpdHkpLFxyXG4gICAgICBkYXRlX29mX2JpcnRoOiBpblZhbGlkRGF0ZShkYXRlT2ZCaXJ0aCksXHJcbiAgICAgIHJlc2lkZW50aWFsX2FkZHJlc3M6IGluVmFsaWRBZGRyZXNzKHJlc2lkZW50aWFsQWRkcmVzcyksXHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBjb25zdCBlcnJvciA9IHZhbGlkYXRlKHNjaGVtYSk7XHJcbiAgICBpZiAoZXJyb3IpIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQyMiwgZXJyb3IpO1xyXG4gICAgcmV0dXJuIG5leHQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7cmVxfSByZXEgb2JqZWN0XHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtyZXN9IHJlcyBvYmplY3RcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge25leHR9IG5leHQgZm9yd2FyZHMgcmVxdWVzdCB0byB0aGUgbmV4dCBtaWRkbGV3YXJlIGZ1bmN0aW9uXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMge29ian0gcmV1cm5zIGFuIHJlc3BvbnNlIG9iamVjdFxyXG4gICAgICovXHJcbiAgc3RhdGljIHBhcnR5VmFsaWRhdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICBwYXJ0eU5hbWUsIHBob25lTnVtYmVyLCBwYXJ0eUFkZHJlc3NcclxuICAgIH0gPSByZXEuYm9keTtcclxuICAgIGNvbnN0IHNjaGVtYSA9IHtcclxuICAgICAgcGFydHlOYW1lOiBpblZhbGlkUGFydHlOYW1lKHBhcnR5TmFtZSksXHJcbiAgICAgIHBob25lTnVtYmVyOiBpblZhbGlkUGhvbmVOdW1iZXIocGhvbmVOdW1iZXIpLFxyXG4gICAgICBwYXJ0eUFkZHJlc3M6IGluVmFsaWRBZGRyZXNzKHBhcnR5QWRkcmVzcyksXHJcbiAgICB9O1xyXG4gICAgICBcclxuICAgIGNvbnN0IGVycm9yID0gdmFsaWRhdGUoc2NoZW1hKTtcclxuICAgIGlmIChlcnJvcikgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDIyLCBlcnJvcik7XHJcbiAgICByZXR1cm4gbmV4dCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtyZXF9IHJlcSBvYmplY3RcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3Jlc30gcmVzIG9iamVjdFxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7bmV4dH0gbmV4dCBmb3J3YXJkcyByZXF1ZXN0IHRvIHRoZSBuZXh0IG1pZGRsZXdhcmUgZnVuY3Rpb25cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqfSByZXR1cm5zIGFuIHJlc3BvbnNlIG9iamVjdFxyXG4gICAgICovXHJcbiAgc3RhdGljIGNhbmRpZGF0ZVZhbGlkYXRpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IHtcclxuICAgICAgb2ZmaWNlQ29udGVzdGluZywgcGFydHlOYW1lXHJcbiAgICB9ID0gcmVxLmJvZHk7XHJcbiAgICBjb25zdCBzY2hlbWEgPSB7XHJcbiAgICAgIG9mZmljZUNvbnRlc3Rpbmc6IGluVmFsaWROYW1lKCdvZmZpY2VDb250ZXN0aW5nJywgb2ZmaWNlQ29udGVzdGluZyksXHJcbiAgICAgIHBhcnR5TmFtZTogaW5WYWxpZFBhcnR5TmFtZShwYXJ0eU5hbWUpLFxyXG4gICAgfTtcclxuICAgICAgICBcclxuICAgIGNvbnN0IGVycm9yID0gdmFsaWRhdGUoc2NoZW1hKTtcclxuICAgIGlmIChlcnJvcikgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDIyLCBlcnJvcik7XHJcbiAgICByZXR1cm4gbmV4dCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NycHRpb24gaGFuZGxlcyBhIHZvdGVyIGpvaW4gYSBwb2xpdGljYWwgcGFydHlcclxuICAgKiBcclxuICAgKiBAcGFyYW0ge3JlcX0gcmVxIGhhbmRsZXMgdGhlIHJlcXVlc3QgYm9keVxyXG4gICAqIFxyXG4gICAqIEBwYXJhbSB7cmVzfSByZXMgb2JqZWN0XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge25leHR9IG5leHQgZm9yd2FyZHMgcmVxdWVzdCB0byB0aGUgbmV4dCBtaWRkbGV3YXJlIGZ1bmN0aW9uXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqfSByZXR1cm5zIGFuIHJlc3BvbnNlIG9iamVjdFxyXG4gICAqL1xyXG4gIHN0YXRpYyB2b3RlckpvaW5WYWxpZGF0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICBjb25zdCB7XHJcbiAgICAgIHBhcnR5TmFtZVxyXG4gICAgfSA9IHJlcS5ib2R5O1xyXG4gICAgY29uc3Qgc2NoZW1hID0ge1xyXG4gICAgICBwYXJ0eU5hbWU6IGluVmFsaWRQYXJ0eU5hbWUocGFydHlOYW1lKSxcclxuICAgIH07XHJcbiAgICAgICAgXHJcbiAgICBjb25zdCBlcnJvciA9IHZhbGlkYXRlKHNjaGVtYSk7XHJcbiAgICBpZiAoZXJyb3IpIHJldHVybiBzZW5kRXJyb3JSZXNwb25zZShyZXMsIDQyMiwgZXJyb3IpO1xyXG4gICAgcmV0dXJuIG5leHQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcnB0aW9uIGhhbmRsZXMgYSB2b3RlciBqb2luIGEgcG9saXRpY2FsIHBhcnR5XHJcbiAgICogXHJcbiAgICogQHBhcmFtIHtyZXF9IHJlcSBoYW5kbGVzIHRoZSByZXF1ZXN0IGJvZHlcclxuICAgKiBcclxuICAgKiBAcGFyYW0ge3Jlc30gcmVzIG9iamVjdFxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtuZXh0fSBuZXh0IGZvcndhcmRzIHJlcXVlc3QgdG8gdGhlIG5leHQgbWlkZGxld2FyZSBmdW5jdGlvblxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29ian0gcmV0dXJucyBhbiByZXNwb25zZSBvYmplY3RcclxuICAgKi9cclxuICBzdGF0aWMgcGFydHlBZG1pblZhbGlkYXRpb24ocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IHtcclxuICAgICAgcGFydHlOYW1lXHJcbiAgICB9ID0gcmVxLmJvZHk7XHJcbiAgICBjb25zdCBzY2hlbWEgPSB7XHJcbiAgICAgIHBhcnR5TmFtZTogaW5WYWxpZFBhcnR5TmFtZShwYXJ0eU5hbWUpLFxyXG4gICAgfTtcclxuICAgICAgICBcclxuICAgIGNvbnN0IGVycm9yID0gdmFsaWRhdGUoc2NoZW1hKTtcclxuICAgIGlmIChlcnJvcikgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDIyLCBlcnJvcik7XHJcbiAgICByZXR1cm4gbmV4dCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NycHRpb24gaGFuZGxlcyBhIHZvdGVyIGpvaW4gYSBwb2xpdGljYWwgcGFydHlcclxuICAgKiBcclxuICAgKiBAcGFyYW0ge3JlcX0gcmVxIGhhbmRsZXMgdGhlIHJlcXVlc3QgYm9keVxyXG4gICAqIFxyXG4gICAqIEBwYXJhbSB7cmVzfSByZXMgb2JqZWN0XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge25leHR9IG5leHQgZm9yd2FyZHMgcmVxdWVzdCB0byB0aGUgbmV4dCBtaWRkbGV3YXJlIGZ1bmN0aW9uXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqfSByZXR1cm5zIGFuIHJlc3BvbnNlIG9iamVjdFxyXG4gICAqL1xyXG4gIHN0YXRpYyBhcHByb3ZlQ2FuZGlkYWN5VmFsaWRhdGlvbihyZXEsIHJlcywgbmV4dCkge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICBzdGF0dXNcclxuICAgIH0gPSByZXEuYm9keTtcclxuICAgIGNvbnN0IHNjaGVtYSA9IHtcclxuICAgICAgc3RhdHVzOiBpblZhbGlkTmFtZShzdGF0dXMpLFxyXG4gICAgfTtcclxuICAgICAgICBcclxuICAgIGNvbnN0IGVycm9yID0gdmFsaWRhdGUoc2NoZW1hKTtcclxuICAgIGlmIChlcnJvcikgcmV0dXJuIHNlbmRFcnJvclJlc3BvbnNlKHJlcywgNDIyLCBlcnJvcik7XHJcbiAgICByZXR1cm4gbmV4dCgpO1xyXG4gIH1cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "RequestValidator.js"
      ],
      "names": [
        "requestValidator",
        "req",
        "res",
        "next",
        "body",
        "country",
        "state",
        "gender",
        "city",
        "dateOfBirth",
        "residentialAddress",
        "schema",
        "date_of_birth",
        "residential_address",
        "error",
        "partyName",
        "phoneNumber",
        "partyAddress",
        "officeContesting",
        "status"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AAIA;;AAEA;;;IAGqBA,gB;;;;;;;;;;AACnB;;;;;;;;;;oCAUuBC,G,EAAKC,G,EAAKC,I,EAAM;AAAA,sBAGjCF,GAAG,CAACG,IAH6B;AAAA,UAEnCC,OAFmC,aAEnCA,OAFmC;AAAA,UAE1BC,KAF0B,aAE1BA,KAF0B;AAAA,UAEnBC,MAFmB,aAEnBA,MAFmB;AAAA,UAEXC,IAFW,aAEXA,IAFW;AAAA,UAELC,WAFK,aAELA,WAFK;AAAA,UAEQC,kBAFR,aAEQA,kBAFR;AAKrC,UAAMC,MAAM,GAAG;AACbN,QAAAA,OAAO,EAAE,4BAAY,SAAZ,EAAuBA,OAAvB,CADI;AAEbC,QAAAA,KAAK,EAAE,4BAAY,OAAZ,EAAqBA,KAArB,CAFM;AAGbC,QAAAA,MAAM,EAAE,8BAAcA,MAAd,CAHK;AAIbC,QAAAA,IAAI,EAAE,4BAAY,MAAZ,EAAoBA,IAApB,CAJO;AAKbI,QAAAA,aAAa,EAAE,4BAAYH,WAAZ,CALF;AAMbI,QAAAA,mBAAmB,EAAE,+BAAeH,kBAAf;AANR,OAAf;AASA,UAAMI,KAAK,GAAG,yBAASH,MAAT,CAAd;AACA,UAAIG,KAAJ,EAAW,OAAO,qCAAkBZ,GAAlB,EAAuB,GAAvB,EAA4BY,KAA5B,CAAP;AACX,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;;oCAUuBF,G,EAAKC,G,EAAKC,I,EAAM;AAAA,uBAGjCF,GAAG,CAACG,IAH6B;AAAA,UAEnCW,SAFmC,cAEnCA,SAFmC;AAAA,UAExBC,WAFwB,cAExBA,WAFwB;AAAA,UAEXC,YAFW,cAEXA,YAFW;AAIrC,UAAMN,MAAM,GAAG;AACbI,QAAAA,SAAS,EAAE,iCAAiBA,SAAjB,CADE;AAEbC,QAAAA,WAAW,EAAE,mCAAmBA,WAAnB,CAFA;AAGbC,QAAAA,YAAY,EAAE,+BAAeA,YAAf;AAHD,OAAf;AAMA,UAAMH,KAAK,GAAG,yBAASH,MAAT,CAAd;AACA,UAAIG,KAAJ,EAAW,OAAO,qCAAkBZ,GAAlB,EAAuB,GAAvB,EAA4BY,KAA5B,CAAP;AACX,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;;wCAU2BF,G,EAAKC,G,EAAKC,I,EAAM;AAAA,uBAGrCF,GAAG,CAACG,IAHiC;AAAA,UAEvCc,gBAFuC,cAEvCA,gBAFuC;AAAA,UAErBH,SAFqB,cAErBA,SAFqB;AAIzC,UAAMJ,MAAM,GAAG;AACbO,QAAAA,gBAAgB,EAAE,4BAAY,kBAAZ,EAAgCA,gBAAhC,CADL;AAEbH,QAAAA,SAAS,EAAE,iCAAiBA,SAAjB;AAFE,OAAf;AAKA,UAAMD,KAAK,GAAG,yBAASH,MAAT,CAAd;AACA,UAAIG,KAAJ,EAAW,OAAO,qCAAkBZ,GAAlB,EAAuB,GAAvB,EAA4BY,KAA5B,CAAP;AACX,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;;;wCAW2BF,G,EAAKC,G,EAAKC,I,EAAM;AAAA,UAEvCY,SAFuC,GAGrCd,GAAG,CAACG,IAHiC,CAEvCW,SAFuC;AAIzC,UAAMJ,MAAM,GAAG;AACbI,QAAAA,SAAS,EAAE,iCAAiBA,SAAjB;AADE,OAAf;AAIA,UAAMD,KAAK,GAAG,yBAASH,MAAT,CAAd;AACA,UAAIG,KAAJ,EAAW,OAAO,qCAAkBZ,GAAlB,EAAuB,GAAvB,EAA4BY,KAA5B,CAAP;AACX,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;;;yCAW4BF,G,EAAKC,G,EAAKC,I,EAAM;AAAA,UAExCY,SAFwC,GAGtCd,GAAG,CAACG,IAHkC,CAExCW,SAFwC;AAI1C,UAAMJ,MAAM,GAAG;AACbI,QAAAA,SAAS,EAAE,iCAAiBA,SAAjB;AADE,OAAf;AAIA,UAAMD,KAAK,GAAG,yBAASH,MAAT,CAAd;AACA,UAAIG,KAAJ,EAAW,OAAO,qCAAkBZ,GAAlB,EAAuB,GAAvB,EAA4BY,KAA5B,CAAP;AACX,aAAOX,IAAI,EAAX;AACD;AAED;;;;;;;;;;;;;;+CAWkCF,G,EAAKC,G,EAAKC,I,EAAM;AAAA,UAE9CgB,MAF8C,GAG5ClB,GAAG,CAACG,IAHwC,CAE9Ce,MAF8C;AAIhD,UAAMR,MAAM,GAAG;AACbQ,QAAAA,MAAM,EAAE,4BAAYA,MAAZ;AADK,OAAf;AAIA,UAAML,KAAK,GAAG,yBAASH,MAAT,CAAd;AACA,UAAIG,KAAJ,EAAW,OAAO,qCAAkBZ,GAAlB,EAAuB,GAAvB,EAA4BY,KAA5B,CAAP;AACX,aAAOX,IAAI,EAAX;AACD",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\middlewares",
      "sourcesContent": [
        "import {\r\n  validate, inValidDate, inValidName, inValidAddress, inValidGender,\r\n  inValidPhoneNumber, inValidPartyName\r\n} from '../modules/validator';\r\nimport { sendErrorResponse } from '../utils/sendResponse';\r\n  \r\n/**\r\n   * @description userAuth is clas that handles user data validation\r\n   */\r\nexport default class requestValidator {\r\n  /**\r\n     *\r\n     * @param {req} req object\r\n     *\r\n     * @param {res} res object\r\n     *\r\n     * @param {next} next forwards request to the next middleware function\r\n     *\r\n     * @returns {obj} reurns an response object\r\n     */\r\n  static voterValidation(req, res, next) {\r\n    const {\r\n      country, state, gender, city, dateOfBirth, residentialAddress \r\n    } = req.body;\r\n  \r\n    const schema = {\r\n      country: inValidName('Country', country),\r\n      state: inValidName('State', state),\r\n      gender: inValidGender(gender),\r\n      city: inValidName('city', city),\r\n      date_of_birth: inValidDate(dateOfBirth),\r\n      residential_address: inValidAddress(residentialAddress),\r\n    };\r\n    \r\n    const error = validate(schema);\r\n    if (error) return sendErrorResponse(res, 422, error);\r\n    return next();\r\n  }\r\n\r\n  /**\r\n     *\r\n     * @param {req} req object\r\n     *\r\n     * @param {res} res object\r\n     *\r\n     * @param {next} next forwards request to the next middleware function\r\n     *\r\n     * @returns {obj} reurns an response object\r\n     */\r\n  static partyValidation(req, res, next) {\r\n    const {\r\n      partyName, phoneNumber, partyAddress\r\n    } = req.body;\r\n    const schema = {\r\n      partyName: inValidPartyName(partyName),\r\n      phoneNumber: inValidPhoneNumber(phoneNumber),\r\n      partyAddress: inValidAddress(partyAddress),\r\n    };\r\n      \r\n    const error = validate(schema);\r\n    if (error) return sendErrorResponse(res, 422, error);\r\n    return next();\r\n  }\r\n\r\n  /**\r\n     *\r\n     * @param {req} req object\r\n     *\r\n     * @param {res} res object\r\n     *\r\n     * @param {next} next forwards request to the next middleware function\r\n     *\r\n     * @returns {obj} returns an response object\r\n     */\r\n  static candidateValidation(req, res, next) {\r\n    const {\r\n      officeContesting, partyName\r\n    } = req.body;\r\n    const schema = {\r\n      officeContesting: inValidName('officeContesting', officeContesting),\r\n      partyName: inValidPartyName(partyName),\r\n    };\r\n        \r\n    const error = validate(schema);\r\n    if (error) return sendErrorResponse(res, 422, error);\r\n    return next();\r\n  }\r\n\r\n  /**\r\n   * @descrption handles a voter join a political party\r\n   * \r\n   * @param {req} req handles the request body\r\n   * \r\n   * @param {res} res object\r\n   *\r\n   * @param {next} next forwards request to the next middleware function\r\n   *\r\n   * @returns {obj} returns an response object\r\n   */\r\n  static voterJoinValidation(req, res, next) {\r\n    const {\r\n      partyName\r\n    } = req.body;\r\n    const schema = {\r\n      partyName: inValidPartyName(partyName),\r\n    };\r\n        \r\n    const error = validate(schema);\r\n    if (error) return sendErrorResponse(res, 422, error);\r\n    return next();\r\n  }\r\n\r\n  /**\r\n   * @descrption handles a voter join a political party\r\n   * \r\n   * @param {req} req handles the request body\r\n   * \r\n   * @param {res} res object\r\n   *\r\n   * @param {next} next forwards request to the next middleware function\r\n   *\r\n   * @returns {obj} returns an response object\r\n   */\r\n  static partyAdminValidation(req, res, next) {\r\n    const {\r\n      partyName\r\n    } = req.body;\r\n    const schema = {\r\n      partyName: inValidPartyName(partyName),\r\n    };\r\n        \r\n    const error = validate(schema);\r\n    if (error) return sendErrorResponse(res, 422, error);\r\n    return next();\r\n  }\r\n\r\n  /**\r\n   * @descrption handles a voter join a political party\r\n   * \r\n   * @param {req} req handles the request body\r\n   * \r\n   * @param {res} res object\r\n   *\r\n   * @param {next} next forwards request to the next middleware function\r\n   *\r\n   * @returns {obj} returns an response object\r\n   */\r\n  static approveCandidacyValidation(req, res, next) {\r\n    const {\r\n      status\r\n    } = req.body;\r\n    const schema = {\r\n      status: inValidName(status),\r\n    };\r\n        \r\n    const error = validate(schema);\r\n    if (error) return sendErrorResponse(res, 422, error);\r\n    return next();\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579048885431
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\controllers\\\\RegistrationController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\RegistrationController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\RegistrationController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers\\RegistrationController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
        "sourceFileName": "RegistrationController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _PartyRepository = _interopRequireDefault(require(\"../repositories/PartyRepository\"));\n\nvar _CandidateRepository = _interopRequireDefault(require(\"../repositories/CandidateRepository\"));\n\nvar _UserRepository = _interopRequireDefault(require(\"../repositories/UserRepository\"));\n\nvar _UserPartyRepository = _interopRequireDefault(require(\"../repositories/UserPartyRepository\"));\n\nvar _sendResponse = require(\"../utils/sendResponse\");\n\n/* eslint-disable camelcase */\n\n/* eslint-disable class-methods-use-this */\n\n/**\r\n * @module registration controller\r\n * \r\n * @description Voter controller is a module that handles the control of voter registeration\r\n * \r\n * @returns {object} returns a response containing the user object\r\n * \r\n * @memberof RegistrationController\r\n */\nvar RegistrationController =\n/*#__PURE__*/\nfunction () {\n  function RegistrationController() {\n    (0, _classCallCheck2[\"default\"])(this, RegistrationController);\n  }\n\n  (0, _createClass2[\"default\"])(RegistrationController, [{\n    key: \"voterRegistration\",\n\n    /**\r\n      * @description manages the registrations of voters\r\n      * \r\n      * @param {*} req - the request body method\r\n      * \r\n      * @param {*} res - the response body method\r\n      * \r\n      */\n    value: function () {\n      var _voterRegistration = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var _req$body, country, state, gender, city, residential_address, date_of_birth, uuid;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _req$body = req.body, country = _req$body.country, state = _req$body.state, gender = _req$body.gender, city = _req$body.city, residential_address = _req$body.residentialAddress, date_of_birth = _req$body.dateOfBirth;\n                uuid = req.userData.uuid;\n                _context.prev = 2;\n                _context.next = 5;\n                return _UserRepository[\"default\"].update({\n                  country: country,\n                  state: state,\n                  city: city,\n                  gender: gender,\n                  residential_address: residential_address,\n                  date_of_birth: date_of_birth\n                }, uuid);\n\n              case 5:\n                return _context.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 200, 'Your voters registration done succesfully'));\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                next(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      function voterRegistration(_x, _x2, _x3) {\n        return _voterRegistration.apply(this, arguments);\n      }\n\n      return voterRegistration;\n    }()\n    /** \r\n     * @description manages the registrations of party\r\n     * \r\n     * @param {req} req- the request body method\r\n     * \r\n     * @param {res} res- the response body method\r\n     * \r\n     * @param {return} returns the succes message\r\n     * \r\n     * @param {next} next- passes command to the next middleware\r\n     * \r\n     */\n\n  }, {\n    key: \"candidateRegistration\",\n    value: function () {\n      var _candidateRegistration = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var _req$body2, officeContesting, partyName, uuid, _ref, politicalParty, candidate, candidateInfo;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _req$body2 = req.body, officeContesting = _req$body2.officeContesting, partyName = _req$body2.partyName;\n                uuid = req.userData.uuid;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return _PartyRepository[\"default\"].getOne({\n                  party_name: partyName\n                });\n\n              case 5:\n                _ref = _context2.sent;\n                politicalParty = _ref.uuid;\n                console.log('i am here');\n\n                if (politicalParty) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 409, \"Party \".concat(partyName, \" does not exists\")));\n\n              case 10:\n                _context2.next = 12;\n                return _UserRepository[\"default\"].getOne({\n                  uuid: uuid,\n                  party_uuid: politicalParty\n                });\n\n              case 12:\n                candidate = _context2.sent;\n\n                if (candidate) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 400, \"You are not eligible to contest with \".concat(partyName, \" as only party members can\")));\n\n              case 15:\n                candidateInfo = {\n                  officeContesting: officeContesting,\n                  party_uuid: politicalParty\n                };\n                _context2.next = 18;\n                return _CandidateRepository[\"default\"].create(candidateInfo);\n\n              case 18:\n                return _context2.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 201, \"Your registration to contest \".concat(officeContesting, \" with \").concat(partyName, \" succesful\")));\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t0 = _context2[\"catch\"](2);\n                next(_context2.t0);\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 21]]);\n      }));\n\n      function candidateRegistration(_x4, _x5, _x6) {\n        return _candidateRegistration.apply(this, arguments);\n      }\n\n      return candidateRegistration;\n    }()\n    /**\r\n    * @description registers political parties\r\n    * \r\n    * @param {method} req - request body object\r\n    * \r\n    * @param  {method} res - response body object\r\n    * \r\n    * @param  {method} next- passes command to next middleware\r\n    * \r\n    * @returns returns the value of the function\r\n    * \r\n    *  @memberof RegistrationController\r\n    * \r\n    */\n\n  }, {\n    key: \"partyRegistration\",\n    value: function () {\n      var _partyRegistration = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var _req$body3, party_name, phone_number, address, party, partyInfo;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _req$body3 = req.body, party_name = _req$body3.partyName, phone_number = _req$body3.phoneNumber, address = _req$body3.partyAddress;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return _PartyRepository[\"default\"].getOne({\n                  party_name: party_name\n                });\n\n              case 4:\n                party = _context3.sent;\n\n                if (!party) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 409, \"Party \".concat(party_name, \" already exists\")));\n\n              case 7:\n                partyInfo = {\n                  party_name: party_name,\n                  phone_number: phone_number,\n                  address: address\n                };\n                _context3.next = 10;\n                return _PartyRepository[\"default\"].create(partyInfo);\n\n              case 10:\n                return _context3.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 201, \"Party \".concat(party_name, \" creation submitted succesfully\")));\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](1);\n                next(_context3.t0);\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 13]]);\n      }));\n\n      function partyRegistration(_x7, _x8, _x9) {\n        return _partyRegistration.apply(this, arguments);\n      }\n\n      return partyRegistration;\n    }()\n    /**\r\n    * @description registers political parties\r\n    * \r\n    * @param {method} req - request body object\r\n    * \r\n    * @param  {method} res - response body object\r\n    * \r\n    * @param  {method} next- passes command to next middleware\r\n    * \r\n    * @returns returns the value of the function\r\n    */\n\n  }, {\n    key: \"voterJoinParty\",\n    value: function () {\n      var _voterJoinParty = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var party_name, uuid, _ref2, party_uuid;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                party_name = req.body.partyName;\n                uuid = req.userData.uuid;\n                _context4.prev = 2;\n                _context4.next = 5;\n                return _PartyRepository[\"default\"].getOne({\n                  party_name: party_name\n                });\n\n              case 5:\n                _ref2 = _context4.sent;\n                party_uuid = _ref2.uuid;\n\n                if (party_uuid) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", (0, _sendResponse.sendErrorResponse)(res, 404, \"Party \".concat(party_name, \" does not exists\")));\n\n              case 9:\n                _context4.next = 11;\n                return _UserPartyRepository[\"default\"].create({\n                  party_uuid: party_uuid,\n                  user_uuid: uuid\n                });\n\n              case 11:\n                return _context4.abrupt(\"return\", (0, _sendResponse.successResponse)(res, 200, \"Your request to join \".concat(party_name, \" succesfully\")));\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](2);\n                next(_context4.t0);\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 14]]);\n      }));\n\n      function voterJoinParty(_x10, _x11, _x12) {\n        return _voterJoinParty.apply(this, arguments);\n      }\n\n      return voterJoinParty;\n    }()\n  }]);\n  return RegistrationController;\n}();\n\nvar _default = new RegistrationController();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "RegistrationController.js"
      ],
      "names": [
        "RegistrationController",
        "req",
        "res",
        "next",
        "body",
        "country",
        "state",
        "gender",
        "city",
        "residential_address",
        "residentialAddress",
        "date_of_birth",
        "dateOfBirth",
        "uuid",
        "userData",
        "UserRepository",
        "update",
        "officeContesting",
        "partyName",
        "PartyRepository",
        "getOne",
        "party_name",
        "politicalParty",
        "console",
        "log",
        "party_uuid",
        "candidate",
        "candidateInfo",
        "CandidateRepository",
        "create",
        "phone_number",
        "phoneNumber",
        "address",
        "partyAddress",
        "party",
        "partyInfo",
        "UserPartyRepository",
        "user_uuid"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AANA;;AACA;;AAQA;;;;;;;;;IASMA,sB;;;;;;;;;;AACJ;;;;;;;;;;;oDAQwBC,G,EAAKC,G,EAAKC,I;;;;;;;4BAG5BF,GAAG,CAACG,I,EADNC,O,aAAAA,O,EAASC,K,aAAAA,K,EAAOC,M,aAAAA,M,EAAQC,I,aAAAA,I,EAA0BC,mB,aAApBC,kB,EAAsDC,a,aAAbC,W;AAEjEC,gBAAAA,I,GAASZ,GAAG,CAACa,Q,CAAbD,I;;;uBAEAE,2BAAeC,MAAf,CAAsB;AAC1BX,kBAAAA,OAAO,EAAPA,OAD0B;AACjBC,kBAAAA,KAAK,EAALA,KADiB;AACVE,kBAAAA,IAAI,EAAJA,IADU;AACJD,kBAAAA,MAAM,EAANA,MADI;AACIE,kBAAAA,mBAAmB,EAAnBA,mBADJ;AACyBE,kBAAAA,aAAa,EAAbA;AADzB,iBAAtB,EAEHE,IAFG,C;;;iDAGC,mCAAgBX,GAAhB,EAAqB,GAArB,EAA0B,2CAA1B,C;;;;;AAEPC,gBAAAA,IAAI,aAAJ;;;;;;;;;;;;;;;;AAIJ;;;;;;;;;;;;;;;;;;qDAY4BF,G,EAAKC,G,EAAKC,I;;;;;;;6BACIF,GAAG,CAACG,I,EAApCa,gB,cAAAA,gB,EAAkBC,S,cAAAA,S;AAClBL,gBAAAA,I,GAASZ,GAAG,CAACa,Q,CAAbD,I;;;uBAEiCM,4BAAgBC,MAAhB,CAAuB;AAAEC,kBAAAA,UAAU,EAAEH;AAAd,iBAAvB,C;;;;AAAzBI,gBAAAA,c,QAANT,I;AACRU,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;oBACKF,c;;;;;kDAAuB,qCAAkBpB,GAAlB,EAAuB,GAAvB,kBAAqCgB,SAArC,sB;;;;uBACJH,2BAAeK,MAAf,CAAsB;AAAEP,kBAAAA,IAAI,EAAJA,IAAF;AAAQY,kBAAAA,UAAU,EAAEH;AAApB,iBAAtB,C;;;AAAlBI,gBAAAA,S;;oBACDA,S;;;;;kDAAkB,qCAAkBxB,GAAlB,EAAuB,GAAvB,iDAAoEgB,SAApE,gC;;;AACjBS,gBAAAA,a,GAAgB;AAAEV,kBAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBQ,kBAAAA,UAAU,EAAEH;AAAhC,iB;;uBAChBM,gCAAoBC,MAApB,CAA2BF,aAA3B,C;;;kDACC,mCAAgBzB,GAAhB,EAAqB,GAArB,yCAA0De,gBAA1D,mBAAmFC,SAAnF,gB;;;;;AAEPf,gBAAAA,IAAI,cAAJ;;;;;;;;;;;;;;;;AAIJ;;;;;;;;;;;;;;;;;;;;qDAcwBF,G,EAAKC,G,EAAKC,I;;;;;;;6BACoDF,GAAG,CAACG,I,EAArEiB,U,cAAXH,S,EAAoCY,Y,cAAbC,W,EAAyCC,O,cAAdC,Y;;;uBAEpCd,4BAAgBC,MAAhB,CAAuB;AAAEC,kBAAAA,UAAU,EAAVA;AAAF,iBAAvB,C;;;AAAda,gBAAAA,K;;qBACFA,K;;;;;kDAAc,qCAAkBhC,GAAlB,EAAuB,GAAvB,kBAAqCmB,UAArC,qB;;;AACZc,gBAAAA,S,GAAY;AAChBd,kBAAAA,UAAU,EAAVA,UADgB;AACJS,kBAAAA,YAAY,EAAZA,YADI;AACUE,kBAAAA,OAAO,EAAPA;AADV,iB;;uBAGZb,4BAAgBU,MAAhB,CAAuBM,SAAvB,C;;;kDACC,mCAAgBjC,GAAhB,EAAqB,GAArB,kBAAmCmB,UAAnC,qC;;;;;AAEPlB,gBAAAA,IAAI,cAAJ;;;;;;;;;;;;;;;;AAIJ;;;;;;;;;;;;;;;;;qDAWqBF,G,EAAKC,G,EAAKC,I;;;;;;;AACVkB,gBAAAA,U,GAAepB,GAAG,CAACG,I,CAA9Bc,S;AACAL,gBAAAA,I,GAASZ,GAAG,CAACa,Q,CAAbD,I;;;uBAE6BM,4BAAgBC,MAAhB,CAAuB;AAAEC,kBAAAA,UAAU,EAAVA;AAAF,iBAAvB,C;;;;AAArBI,gBAAAA,U,SAANZ,I;;oBACHY,U;;;;;kDAAmB,qCAAkBvB,GAAlB,EAAuB,GAAvB,kBAAqCmB,UAArC,sB;;;;uBAClBe,gCAAoBP,MAApB,CAA2B;AAAEJ,kBAAAA,UAAU,EAAVA,UAAF;AAAcY,kBAAAA,SAAS,EAAExB;AAAzB,iBAA3B,C;;;kDACC,mCAAgBX,GAAhB,EAAqB,GAArB,iCAAkDmB,UAAlD,kB;;;;;AAEPlB,gBAAAA,IAAI,cAAJ;;;;;;;;;;;;;;;;;;;;eAKS,IAAIH,sBAAJ,E",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\controllers",
      "sourcesContent": [
        "/* eslint-disable camelcase */\r\n/* eslint-disable class-methods-use-this */\r\nimport PartyRepository from '../repositories/PartyRepository';\r\nimport CandidateRepository from '../repositories/CandidateRepository';\r\nimport UserRepository from '../repositories/UserRepository';\r\nimport UserPartyRepository from '../repositories/UserPartyRepository';\r\nimport { sendErrorResponse, successResponse } from '../utils/sendResponse';\r\n\r\n\r\n/**\r\n * @module registration controller\r\n * \r\n * @description Voter controller is a module that handles the control of voter registeration\r\n * \r\n * @returns {object} returns a response containing the user object\r\n * \r\n * @memberof RegistrationController\r\n */\r\nclass RegistrationController {\r\n  /**\r\n    * @description manages the registrations of voters\r\n    * \r\n    * @param {*} req - the request body method\r\n    * \r\n    * @param {*} res - the response body method\r\n    * \r\n    */\r\n  async voterRegistration(req, res, next) {\r\n    const {\r\n      country, state, gender, city, residentialAddress: residential_address, dateOfBirth: date_of_birth \r\n    } = req.body;\r\n    const { uuid } = req.userData;\r\n    try {\r\n      await UserRepository.update({\r\n        country, state, city, gender, residential_address, date_of_birth \r\n      }, uuid);\r\n      return successResponse(res, 200, 'Your voters registration done succesfully');\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n\r\n  /** \r\n   * @description manages the registrations of party\r\n   * \r\n   * @param {req} req- the request body method\r\n   * \r\n   * @param {res} res- the response body method\r\n   * \r\n   * @param {return} returns the succes message\r\n   * \r\n   * @param {next} next- passes command to the next middleware\r\n   * \r\n   */\r\n  async candidateRegistration(req, res, next) {\r\n    const { officeContesting, partyName } = req.body;\r\n    const { uuid } = req.userData;\r\n    try {\r\n      const { uuid: politicalParty } = await PartyRepository.getOne({ party_name: partyName });\r\n      console.log('i am here');\r\n      if (!politicalParty) return sendErrorResponse(res, 409, `Party ${partyName} does not exists`);\r\n      const candidate = await UserRepository.getOne({ uuid, party_uuid: politicalParty });\r\n      if (!candidate) return sendErrorResponse(res, 400, `You are not eligible to contest with ${partyName} as only party members can`);\r\n      const candidateInfo = { officeContesting, party_uuid: politicalParty };\r\n      await CandidateRepository.create(candidateInfo);  \r\n      return successResponse(res, 201, `Your registration to contest ${officeContesting} with ${partyName} succesful`);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n    \r\n  /**\r\n * @description registers political parties\r\n * \r\n * @param {method} req - request body object\r\n * \r\n * @param  {method} res - response body object\r\n * \r\n * @param  {method} next- passes command to next middleware\r\n * \r\n * @returns returns the value of the function\r\n * \r\n *  @memberof RegistrationController\r\n * \r\n */\r\n  async partyRegistration(req, res, next) {\r\n    const { partyName: party_name, phoneNumber: phone_number, partyAddress: address } = req.body;\r\n    try {\r\n      const party = await PartyRepository.getOne({ party_name });\r\n      if (party) return sendErrorResponse(res, 409, `Party ${party_name} already exists`);\r\n      const partyInfo = {\r\n        party_name, phone_number, address\r\n      };\r\n      await PartyRepository.create(partyInfo);  \r\n      return successResponse(res, 201, `Party ${party_name} creation submitted succesfully`);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n * @description registers political parties\r\n * \r\n * @param {method} req - request body object\r\n * \r\n * @param  {method} res - response body object\r\n * \r\n * @param  {method} next- passes command to next middleware\r\n * \r\n * @returns returns the value of the function\r\n */\r\n  async voterJoinParty(req, res, next) {\r\n    const { partyName: party_name } = req.body;\r\n    const { uuid } = req.userData;\r\n    try {\r\n      const { uuid: party_uuid } = await PartyRepository.getOne({ party_name });\r\n      if (!party_uuid) return sendErrorResponse(res, 404, `Party ${party_name} does not exists`);  \r\n      await UserPartyRepository.create({ party_uuid, user_uuid: uuid });\r\n      return successResponse(res, 200, `Your request to join ${party_name} succesfully`); \r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RegistrationController();\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579115626711
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"filename\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\\\\src\\\\routes\\\\adminisrtation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\thejust\\\\Desktop\\\\Repository\\\\voting-system\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\adminisrtation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\adminisrtation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes\\adminisrtation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
        "sourceFileName": "adminisrtation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _AuthenticateUser = _interopRequireDefault(require(\"../middlewares/AuthenticateUser\"));\n\nvar _VerifyRoles = _interopRequireDefault(require(\"../middlewares/VerifyRoles\"));\n\nvar _RequestValidator = _interopRequireDefault(require(\"../middlewares/RequestValidator\"));\n\nvar _AdminController = _interopRequireDefault(require(\"../controllers/AdminController\"));\n\nvar adminRouter = (0, _express.Router)();\nadminRouter.patch('/admin/:party_uuid/status', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifyRequester, _AdminController[\"default\"].approveVoterParty);\nadminRouter.patch('/admin/:admin_uuid', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifyRequester, _RequestValidator[\"default\"].partyAdminValidation, _AdminController[\"default\"].approvePartyAdmin);\nadminRouter.patch('/admin', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifyRequester, _RequestValidator[\"default\"].approveCandidacyValidation, _AdminController[\"default\"].approveCandidacy);\nadminRouter.patch('/admin/:party_uuid', _AuthenticateUser[\"default\"], _VerifyRoles[\"default\"].verifyRequester, _RequestValidator[\"default\"].partyAdminValidation, _AdminController[\"default\"].approveParty);\nvar _default = adminRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluaXNydGF0aW9uLmpzIl0sIm5hbWVzIjpbImFkbWluUm91dGVyIiwicGF0Y2giLCJhdXRoZW50aWNhdGVVc2VyIiwidmVyaWZ5Um9sZXMiLCJ2ZXJpZnlSZXF1ZXN0ZXIiLCJBZG1pbkNyb250cm9sbGVyIiwiYXBwcm92ZVZvdGVyUGFydHkiLCJyZXF1ZXN0VmFsaWRhdG9yIiwicGFydHlBZG1pblZhbGlkYXRpb24iLCJhcHByb3ZlUGFydHlBZG1pbiIsImFwcHJvdmVDYW5kaWRhY3lWYWxpZGF0aW9uIiwiYXBwcm92ZUNhbmRpZGFjeSIsImFwcHJvdmVQYXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR0EsSUFBTUEsV0FBVyxHQUFHLHNCQUFwQjtBQUNBQSxXQUFXLENBQUNDLEtBQVosQ0FBa0IsMkJBQWxCLEVBQStDQyw0QkFBL0MsRUFBaUVDLHdCQUFZQyxlQUE3RSxFQUE4RkMsNEJBQWlCQyxpQkFBL0c7QUFDQU4sV0FBVyxDQUFDQyxLQUFaLENBQWtCLG9CQUFsQixFQUF3Q0MsNEJBQXhDLEVBQTBEQyx3QkFBWUMsZUFBdEUsRUFBdUZHLDZCQUFpQkMsb0JBQXhHLEVBQThISCw0QkFBaUJJLGlCQUEvSTtBQUNBVCxXQUFXLENBQUNDLEtBQVosQ0FBa0IsUUFBbEIsRUFBNEJDLDRCQUE1QixFQUE4Q0Msd0JBQVlDLGVBQTFELEVBQTJFRyw2QkFBaUJHLDBCQUE1RixFQUF3SEwsNEJBQWlCTSxnQkFBekk7QUFDQVgsV0FBVyxDQUFDQyxLQUFaLENBQWtCLG9CQUFsQixFQUF3Q0MsNEJBQXhDLEVBQTBEQyx3QkFBWUMsZUFBdEUsRUFBdUZHLDZCQUFpQkMsb0JBQXhHLEVBQThISCw0QkFBaUJPLFlBQS9JO2VBRWVaLFciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx0aGVqdXN0XFxEZXNrdG9wXFxSZXBvc2l0b3J5XFx2b3Rpbmctc3lzdGVtXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgYXV0aGVudGljYXRlVXNlciBmcm9tICcuLi9taWRkbGV3YXJlcy9BdXRoZW50aWNhdGVVc2VyJztcclxuaW1wb3J0IHZlcmlmeVJvbGVzIGZyb20gJy4uL21pZGRsZXdhcmVzL1ZlcmlmeVJvbGVzJztcclxuaW1wb3J0IHJlcXVlc3RWYWxpZGF0b3IgZnJvbSAnLi4vbWlkZGxld2FyZXMvUmVxdWVzdFZhbGlkYXRvcic7XHJcbmltcG9ydCBBZG1pbkNyb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL0FkbWluQ29udHJvbGxlcic7XHJcblxyXG5cclxuY29uc3QgYWRtaW5Sb3V0ZXIgPSBSb3V0ZXIoKTtcclxuYWRtaW5Sb3V0ZXIucGF0Y2goJy9hZG1pbi86cGFydHlfdXVpZC9zdGF0dXMnLCBhdXRoZW50aWNhdGVVc2VyLCB2ZXJpZnlSb2xlcy52ZXJpZnlSZXF1ZXN0ZXIsIEFkbWluQ3JvbnRyb2xsZXIuYXBwcm92ZVZvdGVyUGFydHkpO1xyXG5hZG1pblJvdXRlci5wYXRjaCgnL2FkbWluLzphZG1pbl91dWlkJywgYXV0aGVudGljYXRlVXNlciwgdmVyaWZ5Um9sZXMudmVyaWZ5UmVxdWVzdGVyLCByZXF1ZXN0VmFsaWRhdG9yLnBhcnR5QWRtaW5WYWxpZGF0aW9uLCBBZG1pbkNyb250cm9sbGVyLmFwcHJvdmVQYXJ0eUFkbWluKTtcclxuYWRtaW5Sb3V0ZXIucGF0Y2goJy9hZG1pbicsIGF1dGhlbnRpY2F0ZVVzZXIsIHZlcmlmeVJvbGVzLnZlcmlmeVJlcXVlc3RlciwgcmVxdWVzdFZhbGlkYXRvci5hcHByb3ZlQ2FuZGlkYWN5VmFsaWRhdGlvbiwgQWRtaW5Dcm9udHJvbGxlci5hcHByb3ZlQ2FuZGlkYWN5KTtcclxuYWRtaW5Sb3V0ZXIucGF0Y2goJy9hZG1pbi86cGFydHlfdXVpZCcsIGF1dGhlbnRpY2F0ZVVzZXIsIHZlcmlmeVJvbGVzLnZlcmlmeVJlcXVlc3RlciwgcmVxdWVzdFZhbGlkYXRvci5wYXJ0eUFkbWluVmFsaWRhdGlvbiwgQWRtaW5Dcm9udHJvbGxlci5hcHByb3ZlUGFydHkpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYWRtaW5Sb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "adminisrtation.js"
      ],
      "names": [
        "adminRouter",
        "patch",
        "authenticateUser",
        "verifyRoles",
        "verifyRequester",
        "AdminCrontroller",
        "approveVoterParty",
        "requestValidator",
        "partyAdminValidation",
        "approvePartyAdmin",
        "approveCandidacyValidation",
        "approveCandidacy",
        "approveParty"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA,IAAMA,WAAW,GAAG,sBAApB;AACAA,WAAW,CAACC,KAAZ,CAAkB,2BAAlB,EAA+CC,4BAA/C,EAAiEC,wBAAYC,eAA7E,EAA8FC,4BAAiBC,iBAA/G;AACAN,WAAW,CAACC,KAAZ,CAAkB,oBAAlB,EAAwCC,4BAAxC,EAA0DC,wBAAYC,eAAtE,EAAuFG,6BAAiBC,oBAAxG,EAA8HH,4BAAiBI,iBAA/I;AACAT,WAAW,CAACC,KAAZ,CAAkB,QAAlB,EAA4BC,4BAA5B,EAA8CC,wBAAYC,eAA1D,EAA2EG,6BAAiBG,0BAA5F,EAAwHL,4BAAiBM,gBAAzI;AACAX,WAAW,CAACC,KAAZ,CAAkB,oBAAlB,EAAwCC,4BAAxC,EAA0DC,wBAAYC,eAAtE,EAAuFG,6BAAiBC,oBAAxG,EAA8HH,4BAAiBO,YAA/I;eAEeZ,W",
      "sourceRoot": "C:\\Users\\thejust\\Desktop\\Repository\\voting-system\\src\\routes",
      "sourcesContent": [
        "import { Router } from 'express';\r\nimport authenticateUser from '../middlewares/AuthenticateUser';\r\nimport verifyRoles from '../middlewares/VerifyRoles';\r\nimport requestValidator from '../middlewares/RequestValidator';\r\nimport AdminCrontroller from '../controllers/AdminController';\r\n\r\n\r\nconst adminRouter = Router();\r\nadminRouter.patch('/admin/:party_uuid/status', authenticateUser, verifyRoles.verifyRequester, AdminCrontroller.approveVoterParty);\r\nadminRouter.patch('/admin/:admin_uuid', authenticateUser, verifyRoles.verifyRequester, requestValidator.partyAdminValidation, AdminCrontroller.approvePartyAdmin);\r\nadminRouter.patch('/admin', authenticateUser, verifyRoles.verifyRequester, requestValidator.approveCandidacyValidation, AdminCrontroller.approveCandidacy);\r\nadminRouter.patch('/admin/:party_uuid', authenticateUser, verifyRoles.verifyRequester, requestValidator.partyAdminValidation, AdminCrontroller.approveParty);\r\n\r\nexport default adminRouter;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579099830543
  }
}